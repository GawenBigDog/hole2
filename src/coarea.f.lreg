
;; Function coarea_

967 registers.

Register 22 used 10 times across 1346 insns; set 1 time; user var; crosses 19 calls; GENERAL_REGS or none; pointer.

Register 23 used 8 times across 1354 insns; set 1 time; user var; dies in 3 places; crosses 19 calls; GENERAL_REGS or none; pointer.

Register 24 used 4 times across 556 insns; set 1 time; user var; crosses 10 calls; GENERAL_REGS or none; pointer.

Register 25 used 4 times across 1342 insns; set 1 time; user var; crosses 19 calls; GENERAL_REGS or none; pointer.

Register 26 used 12 times across 1336 insns; set 1 time; user var; dies in 0 places; crosses 19 calls; GENERAL_REGS or none; pointer.

Register 27 used 13 times across 296 insns; set 1 time; user var; dies in 0 places; crosses 4 calls; GENERAL_REGS or none; pointer.

Register 28 used 3 times across 294 insns; set 1 time; user var; dies in 0 places; crosses 4 calls; GENERAL_REGS or none; pointer.

Register 29 used 3 times across 292 insns; set 1 time; user var; dies in 0 places; crosses 4 calls; GENERAL_REGS or none; pointer.

Register 31 used 7 times across 1328 insns; set 1 time; user var; dies in 0 places; crosses 19 calls; GENERAL_REGS or none; pointer.

Register 32 used 7 times across 288 insns; set 1 time; user var; dies in 0 places; crosses 4 calls; GENERAL_REGS or none; pointer.

Register 33 used 9 times across 286 insns; set 1 time; user var; dies in 0 places; crosses 4 calls; GENERAL_REGS or none; pointer.

Register 34 used 14 times across 1322 insns; set 1 time; user var; dies in 0 places; crosses 19 calls; GENERAL_REGS or none; pointer.

Register 36 used 43 times across 1316 insns; set 1 time; user var; dies in 0 places; crosses 19 calls; GENERAL_REGS or none; pointer.

Register 37 used 3 times across 276 insns; set 1 time; user var; dies in 0 places; crosses 4 calls; GENERAL_REGS or none; pointer.

Register 67 used 54 times across 486 insns; set 6 times; user var; dies in 0 places; crosses 3 calls; pref INDEX_REGS, else GENERAL_REGS.

Register 68 used 9 times across 522 insns; set 2 times; user var; dies in 0 places; GENERAL_REGS or none.

Register 69 used 15 times across 56 insns; set 2 times; user var; dies in 0 places; GENERAL_REGS or none.

Register 71 used 11 times across 88 insns; set 2 times; user var; dies in 0 places; 8 bytes; FLOAT_REGS or none.

Register 72 used 14 times across 75 insns; set 2 times; user var; dies in 0 places; 8 bytes; FLOAT_REGS or none.

Register 73 used 86 times across 48 insns; set 11 times; user var; dies in 7 places; 8 bytes; FLOAT_REGS or none.

Register 74 used 7 times across 286 insns; set 2 times; user var; crosses 4 calls; 8 bytes; FLOAT_REGS or none.

Register 75 used 8 times across 294 insns; set 2 times; user var; crosses 4 calls; 8 bytes; FLOAT_REGS or none.

Register 76 used 6 times across 300 insns; set 2 times; user var; crosses 4 calls; 8 bytes; FLOAT_REGS or none.

Register 77 used 8 times across 462 insns; set 2 times; user var; dies in 0 places; crosses 4 calls; 8 bytes; FLOAT_REGS or none.

Register 79 used 7 times across 816 insns; set 2 times; user var; crosses 15 calls; GENERAL_REGS or none.

Register 80 used 7 times across 814 insns; set 2 times; user var; crosses 15 calls; pref INDEX_REGS, else GENERAL_REGS.

Register 81 used 2 times across 3 insns in block 66; set 1 time; user var; GENERAL_REGS or none.

Register 84 used 2 times across 9 insns in block 61; set 1 time; user var; 8 bytes; FLOAT_REGS or none.

Register 86 used 2 times across 97 insns; set 1 time; user var; crosses 15 calls; 8 bytes; FLOAT_REGS or none.

Register 87 used 12 times across 650 insns; set 1 time; user var; dies in 0 places; crosses 19 calls; 8 bytes; FLOAT_REGS or none.

Register 88 used 4 times across 643 insns; set 1 time; user var; dies in 0 places; crosses 18 calls; 8 bytes; FLOAT_REGS or none.

Register 89 used 48 times across 31 insns; set 6 times; user var; dies in 3 places; 8 bytes; FLOAT_REGS or none.

Register 90 used 33 times across 9 insns; set 3 times; user var; dies in 3 places; 8 bytes; FLOAT_REGS or none.

Register 91 used 33 times across 9 insns; set 3 times; user var; dies in 3 places; 8 bytes; FLOAT_REGS or none.

Register 92 used 10 times across 86 insns; set 2 times; user var; GENERAL_REGS or none.

Register 93 used 72 times across 42 insns; set 14 times; user var; dies in 2 places; GENERAL_REGS or none.

Register 96 used 2 times across 4 insns in block 0; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 97 used 2 times across 2 insns in block 0; set 1 time; 8 bytes; pref FP_TOP_REG, else FLOAT_REGS.

Register 98 used 3 times across 2 insns in block 0; set 1 time; FLOAT_REGS or none.

Register 99 used 2 times across 2 insns in block 0; set 1 time; FLOAT_REGS or none.

Register 100 used 8 times across 125 insns; set 2 times; user var; dies in 0 places; crosses 3 calls; pref CREG, else GENERAL_REGS.

Register 102 used 10 times across 23 insns; set 1 time; crosses 1 call; pref INDEX_REGS, else GENERAL_REGS.

Register 107 used 4 times across 2 insns in block 3; set 1 time; GENERAL_REGS or none.

Register 108 used 8 times across 6 insns in block 3; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 109 used 4 times across 2 insns in block 3; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 115 used 5 times across 117 insns; set 1 time; dies in 0 places; crosses 3 calls; GENERAL_REGS or none; pointer.

Register 116 used 4 times across 2 insns in block 3; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 120 used 5 times across 116 insns; set 1 time; dies in 0 places; crosses 3 calls; GENERAL_REGS or none; pointer.

Register 121 used 4 times across 2 insns in block 3; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 123 used 7 times across 114 insns; set 1 time; dies in 0 places; crosses 3 calls; GENERAL_REGS or none; pointer.

Register 125 used 4 times across 4 insns in block 3; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 128 used 6 times across 3 insns in block 4; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 131 used 4 times across 4 insns in block 4; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 133 used 4 times across 4 insns in block 5; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 134 used 8 times across 9 insns; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 136 used 10 times across 9 insns; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 139 used 8 times across 5 insns in block 6; set 2 times; 8 bytes; FLOAT_REGS or none.

Register 144 used 4 times across 2 insns in block 6; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 145 used 4 times across 2 insns in block 6; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 146 used 6 times across 4 insns in block 7; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 148 used 3 times across 226 insns; set 1 time; dies in 0 places; crosses 3 calls; 8 bytes; FLOAT_REGS or none.

Register 154 used 4 times across 4 insns in block 8; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 155 used 3 times across 226 insns; set 1 time; crosses 3 calls; 8 bytes; FLOAT_REGS or none.

Register 158 used 4 times across 2 insns in block 10; set 1 time; GENERAL_REGS or none.

Register 160 used 12 times across 19 insns; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 163 used 6 times across 28 insns; set 1 time; crosses 2 calls; pref INDEX_REGS, else GENERAL_REGS.

Register 164 used 4 times across 4 insns in block 12; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 166 used 4 times across 4 insns in block 13; set 1 time; GENERAL_REGS or none.

Register 167 used 8 times across 6 insns in block 13; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 168 used 4 times across 2 insns in block 13; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 173 used 4 times across 2 insns in block 13; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 178 used 4 times across 2 insns in block 13; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 179 used 18 times across 659 insns; set 1 time; user var; dies in 0 places; crosses 19 calls; pref INDEX_REGS, else GENERAL_REGS.

Register 183 used 8 times across 14 insns in block 13; set 1 time; crosses 2 calls; pref INDEX_REGS, else GENERAL_REGS.

Register 184 used 4 times across 2 insns in block 13; set 1 time; GENERAL_REGS or none.

Register 192 used 4 times across 2 insns in block 13; set 1 time; GENERAL_REGS or none.

Register 202 used 6 times across 3 insns in block 15; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 204 used 4 times across 3 insns in block 15; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 209 used 6 times across 3 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 211 used 4 times across 3 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 212 used 5 times across 111 insns; set 1 time; dies in 0 places; crosses 3 calls; GENERAL_REGS or none; pointer.

Register 217 used 6 times across 3 insns in block 19; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 219 used 4 times across 3 insns in block 19; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 224 used 2 times across 4 insns in block 22; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 225 used 10 times across 90 insns; set 3 times; user var; dies in 0 places; pref CREG, else GENERAL_REGS.

Register 227 used 2 times across 3 insns in block 22; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 228 used 5 times across 91 insns; set 1 time; dies in 0 places; 8 bytes; FLOAT_REGS or none.

Register 229 used 2 times across 2 insns in block 22; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 230 used 2 times across 2 insns in block 22; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 231 used 17 times across 77 insns; set 3 times; user var; dies in 0 places; pref CREG, else GENERAL_REGS.

Register 233 used 3 times across 83 insns; set 1 time; dies in 0 places; 8 bytes; FLOAT_REGS or none.

Register 234 used 9 times across 78 insns; set 1 time; dies in 0 places; 8 bytes; FLOAT_REGS or none.

Register 235 used 4 times across 2 insns in block 24; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 236 used 4 times across 2 insns in block 24; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 237 used 9 times across 4 insns in block 25; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 240 used 6 times across 2 insns in block 25; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 244 used 6 times across 2 insns in block 25; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 245 used 18 times across 43 insns; set 2 times; user var; dies in 0 places; pref CREG, else GENERAL_REGS.

Register 247 used 16 times across 9 insns; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 250 used 12 times across 13 insns; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 251 used 8 times across 4 insns in block 28; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 252 used 10 times across 36 insns; set 1 time; dies in 0 places; GENERAL_REGS or none; pointer.

Register 255 used 12 times across 3 insns in block 29; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 260 used 7 times across 35 insns; set 1 time; dies in 0 places; GENERAL_REGS or none; pointer.

Register 261 used 8 times across 2 insns in block 29; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 264 used 8 times across 2 insns in block 29; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 265 used 11 times across 68 insns; set 1 time; dies in 0 places; 8 bytes; FLOAT_REGS or none.

Register 266 used 8 times across 2 insns in block 29; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 268 used 6 times across 2 insns in block 36; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 272 used 8 times across 2 insns in block 30; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 274 used 8 times across 2 insns in block 30; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 279 used 6 times across 2 insns in block 35; set 1 time; GENERAL_REGS or none.

Register 281 used 6 times across 2 insns in block 37; set 1 time; GENERAL_REGS or none.

Register 283 used 6 times across 2 insns in block 37; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 285 used 6 times across 2 insns in block 37; set 1 time; GENERAL_REGS or none.

Register 287 used 6 times across 2 insns in block 37; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 289 used 2 times across 2 insns in block 40; set 1 time; FLOAT_REGS or none.

Register 292 used 4 times across 4 insns in block 40; set 2 times; 8 bytes; FLOAT_REGS or none.

Register 293 used 2 times across 2 insns in block 40; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 295 used 2 times across 2 insns in block 40; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 298 used 3 times across 5 insns in block 41; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 300 used 3 times across 12 insns in block 41; set 1 time; GENERAL_REGS or none; pointer.

Register 303 used 3 times across 7 insns in block 41; set 1 time; GENERAL_REGS or none; pointer.

Register 304 used 3 times across 7 insns in block 41; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 307 used 2 times across 2 insns in block 41; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 310 used 8 times across 263 insns; set 2 times; user var; dies in 0 places; pref CREG, else GENERAL_REGS.

Register 316 used 4 times across 2 insns in block 43; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 317 used 8 times across 27 insns in block 42; set 1 time; GENERAL_REGS or none.

Register 319 used 2 times across 2 insns in block 42; set 1 time; GENERAL_REGS or none.

Register 320 used 2 times across 2 insns in block 42; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 322 used 3 times across 3 insns in block 42; set 1 time; GENERAL_REGS or none.

Register 323 used 2 times across 2 insns in block 42; set 1 time; GENERAL_REGS or none.

Register 324 used 2 times across 2 insns in block 42; set 1 time; GENERAL_REGS or none.

Register 325 used 3 times across 249 insns; set 1 time; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 326 used 30 times across 51 insns in block 43; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 327 used 31 times across 496 insns; set 1 time; dies in 0 places; GENERAL_REGS or none; pointer.

Register 329 used 29 times across 247 insns; set 1 time; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 330 used 37 times across 246 insns; set 1 time; dies in 0 places; GENERAL_REGS or none; pointer.

Register 331 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 333 used 13 times across 490 insns; set 1 time; dies in 0 places; 8 bytes; FLOAT_REGS or none.

Register 334 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 344 used 31 times across 488 insns; set 1 time; dies in 0 places; GENERAL_REGS or none; pointer.

Register 348 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 351 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 362 used 8 times across 58 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 373 used 8 times across 24 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 387 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 390 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 415 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 451 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 454 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 468 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 482 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 485 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 510 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 524 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 527 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 541 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 555 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 569 used 4 times across 2 insns in block 43; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 570 used 13 times across 81 insns; set 2 times; user var; dies in 0 places; pref CREG, else GENERAL_REGS.

Register 572 used 12 times across 9 insns; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 575 used 9 times across 13 insns; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 576 used 6 times across 4 insns in block 46; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 577 used 7 times across 74 insns; set 1 time; dies in 0 places; GENERAL_REGS or none; pointer.

Register 580 used 9 times across 3 insns in block 47; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 585 used 5 times across 73 insns; set 1 time; dies in 0 places; GENERAL_REGS or none; pointer.

Register 586 used 6 times across 2 insns in block 47; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 589 used 6 times across 2 insns in block 47; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 590 used 5 times across 144 insns; set 1 time; dies in 0 places; 8 bytes; FLOAT_REGS or none.

Register 592 used 5 times across 70 insns; set 1 time; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 593 used 5 times across 69 insns; set 1 time; dies in 0 places; GENERAL_REGS or none; pointer.

Register 594 used 6 times across 2 insns in block 47; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 596 used 15 times across 54 insns; set 2 times; user var; dies in 0 places; pref CREG, else GENERAL_REGS.

Register 597 used 12 times across 10 insns; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 599 used 12 times across 3 insns in block 49; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 600 used 7 times across 25 insns; set 1 time; dies in 0 places; GENERAL_REGS or none; pointer.

Register 601 used 10 times across 24 insns; set 1 time; dies in 0 places; GENERAL_REGS or none; pointer.

Register 602 used 12 times across 5 insns in block 48; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 604 used 11 times across 22 insns; set 1 time; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 608 used 7 times across 21 insns; set 1 time; dies in 0 places; GENERAL_REGS or none; pointer.

Register 613 used 7 times across 20 insns; set 1 time; dies in 0 places; GENERAL_REGS or none; pointer.

Register 614 used 8 times across 2 insns in block 49; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 620 used 7 times across 16 insns; set 1 time; dies in 0 places; GENERAL_REGS or none; pointer.

Register 622 used 6 times across 4 insns in block 52; set 1 time; GENERAL_REGS or none.

Register 631 used 4 times across 4 insns in block 54; set 1 time; GENERAL_REGS or none.

Register 645 used 4 times across 2 insns in block 55; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 649 used 8 times across 243 insns; set 1 time; dies in 0 places; GENERAL_REGS or none.

Register 650 used 6 times across 7 insns; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 651 used 6 times across 6 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 652 used 6 times across 4 insns; set 1 time; GENERAL_REGS or none.

Register 663 used 25 times across 242 insns; set 1 time; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 664 used 25 times across 241 insns; set 1 time; dies in 0 places; GENERAL_REGS or none; pointer.

Register 669 used 6 times across 4 insns in block 59; set 1 time; GENERAL_REGS or none.

Register 676 used 4 times across 2 insns in block 59; set 1 time; GENERAL_REGS or none.

Register 679 used 7 times across 9 insns in block 42; set 3 times; pref INDEX_REGS, else GENERAL_REGS.

Register 680 used 4 times across 4 insns in block 42; set 2 times; GENERAL_REGS or none.

Register 681 used 17 times across 234 insns; set 1 time; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 682 used 4 times across 6 insns in block 59; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 686 used 4 times across 2 insns in block 59; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 689 used 7 times across 9 insns in block 42; set 3 times; pref INDEX_REGS, else GENERAL_REGS.

Register 690 used 4 times across 4 insns in block 42; set 2 times; GENERAL_REGS or none.

Register 691 used 3 times across 227 insns; set 1 time; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 692 used 18 times across 47 insns in block 59; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 694 used 4 times across 4 insns in block 59; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 701 used 4 times across 2 insns in block 59; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 707 used 4 times across 3 insns in block 59; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 719 used 4 times across 4 insns in block 59; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 727 used 6 times across 4 insns in block 59; set 1 time; GENERAL_REGS or none.

Register 734 used 4 times across 2 insns in block 59; set 1 time; GENERAL_REGS or none.

Register 740 used 4 times across 3 insns in block 59; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 753 used 9 times across 226 insns; set 1 time; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 755 used 4 times across 2 insns in block 59; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 762 used 4 times across 2 insns in block 59; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 768 used 4 times across 3 insns in block 59; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 780 used 4 times across 4 insns in block 59; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 788 used 6 times across 4 insns in block 59; set 1 time; GENERAL_REGS or none.

Register 795 used 4 times across 2 insns in block 59; set 1 time; GENERAL_REGS or none.

Register 801 used 4 times across 3 insns in block 59; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 813 used 4 times across 4 insns in block 59; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 820 used 4 times across 2 insns in block 59; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 826 used 4 times across 3 insns in block 59; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 841 used 4 times across 2 insns in block 59; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 849 used 6 times across 4 insns in block 59; set 1 time; GENERAL_REGS or none.

Register 856 used 4 times across 2 insns in block 59; set 1 time; GENERAL_REGS or none.

Register 862 used 4 times across 3 insns in block 59; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 877 used 4 times across 2 insns in block 59; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 884 used 4 times across 2 insns in block 59; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 890 used 4 times across 3 insns in block 59; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 905 used 4 times across 2 insns in block 59; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 906 used 3 times across 7 insns in block 61; set 1 time; GENERAL_REGS or none.

Register 907 used 3 times across 62 insns; set 1 time; crosses 6 calls; pref INDEX_REGS, else GENERAL_REGS.

Register 909 used 2 times across 2 insns in block 61; set 1 time; FLOAT_REGS or none.

Register 911 used 3 times across 5 insns in block 61; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 912 used 3 times across 4 insns in block 61; set 1 time; GENERAL_REGS or none; pointer.

Register 916 used 2 times across 2 insns in block 61; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 918 used 4 times across 4 insns in block 61; set 2 times; 8 bytes; FLOAT_REGS or none.

Register 919 used 2 times across 2 insns in block 61; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 921 used 2 times across 2 insns in block 61; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 924 used 2 times across 4 insns in block 62; set 1 time; GENERAL_REGS or none.

Register 930 used 2 times across 2 insns in block 62; set 1 time; GENERAL_REGS or none.

Register 933 used 6 times across 2 insns in block 36; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 934 used 4 times across 2 insns in block 55; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 937 used 2 times across 2 insns in block 40; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 938 used 2 times across 2 insns in block 40; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 940 used 2 times across 2 insns in block 61; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 941 used 2 times across 2 insns in block 61; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 943 used 2 times across 2 insns in block 61; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 945 used 2 times across 2 insns in block 63; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 946 used 2 times across 3 insns in block 63; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 952 used 2 times across 2 insns in block 65; set 1 time; GENERAL_REGS or none.

Register 955 used 2 times across 2 insns in block 67; set 1 time; GENERAL_REGS or none.

Register 956 used 3 times across 115 insns; set 1 time; dies in 0 places; crosses 3 calls; GENERAL_REGS or none; pointer.

Register 960 used 2 times across 2 insns in block 62; set 1 time; GENERAL_REGS or none; pointer.

Register 962 used 2 times across 2 insns in block 62; set 1 time; GENERAL_REGS or none; pointer.

Register 964 used 2 times across 2 insns in block 62; set 1 time; GENERAL_REGS or none; pointer.

Register 965 used 2 times across 2 insns in block 62; set 1 time; GENERAL_REGS or none; pointer.

69 basic blocks.

Basic block 0: first insn 3059, last 2925.
Predecessors:  ENTRY (fallthru)
Successors:  1 (fallthru) 22 (crit)
Registers live at start: 6 7 16
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 179

Basic block 1: first insn 3060, last 3057.
Predecessors:  0 (fallthru)
Successors:  2 (fallthru)
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 179
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956

Basic block 2: first insn 152, last 160.
Predecessors:  21 (crit) 1 (fallthru)
Successors:  3 (fallthru) 21 (crit)
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 102 115 120 123 148 155 179 212 956

Basic block 3: first insn 3062, last 228.
Predecessors:  2 (fallthru)
Successors:  4 (fallthru) 5
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 102 115 120 123 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 102 115 120 123 148 155 179 212 956

Basic block 4: first insn 3063, last 241.
Predecessors:  3 (fallthru)
Successors:  8
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 102 115 120 123 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956

Basic block 5: first insn 243, last 253.
Predecessors:  3
Successors:  6 (fallthru) 7
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 134 136 148 155 179 212 956

Basic block 6: first insn 3065, last 273.
Predecessors:  5 (fallthru)
Successors:  8
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 134 136 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956

Basic block 7: first insn 275, last 290.
Predecessors:  5
Successors:  8 (fallthru)
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956

Basic block 8: first insn 293, last 303.
Predecessors:  7 (fallthru) 6 4
Successors:  9 (fallthru) 11
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956

Basic block 9: first insn 3068, last 313.
Predecessors:  8 (fallthru)
Successors:  10 (fallthru) 68 (crit)
Registers live at start: 6 7 22 23 25 155
Registers live at end: 6 7 23

Basic block 10: first insn 3069, last 344.
Predecessors:  9 (fallthru)
Successors:  68
Registers live at start: 6 7 23
Registers live at end: 6

Basic block 11: first insn 349, last 357.
Predecessors:  8
Successors:  12 (fallthru) 21 (crit)
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 160 179 212 956

Basic block 12: first insn 3071, last 364.
Predecessors:  11 (fallthru)
Successors:  13 (fallthru) 21 (crit)
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 160 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 160 163 179 212 956

Basic block 13: first insn 3072, last 476.
Predecessors:  12 (fallthru)
Successors:  14 (fallthru) 15 (crit)
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 160 163 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 73 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956

Basic block 14: first insn 3073, last 479.
Predecessors:  13 (fallthru)
Successors:  15 (fallthru)
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 73 75 76 77 87 88 100 115 120 123 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956

Basic block 15: first insn 480, last 498.
Predecessors:  14 (fallthru) 13 (crit)
Successors:  16 (fallthru) 17 (crit)
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 73 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956

Basic block 16: first insn 3075, last 501.
Predecessors:  15 (fallthru)
Successors:  17 (fallthru)
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 73 74 76 77 87 88 100 115 120 123 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956

Basic block 17: first insn 502, last 522.
Predecessors:  16 (fallthru) 15 (crit)
Successors:  18 (fallthru) 19 (crit)
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 73 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956

Basic block 18: first insn 3077, last 525.
Predecessors:  17 (fallthru)
Successors:  19 (fallthru)
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 73 74 75 77 87 88 100 115 120 123 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956

Basic block 19: first insn 526, last 546.
Predecessors:  18 (fallthru) 17 (crit)
Successors:  20 (fallthru) 21 (crit)
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 73 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956

Basic block 20: first insn 3079, last 549.
Predecessors:  19 (fallthru)
Successors:  21 (fallthru)
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 73 74 75 76 87 88 100 115 120 123 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956

Basic block 21: first insn 556, last 149.
Predecessors:  20 (fallthru) 19 (crit) 12 (crit) 11 (crit) 2 (crit)
Successors:  22 (fallthru,crit) 2 (crit)
Registers live at start: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
Registers live at end: 6 7 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956

Basic block 22: first insn 566, last 2931.
Predecessors:  21 (fallthru,crit) 0 (crit)
Successors:  23 (fallthru) 40 (crit)
Registers live at start: 6 7 22 23 24 25 26 31 34 36 74 75 76 77 87 88 179
Registers live at end: 6 7 22 23 24 25 26 31 34 36 71 76 77 87 88 179 225 228

Basic block 23: first insn 3082, last 3048.
Predecessors:  22 (fallthru)
Successors:  24 (fallthru)
Registers live at start: 6 7 22 23 24 25 26 31 34 36 71 76 77 87 88 179 225 228
Registers live at end: 6 7 22 23 24 25 26 31 34 36 71 77 87 88 179 225 228 233

Basic block 24: first insn 603, last 2937.
Predecessors:  39 (crit) 23 (fallthru)
Successors:  25 (fallthru,crit) 39 (crit)
Registers live at start: 6 7 22 23 24 25 26 31 34 36 71 77 87 88 179 225 228 233
Registers live at end: 6 7 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234

Basic block 25: first insn 626, last 2943.
Predecessors:  38 (crit) 24 (fallthru,crit)
Successors:  26 (fallthru) 33 (crit)
Registers live at start: 6 7 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234
Registers live at end: 6 7 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245

Basic block 26: first insn 3085, last 3047.
Predecessors:  25 (fallthru)
Successors:  27 (fallthru)
Registers live at start: 6 7 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245
Registers live at end: 6 7 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245 252 260 265

Basic block 27: first insn 666, last 674.
Predecessors:  32 (crit) 26 (fallthru)
Successors:  28 (fallthru) 32 (crit)
Registers live at start: 6 7 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245 252 260 265
Registers live at end: 6 7 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245 247 252 260 265

Basic block 28: first insn 3087, last 681.
Predecessors:  27 (fallthru)
Successors:  29 (fallthru) 32 (crit)
Registers live at start: 6 7 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245 247 252 260 265
Registers live at end: 6 7 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245 247 250 252 260 265

Basic block 29: first insn 3088, last 726.
Predecessors:  28 (fallthru)
Successors:  30 (fallthru) 36
Registers live at start: 6 7 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245 247 250 252 260 265
Registers live at end: 6 7 22 23 24 25 26 31 34 36 67 71 72 77 87 88 89 92 179 225 228 231 233 234 245 252 260 265

Basic block 30: first insn 3089, last 755.
Predecessors:  29 (fallthru)
Successors:  31 (fallthru) 32 (crit)
Registers live at start: 6 7 22 23 24 25 26 31 34 36 67 71 72 77 87 88 89 92 179 225 228 231 233 234 245 252 260 265
Registers live at end: 6 7 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245 252 260 265

Basic block 31: first insn 3090, last 758.
Predecessors:  30 (fallthru)
Successors:  32 (fallthru)
Registers live at start: 6 7 22 23 24 25 26 31 34 36 67 71 72 77 87 88 179 225 228 231 233 234 245 252 260 265
Registers live at end: 6 7 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245 252 260 265

Basic block 32: first insn 765, last 663.
Predecessors:  31 (fallthru) 30 (crit) 28 (crit) 27 (crit)
Successors:  33 (fallthru,crit) 27 (crit)
Registers live at start: 6 7 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245 252 260 265
Registers live at end: 6 7 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245 252 260 265

Basic block 33: first insn 775, last 781.
Predecessors:  32 (fallthru,crit) 25 (crit)
Successors:  34 (fallthru) 38 (crit)
Registers live at start: 6 7 22 23 24 25 26 31 34 36 71 72 77 87 88 92 179 225 228 231 233 234
Registers live at end: 6 7 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234

Basic block 34: first insn 3093, last 786.
Predecessors:  33 (fallthru)
Successors:  35 (fallthru) 37
Registers live at start: 6 7 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234
Registers live at end: 6 7 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234

Basic block 35: first insn 3094, last 858.
Predecessors:  34 (fallthru)
Successors:  68
Registers live at start: 6 7 23 24
Registers live at end: 6

Basic block 36: first insn 2989, last 734.
Predecessors:  29
Successors:  38
Registers live at start: 6 7 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234
Registers live at end: 6 7 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234

Basic block 37: first insn 861, last 889.
Predecessors:  34
Successors:  38 (fallthru)
Registers live at start: 6 7 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234
Registers live at end: 6 7 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234

Basic block 38: first insn 899, last 623.
Predecessors:  37 (fallthru) 36 33 (crit)
Successors:  39 (fallthru,crit) 25 (crit)
Registers live at start: 6 7 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234
Registers live at end: 6 7 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234

Basic block 39: first insn 913, last 600.
Predecessors:  38 (fallthru,crit) 24 (crit)
Successors:  40 (fallthru,crit) 24 (crit)
Registers live at start: 6 7 22 23 24 25 26 31 34 36 71 77 87 88 179 225 228 233
Registers live at end: 6 7 22 23 24 25 26 31 34 36 71 77 87 88 179 225 228 233

Basic block 40: first insn 922, last 2979.
Predecessors:  39 (fallthru,crit) 22 (crit)
Successors:  41 (fallthru)
Registers live at start: 6 7 22 23 25 26 31 34 36 87 88 179
Registers live at end: 6 7 22 23 25 26 31 34 36 79 80 87 88 179

Basic block 41: first insn 960, last 2949.
Predecessors:  66 40 (fallthru)
Successors:  42 (fallthru) 61 (crit)
Registers live at start: 6 7 22 23 25 26 31 34 36 79 80 87 88 179
Registers live at end: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310

Basic block 42: first insn 3101, last 3043.
Predecessors:  41 (fallthru)
Successors:  43 (fallthru)
Registers live at start: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310
Registers live at end: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753

Basic block 43: first insn 1017, last 2955.
Predecessors:  60 (crit) 42 (fallthru)
Successors:  44 (fallthru) 54 (crit)
Registers live at start: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 649 663 664 681 691 753

Basic block 44: first insn 3103, last 3009.
Predecessors:  43 (fallthru)
Successors:  45 (fallthru)
Registers live at start: 6 7 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 649 663 664 681 691 753

Basic block 45: first insn 1659, last 1667.
Predecessors:  53 (crit) 44 (fallthru)
Successors:  46 (fallthru) 53 (crit)
Registers live at start: 6 7 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 572 577 585 590 592 593 649 663 664 681 691 753

Basic block 46: first insn 3105, last 1674.
Predecessors:  45 (fallthru)
Successors:  47 (fallthru) 53 (crit)
Registers live at start: 6 7 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 572 577 585 590 592 593 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 572 575 577 585 590 592 593 649 663 664 681 691 753

Basic block 47: first insn 3106, last 1724.
Predecessors:  46 (fallthru)
Successors:  48 (fallthru) 53 (crit)
Registers live at start: 6 7 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 572 575 577 585 590 592 593 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 649 663 664 681 691 753

Basic block 48: first insn 3107, last 2999.
Predecessors:  47 (fallthru)
Successors:  49 (fallthru)
Registers live at start: 6 7 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 67 68 69 73 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 596 600 601 604 608 613 620 649 663 664 681 691 753

Basic block 49: first insn 1743, last 1799.
Predecessors:  51 (crit) 48 (fallthru)
Successors:  50 (fallthru) 51 (crit)
Registers live at start: 6 7 22 23 25 26 31 34 36 67 68 69 73 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 596 600 601 604 608 613 620 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 67 68 69 73 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 596 597 600 601 604 608 613 620 649 663 664 681 691 753

Basic block 50: first insn 3109, last 1807.
Predecessors:  49 (fallthru)
Successors:  51 (fallthru)
Registers live at start: 6 7 22 23 25 26 31 34 36 67 68 69 73 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 596 597 600 601 604 608 613 620 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 67 68 69 73 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 596 600 601 604 608 613 620 649 663 664 681 691 753

Basic block 51: first insn 1812, last 1740.
Predecessors:  50 (fallthru) 49 (crit)
Successors:  52 (fallthru) 49 (crit)
Registers live at start: 6 7 22 23 25 26 31 34 36 67 68 69 73 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 596 600 601 604 608 613 620 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 67 68 69 73 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 596 600 601 604 608 613 620 649 663 664 681 691 753

Basic block 52: first insn 3111, last 1853.
Predecessors:  51 (fallthru)
Successors:  53 (fallthru,crit) 54 (crit)
Registers live at start: 6 7 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 649 663 664 681 691 753

Basic block 53: first insn 1862, last 1656.
Predecessors:  52 (fallthru,crit) 47 (crit) 46 (crit) 45 (crit)
Successors:  54 (fallthru,crit) 45 (crit)
Registers live at start: 6 7 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 649 663 664 681 691 753

Basic block 54: first insn 1874, last 1905.
Predecessors:  53 (fallthru,crit) 52 (crit) 43 (crit)
Successors:  55 (fallthru) 56
Registers live at start: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 93 179 310 325 327 329 330 333 344 649 663 664 681 691 753

Basic block 55: first insn 3114, last 1923.
Predecessors:  54 (fallthru)
Successors:  60
Registers live at start: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753

Basic block 56: first insn 1925, last 1929.
Predecessors:  54
Successors:  57 (fallthru) 60 (crit)
Registers live at start: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 93 179 310 325 327 329 330 333 344 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753

Basic block 57: first insn 3116, last 1946.
Predecessors:  56 (fallthru)
Successors:  58 (fallthru) 59
Registers live at start: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 650 651 652 663 664 681 691 753

Basic block 58: first insn 3117, last 1965.
Predecessors:  57 (fallthru)
Successors:  60
Registers live at start: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 650 651 652 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753

Basic block 59: first insn 1967, last 2511.
Predecessors:  57
Successors:  60 (fallthru)
Registers live at start: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753

Basic block 60: first insn 2520, last 1014.
Predecessors:  59 (fallthru) 58 56 (crit) 55
Successors:  61 (fallthru,crit) 43 (crit)
Registers live at start: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753
Registers live at end: 6 7 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753

Basic block 61: first insn 2530, last 2582.
Predecessors:  60 (fallthru,crit) 41 (crit)
Successors:  62 (fallthru) 63 (crit)
Registers live at start: 6 7 22 23 25 26 31 34 36 79 80 87 88 179
Registers live at end: 6 7 22 23 25 26 31 34 36 79 80 86 87 88 179 907

Basic block 62: first insn 3121, last 3058.
Predecessors:  61 (fallthru)
Successors:  63 (fallthru)
Registers live at start: 6 7 22 23 25 26 31 34 36 79 80 86 87 88 179 907
Registers live at end: 6 7 22 23 25 26 31 34 36 79 80 86 87 88 179

Basic block 63: first insn 2796, last 2805.
Predecessors:  62 (fallthru) 61 (crit)
Successors:  64 (fallthru) 65 (crit)
Registers live at start: 6 7 22 23 25 26 31 34 36 79 80 86 87 88 179
Registers live at end: 6 7 22 23 25 26 31 34 36 79 80 87 88 179

Basic block 64: first insn 3123, last 2807.
Predecessors:  63 (fallthru)
Successors:  65 (fallthru,crit) 68 (crit)
Registers live at start: 6 7 22 23 25 26 31 34 36 79 80 87 88 179
Registers live at end: 6 7 22 23 25 26 31 34 36 79 80 87 88 179

Basic block 65: first insn 2810, last 2823.
Predecessors:  64 (fallthru,crit) 63 (crit)
Successors:  66 (fallthru) 67
Registers live at start: 6 7 22 23 25 26 31 34 36 79 80 87 88 179
Registers live at end: 6 7 22 23 25 26 31 34 36 79 80 87 88 179

Basic block 66: first insn 3125, last 2837.
Predecessors:  65 (fallthru)
Successors:  41
Registers live at start: 6 7 22 23 25 26 31 34 36 79 80 87 88 179
Registers live at end: 6 7 22 23 25 26 31 34 36 79 80 87 88 179

Basic block 67: first insn 2842, last 2909.
Predecessors:  65
Successors:  68 (fallthru)
Registers live at start: 6 7 23
Registers live at end: 6

Basic block 68: first insn 2922, last 3127.
Predecessors:  67 (fallthru) 64 (crit) 35 10 9 (crit)
Successors:  EXIT (fallthru)
Registers live at start: 6
Registers live at end: 6

;; Register 81 in 0.
;; Register 84 in 9.
;; Register 96 in 8.
;; Register 97 in 8.
;; Register 98 in 8.
;; Register 99 in 8.
;; Register 107 in 0.
;; Register 108 in 0.
;; Register 109 in 8.
;; Register 116 in 8.
;; Register 121 in 8.
;; Register 125 in 8.
;; Register 128 in 0.
;; Register 131 in 8.
;; Register 133 in 8.
;; Register 139 in 8.
;; Register 144 in 9.
;; Register 145 in 8.
;; Register 146 in 0.
;; Register 154 in 8.
;; Register 158 in 0.
;; Register 164 in 8.
;; Register 166 in 0.
;; Register 167 in 0.
;; Register 168 in 8.
;; Register 173 in 8.
;; Register 178 in 8.
;; Register 183 in 3.
;; Register 184 in 0.
;; Register 192 in 0.
;; Register 202 in 1.
;; Register 204 in 0.
;; Register 209 in 1.
;; Register 211 in 0.
;; Register 217 in 1.
;; Register 219 in 0.
;; Register 224 in 8.
;; Register 227 in 8.
;; Register 229 in 8.
;; Register 230 in 8.
;; Register 235 in 8.
;; Register 236 in 8.
;; Register 237 in 9.
;; Register 240 in 8.
;; Register 244 in 9.
;; Register 251 in 8.
;; Register 255 in 0.
;; Register 261 in 8.
;; Register 264 in 8.
;; Register 266 in 8.
;; Register 268 in 8.
;; Register 272 in 8.
;; Register 274 in 8.
;; Register 279 in 0.
;; Register 281 in 0.
;; Register 283 in 0.
;; Register 285 in 0.
;; Register 287 in 0.
;; Register 289 in 8.
;; Register 292 in 8.
;; Register 293 in 8.
;; Register 295 in 8.
;; Register 298 in 2.
;; Register 300 in 3.
;; Register 303 in 0.
;; Register 304 in 1.
;; Register 307 in 8.
;; Register 316 in 0.
;; Register 317 in 2.
;; Register 319 in 1.
;; Register 320 in 1.
;; Register 322 in 1.
;; Register 323 in 0.
;; Register 324 in 0.
;; Register 326 in 0.
;; Register 331 in 8.
;; Register 334 in 8.
;; Register 348 in 8.
;; Register 351 in 8.
;; Register 362 in 10.
;; Register 373 in 9.
;; Register 387 in 8.
;; Register 390 in 8.
;; Register 415 in 8.
;; Register 451 in 8.
;; Register 454 in 8.
;; Register 468 in 8.
;; Register 482 in 8.
;; Register 485 in 8.
;; Register 510 in 8.
;; Register 524 in 8.
;; Register 527 in 8.
;; Register 541 in 8.
;; Register 555 in 8.
;; Register 569 in 8.
;; Register 576 in 8.
;; Register 580 in 0.
;; Register 586 in 8.
;; Register 589 in 8.
;; Register 594 in 8.
;; Register 599 in 0.
;; Register 602 in 0.
;; Register 614 in 8.
;; Register 622 in 0.
;; Register 631 in 0.
;; Register 645 in 8.
;; Register 669 in 0.
;; Register 676 in 0.
;; Register 679 in 1.
;; Register 680 in 0.
;; Register 682 in 0.
;; Register 686 in 1.
;; Register 689 in 1.
;; Register 690 in 0.
;; Register 692 in 1.
;; Register 694 in 8.
;; Register 701 in 0.
;; Register 707 in 0.
;; Register 719 in 8.
;; Register 727 in 0.
;; Register 734 in 0.
;; Register 740 in 0.
;; Register 755 in 8.
;; Register 762 in 0.
;; Register 768 in 0.
;; Register 780 in 8.
;; Register 788 in 0.
;; Register 795 in 0.
;; Register 801 in 0.
;; Register 813 in 8.
;; Register 820 in 0.
;; Register 826 in 0.
;; Register 841 in 8.
;; Register 849 in 0.
;; Register 856 in 0.
;; Register 862 in 0.
;; Register 877 in 8.
;; Register 884 in 0.
;; Register 890 in 0.
;; Register 905 in 8.
;; Register 906 in 0.
;; Register 909 in 8.
;; Register 911 in 0.
;; Register 912 in 1.
;; Register 916 in 9.
;; Register 918 in 8.
;; Register 919 in 8.
;; Register 921 in 8.
;; Register 924 in 0.
;; Register 930 in 0.
;; Register 933 in 8.
;; Register 934 in 8.
;; Register 937 in 8.
;; Register 938 in 8.
;; Register 940 in 8.
;; Register 941 in 8.
;; Register 943 in 9.
;; Register 945 in 8.
;; Register 946 in 8.
;; Register 952 in 0.
;; Register 955 in 0.
;; Register 960 in 0.
;; Register 962 in 0.
;; Register 964 in 0.
;; Register 965 in 0.
(note 2 0 3059 "" NOTE_INSN_DELETED)

;; Start of basic block 0, registers live: 6 [bp] 7 [sp] 16 []
(note 3059 2 4 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 4 3059 6 (set (reg/v/u:SI 22)
        (mem/u/f:SI (reg:SI 16 %argp) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (reg:SI 16 %argp) 0)
        (nil)))

(insn 6 4 8 (set (reg/v/u:SI 23)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 4 [0x4])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 4 [0x4])) 0)
        (nil)))

(insn 8 6 10 (set (reg/v/u:SI 24)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 8 [0x8])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 8 [0x8])) 0)
        (nil)))

(insn 10 8 12 (set (reg/v/u:SI 25)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 12 [0xc])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 12 [0xc])) 0)
        (nil)))

(insn 12 10 14 (set (reg/v/u:SI 26)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 16 [0x10])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 16 [0x10])) 0)
        (nil)))

(insn 14 12 16 (set (reg/v/u:SI 27)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 20 [0x14])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 20 [0x14])) 0)
        (nil)))

(insn 16 14 18 (set (reg/v/u:SI 28)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 24 [0x18])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 24 [0x18])) 0)
        (nil)))

(insn 18 16 22 (set (reg/v/u:SI 29)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 28 [0x1c])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 28 [0x1c])) 0)
        (nil)))

(insn 22 18 24 (set (reg/v/u:SI 31)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 36 [0x24])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 36 [0x24])) 0)
        (nil)))

(insn 24 22 26 (set (reg/v/u:SI 32)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 40 [0x28])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 40 [0x28])) 0)
        (nil)))

(insn 26 24 28 (set (reg/v/u:SI 33)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 44 [0x2c])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 44 [0x2c])) 0)
        (nil)))

(insn 28 26 30 (set (reg/v/u:SI 34)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 48 [0x30])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 48 [0x30])) 0)
        (nil)))

(note 30 28 412 "" NOTE_INSN_DELETED)

(insn 412 30 32 (set (reg/v:SI 179)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 52 [0x34])) 0)) 48 {movsi+2} (nil)
    (nil))

(insn 32 412 34 (set (reg/v/u:SI 36)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 56 [0x38])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 56 [0x38])) 0)
        (nil)))

(insn 34 32 35 (set (reg/v/u:SI 37)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 60 [0x3c])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 60 [0x3c])) 0)
        (nil)))

(note 35 34 36 "" NOTE_INSN_FUNCTION_BEG)

(note 36 35 92 "" NOTE_INSN_DELETED)

(note 92 36 94 0 NOTE_INSN_BLOCK_BEG)

(note 94 92 96 "" NOTE_INSN_DELETED)

(insn 96 94 98 (set (mem:DF (reg/v/u:SI 22) 0)
        (const_double:DF (cc0) 0 [0x0] 0 [0x0] 0 [0x0])) 69 {movdf+1} (insn_list 4 (nil))
    (nil))

(note 98 96 100 "" NOTE_INSN_DELETED)

(insn 100 98 102 (set (reg/v:DF 74)
        (mem/u:DF (symbol_ref/u:SI ("*.LC0")) 0)) 69 {movdf+1} (nil)
    (nil))

(note 102 100 104 "" NOTE_INSN_DELETED)

(insn 104 102 106 (set (reg/v:DF 75)
        (mem/u:DF (symbol_ref/u:SI ("*.LC1")) 0)) 69 {movdf+1} (nil)
    (nil))

(note 106 104 108 "" NOTE_INSN_DELETED)

(insn 108 106 110 (set (reg/v:DF 76)
        (reg/v:DF 74)) 69 {movdf+1} (insn_list 100 (nil))
    (nil))

(note 110 108 112 "" NOTE_INSN_DELETED)

(insn 112 110 114 (set (reg/v:DF 77)
        (reg/v:DF 75)) 69 {movdf+1} (insn_list 104 (nil))
    (nil))

(note 114 112 116 "" NOTE_INSN_DELETED)

(insn 116 114 117 (set (reg:DF 96)
        (mem/u:DF (symbol_ref/u:SI ("*.LC2")) 0)) 69 {movdf+1} (nil)
    (expr_list:REG_EQUIV (const_double:DF (mem/u:DF (symbol_ref/u:SI ("*.LC2")) 0) 0 [0x0] 0 [0x0] 1073774592 [0x40008000])
        (nil)))

(insn 117 116 121 (set (reg/v:DF 87)
        (sqrt:DF (reg:DF 96))) 273 {sqrtdf2} (insn_list 116 (nil))
    (expr_list:REG_DEAD (reg:DF 96)
        (nil)))

(note 121 117 123 "" NOTE_INSN_DELETED)

(insn 123 121 125 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -8 [0xfffffff8]))) 205 {addsi3+1} (nil)
    (nil))

(insn 125 123 127 (set (mem:DF (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_double:DF (cc0) 0 [0x0] 0 [0x0] 1073709056 [0x3fff8000])) 66 {movdf_push} (nil)
    (nil))

(call_insn 127 125 129 (set (reg:DF 8 %st(0))
        (call (mem:QI (symbol_ref:SI ("asin")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (nil)
    (nil))

(insn 129 127 131 (set (reg:DF 97)
        (reg:DF 8 %st(0))) 69 {movdf+1} (insn_list 127 (nil))
    (expr_list:REG_DEAD (reg:DF 8 %st(0))
        (nil)))

(insn 131 129 132 (parallel[ 
            (set (reg:SF 98)
                (float_truncate:SF (reg:DF 97)))
            (clobber (mem:SF (plus:SI (reg:SI 6 %ebp)
                        (const_int -220 [0xffffff24])) 0))
        ] ) 130 {truncdfsf2+1} (insn_list 129 (nil))
    (expr_list:REG_DEAD (reg:DF 97)
        (nil)))

(insn 132 131 134 (set (reg:SF 99)
        (plus:SF (reg:SF 98)
            (reg:SF 98))) 409 {strlensi-1} (insn_list 131 (nil))
    (expr_list:REG_DEAD (reg:SF 98)
        (nil)))

(insn 134 132 136 (parallel[ 
            (set (reg/v:DF 88)
                (float_extend:DF (reg:SF 99)))
            (clobber (mem:SF (plus:SI (reg:SI 6 %ebp)
                        (const_int -220 [0xffffff24])) 0))
            (clobber (mem:DF (plus:SI (reg:SI 6 %ebp)
                        (const_int -232 [0xffffff18])) 0))
        ] ) 112 {extendsfdf2+1} (insn_list 132 (nil))
    (expr_list:REG_DEAD (reg:SF 99)
        (nil)))

(note 136 134 137 0 NOTE_INSN_BLOCK_BEG)

(note 137 136 139 "" NOTE_INSN_DELETED)

(note 139 137 141 "" NOTE_INSN_DELETED)

(insn 141 139 143 (set (reg/v:SI 67)
        (const_int 1 [0x1])) 48 {movsi+2} (nil)
    (nil))

(insn 143 141 2923 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int 16 [0x10]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2923 143 2924 (set (reg/v:SI 100)
        (plus:SI (mem:SI (reg/v/u:SI 31) 0)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (insn_list 22 (nil))
    (nil))

(insn 2924 2923 2925 (set (cc0)
        (reg/v:SI 100)) 0 {tstsi_1} (insn_list 2923 (nil))
    (nil))

(jump_insn 2925 2924 3060 (set (pc)
        (if_then_else (lt (cc0)
                (const_int 0 [0x0]))
            (label_ref 566)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 0

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 179
(note 3060 2925 3049 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 3049 3060 3050 (set (reg:SI 115)
        (plus:SI (reg/v/u:SI 32)
            (const_int 8 [0x8]))) 205 {addsi3+1} (nil)
    (nil))

(insn 3050 3049 3051 (set (reg:SI 120)
        (plus:SI (reg/v/u:SI 32)
            (const_int 16 [0x10]))) 205 {addsi3+1} (nil)
    (nil))

(insn 3051 3050 3052 (set (reg:SI 956)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -248 [0xffffff08]))) 205 {addsi3+1} (nil)
    (nil))

(insn 3052 3051 3054 (set (reg:SI 123)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -24 [0xffffffe8]))) 205 {addsi3+1} (nil)
    (nil))

(insn 3054 3052 3056 (set (reg:DF 148)
        (mem/u:DF (symbol_ref/u:SI ("*.LC0")) 0)) 69 {movdf+1} (nil)
    (expr_list:REG_EQUIV (const_double:DF (mem/u:DF (symbol_ref/u:SI ("*.LC0")) 0) 0 [0x0] -117440512 [0xf9000000] -1071606526 [0xc0209502])
        (nil)))

(insn 3056 3054 3057 (set (reg:DF 155)
        (mem/u:DF (symbol_ref/u:SI ("*.LC4")) 0)) 69 {movdf+1} (nil)
    (expr_list:REG_EQUIV (const_double:DF (mem/u:DF (symbol_ref/u:SI ("*.LC4")) 0) 0 [0x0] 0 [0x0] 1074983972 [0x4012f424])
        (nil)))

(insn 3057 3056 144 (set (reg:SI 212)
        (plus:SI (reg/v:SI 179)
            (const_int 8 [0x8]))) 205 {addsi3+1} (nil)
    (nil))
;; End of basic block 1

(note 144 3057 152 "" NOTE_INSN_LOOP_BEG)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
(code_label 152 144 3061 6 "" [num uses: 1])

(note 3061 152 154 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 154 3061 155 "" NOTE_INSN_DELETED)

(note 155 154 157 "" NOTE_INSN_DELETED)

(insn 157 155 158 (set (reg:SI 102)
        (plus:SI (reg/v:SI 67)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(note 158 157 159 "" NOTE_INSN_DELETED)

(insn 159 158 160 (set (cc0)
        (mem/s:SI (plus:SI (mult:SI (reg:SI 102)
                    (const_int 4 [0x4]))
                (reg/v/u:SI 34)) 0)) 0 {tstsi_1} (insn_list 157 (nil))
    (nil))

(jump_insn 160 159 162 (set (pc)
        (if_then_else (eq (cc0)
                (const_int 0 [0x0]))
            (label_ref 556)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 2

(note 162 160 3062 "" NOTE_INSN_DELETED)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 102 115 120 123 148 155 179 212 956
(note 3062 162 167 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 167 3062 169 "" NOTE_INSN_DELETED)

(insn 169 167 170 (set (reg:SI 107)
        (plus:SI (mult:SI (reg:SI 102)
                (const_int 2 [0x2]))
            (reg:SI 102))) 206 {movsi_lea} (nil)
    (nil))

(insn 170 169 171 (set (reg:SI 108)
        (ashift:SI (reg:SI 107)
            (const_int 3 [0x3]))) 295 {ashlqi3+1} (insn_list 169 (nil))
    (expr_list:REG_DEAD (reg:SI 107)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 102)
                (const_int 24 [0x18]))
            (nil))))

(insn 171 170 173 (set (reg:DF 109)
        (minus:DF (mem/s:DF (plus:SI (reg/v/u:SI 32)
                    (reg:SI 108)) 0)
            (mem/s:DF (reg/v/u:SI 27) 0))) 403 {ffshi_1+1} (insn_list 170 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -24 [0xffffffe8])) 0)
        (nil)))

(insn 173 171 175 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -24 [0xffffffe8])) 0)
        (reg:DF 109)) 69 {movdf+1} (insn_list 171 (nil))
    (expr_list:REG_DEAD (reg:DF 109)
        (nil)))

(note 175 173 186 "" NOTE_INSN_DELETED)

(insn 186 175 188 (set (reg:DF 116)
        (minus:DF (mem/s:DF (plus:SI (reg:SI 115)
                    (reg:SI 108)) 0)
            (mem/s:DF (plus:SI (reg/v/u:SI 27)
                    (const_int 8 [0x8])) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -16 [0xfffffff0])) 0)
        (nil)))

(insn 188 186 190 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -16 [0xfffffff0])) 0)
        (reg:DF 116)) 69 {movdf+1} (insn_list 186 (nil))
    (expr_list:REG_DEAD (reg:DF 116)
        (nil)))

(note 190 188 201 "" NOTE_INSN_DELETED)

(insn 201 190 203 (set (reg:DF 121)
        (minus:DF (mem/s:DF (plus:SI (reg:SI 120)
                    (reg:SI 108)) 0)
            (mem/s:DF (plus:SI (reg/v/u:SI 27)
                    (const_int 16 [0x10])) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -8 [0xfffffff8])) 0)
        (expr_list:REG_DEAD (reg:SI 108)
            (nil))))

(insn 203 201 205 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -8 [0xfffffff8])) 0)
        (reg:DF 121)) 69 {movdf+1} (insn_list 201 (nil))
    (expr_list:REG_DEAD (reg:DF 121)
        (nil)))

(note 205 203 207 "" NOTE_INSN_DELETED)

(insn 207 205 209 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 209 207 211 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (reg:SI 956)) 44 {movsi-2} (nil)
    (nil))

(insn 211 209 215 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (reg/v/u:SI 37)) 44 {movsi-2} (nil)
    (nil))

(insn 215 211 217 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (reg:SI 123)) 44 {movsi-2} (nil)
    (nil))

(call_insn 217 215 219 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("ddot_")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 219 217 220 "" NOTE_INSN_DELETED)

(note 220 219 222 "" NOTE_INSN_DELETED)

(insn 222 220 224 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int 16 [0x10]))) 205 {addsi3+1} (nil)
    (nil))

(insn 224 222 226 (set (reg:DF 125)
        (mem:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -248 [0xffffff08])) 0)) 69 {movdf+1} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -248 [0xffffff08])) 0)
        (nil)))

(note 226 224 227 "" NOTE_INSN_DELETED)

(insn 227 226 228 (parallel[ 
            (set (cc0)
                (compare (reg:DF 125)
                    (mem/u:DF (symbol_ref/u:SI ("*.LC3")) 0)))
            (clobber (scratch:HI))
        ] ) 24 {*cmpsf_cc_1-5} (insn_list 224 (nil))
    (expr_list:REG_DEAD (reg:DF 125)
        (expr_list:REG_UNUSED (scratch:HI)
            (nil))))

(jump_insn 228 227 230 (set (pc)
        (if_then_else (lt (cc0)
                (const_int 0 [0x0]))
            (pc)
            (label_ref 243))) 350 {jump-1} (nil)
    (nil))
;; End of basic block 3

(note 230 228 3063 "" NOTE_INSN_DELETED)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 102 115 120 123 148 155 179 212 956
(note 3063 230 233 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 233 3063 238 (set (reg:SI 128)
        (ashift:SI (reg:SI 102)
            (const_int 3 [0x3]))) 295 {ashlqi3+1} (nil)
    (expr_list:REG_DEAD (reg:SI 102)
        (nil)))

(insn 238 233 239 (set (reg:DF 131)
        (mem/s:DF (plus:SI (reg/v/u:SI 33)
                (reg:SI 128)) 0)) 69 {movdf+1} (insn_list 233 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg/v/u:SI 33)
                (reg:SI 128)) 0)
        (nil)))

(insn 239 238 241 (set (mem/s:DF (plus:SI (reg/v/u:SI 36)
                (reg:SI 128)) 0)
        (reg:DF 131)) 69 {movdf+1} (insn_list 238 (nil))
    (expr_list:REG_DEAD (reg:DF 131)
        (expr_list:REG_DEAD (reg:SI 128)
            (nil))))

(jump_insn 241 239 242 (set (pc)
        (label_ref 293)) 351 {jump} (nil)
    (nil))
;; End of basic block 4

(barrier 242 241 243)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
(code_label 243 242 3064 8 "" [num uses: 1])

(note 3064 243 244 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 244 3064 245 "" NOTE_INSN_DELETED)

(note 245 244 247 "" NOTE_INSN_DELETED)

(insn 247 245 248 (set (reg:DF 134)
        (mem:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -248 [0xffffff08])) 0)) 69 {movdf+1} (nil)
    (nil))

(insn 248 247 250 (set (reg:DF 133)
        (abs:DF (reg:DF 134))) 268 {absdf2} (insn_list 247 (nil))
    (nil))

(note 250 248 251 "" NOTE_INSN_DELETED)

(insn 251 250 252 (set (reg:SI 136)
        (plus:SI (mult:SI (reg/v:SI 67)
                (const_int 8 [0x8]))
            (const_int -8 [0xfffffff8]))) 206 {movsi_lea} (nil)
    (nil))

(insn 252 251 253 (parallel[ 
            (set (cc0)
                (compare (reg:DF 133)
                    (mem/s:DF (plus:SI (reg/v/u:SI 33)
                            (reg:SI 136)) 0)))
            (clobber (scratch:HI))
        ] ) 24 {*cmpsf_cc_1-5} (insn_list 248 (insn_list 251 (nil)))
    (expr_list:REG_DEAD (reg:DF 133)
        (expr_list:REG_UNUSED (scratch:HI)
            (nil))))

(jump_insn 253 252 255 (set (pc)
        (if_then_else (lt (cc0)
                (const_int 0 [0x0]))
            (pc)
            (label_ref 275))) 350 {jump-1} (nil)
    (nil))
;; End of basic block 5

(note 255 253 3065 "" NOTE_INSN_DELETED)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 134 136 148 155 179 212 956
(note 3065 255 263 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 263 3065 264 "" NOTE_INSN_DELETED)

(insn 264 263 267 (set (reg:DF 139)
        (mult:DF (mem/s:DF (plus:SI (reg/v/u:SI 33)
                    (reg:SI 136)) 0)
            (mem/s:DF (plus:SI (reg/v/u:SI 33)
                    (reg:SI 136)) 0))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 267 264 268 (set (reg:DF 144)
        (mult:DF (reg:DF 134)
            (reg:DF 134))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_DEAD (reg:DF 134)
        (nil)))

(insn 268 267 269 (set (reg:DF 139)
        (minus:DF (reg:DF 139)
            (reg:DF 144))) 403 {ffshi_1+1} (insn_list 264 (insn_list 267 (nil)))
    (expr_list:REG_DEAD (reg:DF 144)
        (nil)))

(insn 269 268 271 (set (reg:DF 145)
        (sqrt:DF (reg:DF 139))) 273 {sqrtdf2} (insn_list 268 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg/v/u:SI 36)
                (reg:SI 136)) 0)
        (expr_list:REG_DEAD (reg:DF 139)
            (nil))))

(insn 271 269 273 (set (mem/s:DF (plus:SI (reg/v/u:SI 36)
                (reg:SI 136)) 0)
        (reg:DF 145)) 69 {movdf+1} (insn_list 269 (nil))
    (expr_list:REG_DEAD (reg:DF 145)
        (expr_list:REG_DEAD (reg:SI 136)
            (nil))))

(jump_insn 273 271 274 (set (pc)
        (label_ref 293)) 351 {jump} (nil)
    (nil))
;; End of basic block 6

(barrier 274 273 275)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
(code_label 275 274 3066 10 "" [num uses: 1])

(note 3066 275 277 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 277 3066 279 "" NOTE_INSN_DELETED)

(insn 279 277 280 (set (reg:SI 146)
        (plus:SI (reg/v:SI 67)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(note 280 279 283 "" NOTE_INSN_DELETED)

(insn 283 280 285 (set (mem/s:DF (plus:SI (mult:SI (reg:SI 146)
                    (const_int 8 [0x8]))
                (reg/v/u:SI 36)) 0)
        (reg:DF 148)) 69 {movdf+1} (insn_list 279 (nil))
    (nil))

(note 285 283 288 "" NOTE_INSN_DELETED)

(note 288 285 290 "" NOTE_INSN_DELETED)

(insn 290 288 293 (set (mem/s:SI (plus:SI (mult:SI (reg:SI 146)
                    (const_int 4 [0x4]))
                (reg/v/u:SI 34)) 0)
        (const_int 0 [0x0])) 48 {movsi+2} (nil)
    (expr_list:REG_DEAD (reg:SI 146)
        (nil)))
;; End of basic block 7

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
(code_label 293 290 3067 9 "" [num uses: 2])

(note 3067 293 295 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 295 3067 296 "" NOTE_INSN_DELETED)

(note 296 295 298 "" NOTE_INSN_DELETED)

(note 298 296 299 "" NOTE_INSN_DELETED)

(note 299 298 301 "" NOTE_INSN_DELETED)

(insn 301 299 302 (set (reg:DF 154)
        (mem/s:DF (plus:SI (plus:SI (mult:SI (reg/v:SI 67)
                        (const_int 8 [0x8]))
                    (reg/v/u:SI 36))
                (const_int -8 [0xfffffff8])) 0)) 69 {movdf+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (plus:SI (mult:SI (reg/v:SI 67)
                        (const_int 8 [0x8]))
                    (reg/v/u:SI 36))
                (const_int -8 [0xfffffff8])) 0)
        (nil)))

(insn 302 301 303 (parallel[ 
            (set (cc0)
                (compare (reg:DF 154)
                    (mem:DF (reg/v/u:SI 26) 0)))
            (clobber (scratch:HI))
        ] ) 24 {*cmpsf_cc_1-5} (insn_list 301 (nil))
    (expr_list:REG_DEAD (reg:DF 154)
        (expr_list:REG_UNUSED (scratch:HI)
            (nil))))

(jump_insn 303 302 305 (set (pc)
        (if_then_else (gt (cc0)
                (const_int 0 [0x0]))
            (pc)
            (label_ref 349))) 350 {jump-1} (nil)
    (nil))
;; End of basic block 8

(note 305 303 3068 "" NOTE_INSN_DELETED)

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 22 23 25 155
(note 3068 305 308 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 308 3068 310 (set (mem:DF (reg/v/u:SI 22) 0)
        (reg:DF 155)) 69 {movdf+1} (nil)
    (expr_list:REG_DEAD (reg:DF 155)
        (expr_list:REG_DEAD (reg/v/u:SI 22)
            (nil))))

(note 310 308 311 "" NOTE_INSN_DELETED)

(note 311 310 312 "" NOTE_INSN_DELETED)

(insn 312 311 313 (set (cc0)
        (compare (mem:SI (reg/v/u:SI 25) 0)
            (const_int 1 [0x1]))) 12 {cmpsi_1} (nil)
    (expr_list:REG_DEAD (reg/v/u:SI 25)
        (nil)))

(jump_insn 313 312 314 (set (pc)
        (if_then_else (gt (cc0)
                (const_int 0 [0x0]))
            (label_ref/s 2922)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 9

(note 314 313 3069 0 NOTE_INSN_BLOCK_BEG)

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 23
(note 3069 314 318 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 318 3069 319 (set (reg:SI 158)
        (mem:SI (reg/v/u:SI 23) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/s:SI (const:SI (plus:SI (symbol_ref:SI ("__g77_cilist_0.1"))
                    (const_int 4 [0x4]))) 0)
        (expr_list:REG_DEAD (reg/v/u:SI 23)
            (nil))))

(insn 319 318 321 (set (mem/s:SI (const:SI (plus:SI (symbol_ref:SI ("__g77_cilist_0.1"))
                    (const_int 4 [0x4]))) 0)
        (reg:SI 158)) 48 {movsi+2} (insn_list 318 (nil))
    (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 321 319 323 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -12 [0xfffffff4]))) 205 {addsi3+1} (nil)
    (nil))

(insn 323 321 325 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("__g77_cilist_0.1"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 325 323 326 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("s_wsfe")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 326 325 328 "" NOTE_INSN_DELETED)

(insn 328 326 330 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 330 328 332 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 60 [0x3c])) 44 {movsi-2} (nil)
    (nil))

(insn 332 330 334 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC6"))) 44 {movsi-2} (nil)
    (nil))

(insn 334 332 336 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 336 334 338 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(insn 338 336 340 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int 32 [0x20]))) 205 {addsi3+1} (nil)
    (nil))

(call_insn 340 338 341 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("e_wsfe")) 0)
            (const_int 0 [0x0]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 341 340 344 0 NOTE_INSN_BLOCK_END)

(jump_insn 344 341 345 (set (pc)
        (label_ref/s 2922)) 351 {jump} (nil)
    (nil))
;; End of basic block 10

(barrier 345 344 349)

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
(code_label 349 345 3070 7 "" [num uses: 1])

(note 3070 349 351 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 351 3070 352 "" NOTE_INSN_DELETED)

(note 352 351 354 "" NOTE_INSN_DELETED)

(insn 354 352 355 (set (reg:SI 160)
        (plus:SI (reg/v:SI 67)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(note 355 354 356 "" NOTE_INSN_DELETED)

(insn 356 355 357 (set (cc0)
        (mem/s:SI (plus:SI (mult:SI (reg:SI 160)
                    (const_int 4 [0x4]))
                (reg/v/u:SI 34)) 0)) 0 {tstsi_1} (insn_list 354 (nil))
    (nil))

(jump_insn 357 356 3071 (set (pc)
        (if_then_else (eq (cc0)
                (const_int 0 [0x0]))
            (label_ref 556)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 11

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 160 179 212 956
(note 3071 357 360 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 360 3071 362 (set (reg:SI 163)
        (ashift:SI (reg:SI 160)
            (const_int 3 [0x3]))) 295 {ashlqi3+1} (nil)
    (nil))

(insn 362 360 363 (set (reg:DF 164)
        (mem/s:DF (plus:SI (reg/v/u:SI 36)
                (reg:SI 163)) 0)) 69 {movdf+1} (insn_list 360 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg/v/u:SI 36)
                (reg:SI 163)) 0)
        (nil)))

(insn 363 362 364 (parallel[ 
            (set (cc0)
                (compare (reg:DF 164)
                    (mem:DF (reg/v/u:SI 26) 0)))
            (clobber (scratch:HI))
        ] ) 24 {*cmpsf_cc_1-5} (insn_list 362 (nil))
    (expr_list:REG_DEAD (reg:DF 164)
        (expr_list:REG_UNUSED (scratch:HI)
            (nil))))

(jump_insn 364 363 366 (set (pc)
        (if_then_else (lt (cc0)
                (const_int 0 [0x0]))
            (pc)
            (label_ref 556))) 350 {jump-1} (nil)
    (nil))
;; End of basic block 12

(note 366 364 3072 "" NOTE_INSN_DELETED)

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 160 163 179 212 956
(note 3072 366 370 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 370 3072 371 "" NOTE_INSN_DELETED)

(note 371 370 373 "" NOTE_INSN_DELETED)

(insn 373 371 374 (set (reg:SI 166)
        (plus:SI (mult:SI (reg:SI 160)
                (const_int 2 [0x2]))
            (reg:SI 160))) 206 {movsi_lea} (nil)
    (nil))

(insn 374 373 375 (set (reg:SI 167)
        (ashift:SI (reg:SI 166)
            (const_int 3 [0x3]))) 295 {ashlqi3+1} (insn_list 373 (nil))
    (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 160)
                (const_int 24 [0x18]))
            (nil))))

(insn 375 374 377 (set (reg:DF 168)
        (minus:DF (mem/s:DF (plus:SI (reg/v/u:SI 32)
                    (reg:SI 167)) 0)
            (mem/s:DF (reg/v/u:SI 27) 0))) 403 {ffshi_1+1} (insn_list 374 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -24 [0xffffffe8])) 0)
        (nil)))

(insn 377 375 379 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -24 [0xffffffe8])) 0)
        (reg:DF 168)) 69 {movdf+1} (insn_list 375 (nil))
    (expr_list:REG_DEAD (reg:DF 168)
        (nil)))

(note 379 377 390 "" NOTE_INSN_DELETED)

(insn 390 379 392 (set (reg:DF 173)
        (minus:DF (mem/s:DF (plus:SI (reg:SI 115)
                    (reg:SI 167)) 0)
            (mem/s:DF (plus:SI (reg/v/u:SI 27)
                    (const_int 8 [0x8])) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -16 [0xfffffff0])) 0)
        (nil)))

(insn 392 390 394 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -16 [0xfffffff0])) 0)
        (reg:DF 173)) 69 {movdf+1} (insn_list 390 (nil))
    (expr_list:REG_DEAD (reg:DF 173)
        (nil)))

(note 394 392 405 "" NOTE_INSN_DELETED)

(insn 405 394 407 (set (reg:DF 178)
        (minus:DF (mem/s:DF (plus:SI (reg:SI 120)
                    (reg:SI 167)) 0)
            (mem/s:DF (plus:SI (reg/v/u:SI 27)
                    (const_int 16 [0x10])) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -8 [0xfffffff8])) 0)
        (expr_list:REG_DEAD (reg:SI 167)
            (nil))))

(insn 407 405 409 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -8 [0xfffffff8])) 0)
        (reg:DF 178)) 69 {movdf+1} (insn_list 405 (nil))
    (expr_list:REG_DEAD (reg:DF 178)
        (nil)))

(note 409 407 414 "" NOTE_INSN_DELETED)

(insn 414 409 419 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 419 414 421 (set (reg:SI 183)
        (ashift:SI (reg:SI 160)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (nil)
    (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 160)
                (const_int 16 [0x10]))
            (nil))))

(note 421 419 422 "" NOTE_INSN_DELETED)

(insn 422 421 424 (set (reg:SI 184)
        (plus:SI (reg:SI 183)
            (reg/v:SI 179))) 205 {addsi3+1} (insn_list 419 (nil))
    (expr_list:REG_EQUAL (plus:SI (reg:SI 183)
            (reg/v:SI 179))
        (nil)))

(insn 424 422 426 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (reg:SI 184)) 44 {movsi-2} (insn_list 422 (nil))
    (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(insn 426 424 430 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (reg/v/u:SI 28)) 44 {movsi-2} (nil)
    (nil))

(insn 430 426 432 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (reg:SI 123)) 44 {movsi-2} (nil)
    (nil))

(call_insn 432 430 434 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("ddot_")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 434 432 436 "" NOTE_INSN_DELETED)

(insn 436 434 443 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(note 443 436 444 "" NOTE_INSN_DELETED)

(note 444 443 446 "" NOTE_INSN_DELETED)

(insn 446 444 448 (set (reg:SI 192)
        (plus:SI (plus:SI (reg:SI 183)
                (reg/v:SI 179))
            (const_int 8 [0x8]))) 206 {movsi_lea} (nil)
    (nil))

(insn 448 446 450 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (reg:SI 192)) 44 {movsi-2} (insn_list 446 (nil))
    (expr_list:REG_DEAD (reg:SI 192)
        (nil)))

(insn 450 448 454 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (reg/v/u:SI 29)) 44 {movsi-2} (nil)
    (nil))

(insn 454 450 456 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (reg:SI 123)) 44 {movsi-2} (nil)
    (nil))

(call_insn 456 454 458 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("ddot_")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 458 456 460 "" NOTE_INSN_DELETED)

(note 460 458 469 "" NOTE_INSN_DELETED)

(insn 469 460 471 (set (reg/v:DF 73)
        (plus:DF (mem/s:DF (plus:SI (reg/v:SI 179)
                    (reg:SI 183)) 0)
            (mem/s:DF (plus:SI (reg/v/u:SI 36)
                    (reg:SI 163)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_DEAD (reg:SI 183)
        (expr_list:REG_DEAD (reg:SI 163)
            (nil))))

(note 471 469 472 "" NOTE_INSN_DELETED)

(note 472 471 474 "" NOTE_INSN_DELETED)

(insn 474 472 475 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int 32 [0x20]))) 205 {addsi3+1} (nil)
    (nil))

(insn 475 474 476 (parallel[ 
            (set (cc0)
                (compare (reg/v:DF 73)
                    (reg/v:DF 74)))
            (clobber (scratch:HI))
        ] ) 24 {*cmpsf_cc_1-5} (insn_list 469 (nil))
    (expr_list:REG_UNUSED (scratch:HI)
        (nil)))

(jump_insn 476 475 477 (set (pc)
        (if_then_else (gt (cc0)
                (const_int 0 [0x0]))
            (pc)
            (label_ref 480))) 350 {jump-1} (nil)
    (nil))
;; End of basic block 13

(note 477 476 3073 "" NOTE_INSN_DELETED)

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 73 75 76 77 87 88 100 115 120 123 148 155 179 212 956
(note 3073 477 479 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 479 3073 480 (set (reg/v:DF 74)
        (reg/v:DF 73)) 69 {movdf+1} (nil)
    (expr_list:REG_DEAD (reg/v:DF 73)
        (nil)))
;; End of basic block 14

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
(code_label 480 479 3074 16 "" [num uses: 1])

(note 3074 480 482 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 482 3074 484 "" NOTE_INSN_DELETED)

(note 484 482 486 "" NOTE_INSN_DELETED)

(insn 486 484 489 (set (reg:SI 202)
        (plus:SI (reg/v:SI 67)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(insn 489 486 492 (set (reg:SI 204)
        (ashift:SI (reg:SI 202)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (insn_list 486 (nil))
    (expr_list:REG_EQUAL (mult:SI (reg:SI 202)
            (const_int 16 [0x10]))
        (nil)))

(note 492 489 493 "" NOTE_INSN_DELETED)

(insn 493 492 495 (set (reg/v:DF 73)
        (minus:DF (mem/s:DF (plus:SI (reg/v:SI 179)
                    (reg:SI 204)) 0)
            (mem/s:DF (plus:SI (mult:SI (reg:SI 202)
                        (const_int 8 [0x8]))
                    (reg/v/u:SI 36)) 0))) 403 {ffshi_1+1} (insn_list 489 (nil))
    (expr_list:REG_DEAD (reg:SI 202)
        (expr_list:REG_DEAD (reg:SI 204)
            (nil))))

(note 495 493 496 "" NOTE_INSN_DELETED)

(note 496 495 497 "" NOTE_INSN_DELETED)

(insn 497 496 498 (parallel[ 
            (set (cc0)
                (compare (reg/v:DF 73)
                    (reg/v:DF 75)))
            (clobber (scratch:HI))
        ] ) 24 {*cmpsf_cc_1-5} (insn_list 493 (nil))
    (expr_list:REG_UNUSED (scratch:HI)
        (nil)))

(jump_insn 498 497 499 (set (pc)
        (if_then_else (lt (cc0)
                (const_int 0 [0x0]))
            (pc)
            (label_ref 502))) 350 {jump-1} (nil)
    (nil))
;; End of basic block 15

(note 499 498 3075 "" NOTE_INSN_DELETED)

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 73 74 76 77 87 88 100 115 120 123 148 155 179 212 956
(note 3075 499 501 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 501 3075 502 (set (reg/v:DF 75)
        (reg/v:DF 73)) 69 {movdf+1} (nil)
    (expr_list:REG_DEAD (reg/v:DF 73)
        (nil)))
;; End of basic block 16

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
(code_label 502 501 3076 17 "" [num uses: 1])

(note 3076 502 504 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 504 3076 506 "" NOTE_INSN_DELETED)

(note 506 504 508 "" NOTE_INSN_DELETED)

(insn 508 506 511 (set (reg:SI 209)
        (plus:SI (reg/v:SI 67)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(insn 511 508 516 (set (reg:SI 211)
        (ashift:SI (reg:SI 209)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (insn_list 508 (nil))
    (expr_list:REG_EQUAL (mult:SI (reg:SI 209)
            (const_int 16 [0x10]))
        (nil)))

(note 516 511 517 "" NOTE_INSN_DELETED)

(insn 517 516 519 (set (reg/v:DF 73)
        (plus:DF (mem/s:DF (plus:SI (reg:SI 212)
                    (reg:SI 211)) 0)
            (mem/s:DF (plus:SI (mult:SI (reg:SI 209)
                        (const_int 8 [0x8]))
                    (reg/v/u:SI 36)) 0))) 403 {ffshi_1+1} (insn_list 511 (nil))
    (expr_list:REG_DEAD (reg:SI 209)
        (expr_list:REG_DEAD (reg:SI 211)
            (nil))))

(note 519 517 520 "" NOTE_INSN_DELETED)

(note 520 519 521 "" NOTE_INSN_DELETED)

(insn 521 520 522 (parallel[ 
            (set (cc0)
                (compare (reg/v:DF 73)
                    (reg/v:DF 76)))
            (clobber (scratch:HI))
        ] ) 24 {*cmpsf_cc_1-5} (insn_list 517 (nil))
    (expr_list:REG_UNUSED (scratch:HI)
        (nil)))

(jump_insn 522 521 523 (set (pc)
        (if_then_else (gt (cc0)
                (const_int 0 [0x0]))
            (pc)
            (label_ref 526))) 350 {jump-1} (nil)
    (nil))
;; End of basic block 17

(note 523 522 3077 "" NOTE_INSN_DELETED)

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 73 74 75 77 87 88 100 115 120 123 148 155 179 212 956
(note 3077 523 525 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 525 3077 526 (set (reg/v:DF 76)
        (reg/v:DF 73)) 69 {movdf+1} (nil)
    (expr_list:REG_DEAD (reg/v:DF 73)
        (nil)))
;; End of basic block 18

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
(code_label 526 525 3078 18 "" [num uses: 1])

(note 3078 526 528 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 528 3078 530 "" NOTE_INSN_DELETED)

(note 530 528 532 "" NOTE_INSN_DELETED)

(insn 532 530 535 (set (reg:SI 217)
        (plus:SI (reg/v:SI 67)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(insn 535 532 540 (set (reg:SI 219)
        (ashift:SI (reg:SI 217)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (insn_list 532 (nil))
    (expr_list:REG_EQUAL (mult:SI (reg:SI 217)
            (const_int 16 [0x10]))
        (nil)))

(note 540 535 541 "" NOTE_INSN_DELETED)

(insn 541 540 543 (set (reg/v:DF 73)
        (minus:DF (mem/s:DF (plus:SI (reg:SI 212)
                    (reg:SI 219)) 0)
            (mem/s:DF (plus:SI (mult:SI (reg:SI 217)
                        (const_int 8 [0x8]))
                    (reg/v/u:SI 36)) 0))) 403 {ffshi_1+1} (insn_list 535 (nil))
    (expr_list:REG_DEAD (reg:SI 217)
        (expr_list:REG_DEAD (reg:SI 219)
            (nil))))

(note 543 541 544 "" NOTE_INSN_DELETED)

(note 544 543 545 "" NOTE_INSN_DELETED)

(insn 545 544 546 (parallel[ 
            (set (cc0)
                (compare (reg/v:DF 73)
                    (reg/v:DF 77)))
            (clobber (scratch:HI))
        ] ) 24 {*cmpsf_cc_1-5} (insn_list 541 (nil))
    (expr_list:REG_UNUSED (scratch:HI)
        (nil)))

(jump_insn 546 545 547 (set (pc)
        (if_then_else (lt (cc0)
                (const_int 0 [0x0]))
            (pc)
            (label_ref 556))) 350 {jump-1} (nil)
    (nil))
;; End of basic block 19

(note 547 546 3079 "" NOTE_INSN_DELETED)

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 73 74 75 76 87 88 100 115 120 123 148 155 179 212 956
(note 3079 547 549 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 549 3079 553 (set (reg/v:DF 77)
        (reg/v:DF 73)) 69 {movdf+1} (nil)
    (expr_list:REG_DEAD (reg/v:DF 73)
        (nil)))
;; End of basic block 20

(note 553 549 555 "" NOTE_INSN_DELETED_LABEL)

(note 555 553 556 "" NOTE_INSN_LOOP_CONT)

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 27 28 29 31 32 33 34 36 37 67 74 75 76 77 87 88 100 115 120 123 148 155 179 212 956
(code_label 556 555 3080 5 "" [num uses: 4])

(note 3080 556 557 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 557 3080 559 "" NOTE_INSN_DELETED)

(insn 559 557 2928 (set (reg/v:SI 67)
        (plus:SI (reg/v:SI 67)
            (const_int 1 [0x1]))) 205 {addsi3+1} (nil)
    (nil))

(note 2928 559 147 "" NOTE_INSN_LOOP_VTOP)

(note 147 2928 148 "" NOTE_INSN_DELETED)

(note 148 147 149 "" NOTE_INSN_DELETED)

(jump_insn 149 148 565 (parallel[ 
            (set (pc)
                (if_then_else (ge (plus:SI (reg/v:SI 100)
                            (const_int -1 [0xffffffff]))
                        (const_int 0 [0x0]))
                    (label_ref 152)
                    (pc)))
            (set (reg/v:SI 100)
                (plus:SI (reg/v:SI 100)
                    (const_int -1 [0xffffffff])))
        ] ) 354 {decrement_and_branch_until_zero+1} (nil)
    (nil))
;; End of basic block 21

(note 565 149 566 "" NOTE_INSN_LOOP_END)

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 74 75 76 77 87 88 179
(code_label 566 565 3081 4 "" [num uses: 1])

(note 3081 566 567 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 567 3081 569 0 NOTE_INSN_BLOCK_END)

(note 569 567 571 "" NOTE_INSN_DELETED)

(insn 571 569 572 (set (reg:DF 224)
        (mem/u:DF (symbol_ref/u:SI ("*.LC8")) 0)) 69 {movdf+1} (nil)
    (expr_list:REG_EQUIV (const_double:DF (mem/u:DF (symbol_ref/u:SI ("*.LC8")) 0) 0 [0x0] 0 [0x0] 1073577984 [0x3ffd8000])
        (nil)))

(insn 572 571 574 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -56 [0xffffffc8])) 0)
        (reg:DF 224)) 69 {movdf+1} (insn_list 571 (nil))
    (expr_list:REG_DEAD (reg:DF 224)
        (nil)))

(note 574 572 970 "" NOTE_INSN_DELETED)

(note 970 574 2969 "" NOTE_INSN_DELETED)

(insn 2969 970 578 (set (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -256 [0xffffff00])) 0)
        (const_int 0 [0x0])) 48 {movsi+2} (nil)
    (nil))

(note 578 2969 2692 "" NOTE_INSN_DELETED)

(note 2692 578 2984 "" NOTE_INSN_DELETED)

(insn 2984 2692 582 (set (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -272 [0xfffffef0])) 0)
        (const_double:DF (cc0) 0 [0x0] 0 [0x0] 0 [0x0])) 69 {movdf+1} (nil)
    (nil))

(note 582 2984 583 0 NOTE_INSN_BLOCK_BEG)

(note 583 582 586 "" NOTE_INSN_DELETED)

(insn 586 583 588 (set (reg:DF 227)
        (minus:DF (reg/v:DF 74)
            (reg/v:DF 75))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_DEAD (reg/v:DF 74)
        (nil)))

(insn 588 586 589 (set (reg:DF 228)
        (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -56 [0xffffffc8])) 0)) 69 {movdf+1} (nil)
    (nil))

(insn 589 588 590 (set (reg:DF 229)
        (plus:DF (reg:DF 227)
            (reg:DF 228))) 403 {ffshi_1+1} (insn_list 586 (insn_list 588 (nil)))
    (expr_list:REG_DEAD (reg:DF 227)
        (nil)))

(insn 590 589 592 (set (reg:DF 230)
        (div:DF (reg:DF 229)
            (reg:DF 228))) 403 {ffshi_1+1} (insn_list 589 (nil))
    (expr_list:REG_DEAD (reg:DF 229)
        (nil)))

(insn 592 590 594 (parallel[ 
            (set (reg/v:SI 225)
                (fix:SI (fix:DF (reg:DF 230))))
            (clobber (mem:HI (plus:SI (reg:SI 6 %ebp)
                        (const_int -234 [0xffffff16])) 0))
            (clobber (mem:HI (plus:SI (reg:SI 6 %ebp)
                        (const_int -236 [0xffffff14])) 0))
            (clobber (mem:SI (plus:SI (reg:SI 6 %ebp)
                        (const_int -240 [0xffffff10])) 0))
            (clobber (scratch:HI))
        ] ) 149 {fix_truncdfsi2+1} (insn_list 590 (nil))
    (expr_list:REG_DEAD (reg:DF 230)
        (expr_list:REG_UNUSED (scratch:HI)
            (nil))))

(insn 594 592 2929 (set (reg/v:DF 71)
        (reg/v:DF 75)) 69 {movdf+1} (nil)
    (expr_list:REG_DEAD (reg/v:DF 75)
        (nil)))

(note 2929 594 2930 "" NOTE_INSN_DELETED)

(note 2930 2929 2931 "" NOTE_INSN_DELETED)

(jump_insn 2931 2930 3082 (parallel[ 
            (set (pc)
                (if_then_else (lt (plus:SI (reg/v:SI 225)
                            (const_int -1 [0xffffffff]))
                        (const_int 0 [0x0]))
                    (label_ref 922)
                    (pc)))
            (set (reg/v:SI 225)
                (plus:SI (reg/v:SI 225)
                    (const_int -1 [0xffffffff])))
        ] ) 354 {decrement_and_branch_until_zero+1} (insn_list 592 (nil))
    (nil))
;; End of basic block 22

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 71 76 77 87 88 179 225 228
(note 3082 2931 3048 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 3048 3082 595 (set (reg:DF 233)
        (minus:DF (reg/v:DF 76)
            (reg/v:DF 77))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_DEAD (reg/v:DF 76)
        (nil)))
;; End of basic block 23

(note 595 3048 603 "" NOTE_INSN_LOOP_BEG)

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 71 77 87 88 179 225 228 233
(code_label 603 595 3083 25 "" [num uses: 1])

(note 3083 603 605 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note 605 3083 606 0 NOTE_INSN_BLOCK_BEG)

(note 606 605 611 "" NOTE_INSN_DELETED)

(insn 611 606 612 (set (reg:DF 234)
        (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -56 [0xffffffc8])) 0)) 69 {movdf+1} (nil)
    (nil))

(insn 612 611 613 (set (reg:DF 235)
        (plus:DF (reg:DF 233)
            (reg:DF 234))) 403 {ffshi_1+1} (insn_list 611 (nil))
    (nil))

(insn 613 612 615 (set (reg:DF 236)
        (div:DF (reg:DF 235)
            (reg:DF 234))) 403 {ffshi_1+1} (insn_list 612 (nil))
    (expr_list:REG_DEAD (reg:DF 235)
        (nil)))

(insn 615 613 617 (parallel[ 
            (set (reg/v:SI 231)
                (fix:SI (fix:DF (reg:DF 236))))
            (clobber (mem:HI (plus:SI (reg:SI 6 %ebp)
                        (const_int -234 [0xffffff16])) 0))
            (clobber (mem:HI (plus:SI (reg:SI 6 %ebp)
                        (const_int -236 [0xffffff14])) 0))
            (clobber (mem:SI (plus:SI (reg:SI 6 %ebp)
                        (const_int -240 [0xffffff10])) 0))
            (clobber (scratch:HI))
        ] ) 149 {fix_truncdfsi2+1} (insn_list 613 (nil))
    (expr_list:REG_DEAD (reg:DF 236)
        (expr_list:REG_UNUSED (scratch:HI)
            (nil))))

(insn 617 615 2935 (set (reg/v:DF 72)
        (reg/v:DF 77)) 69 {movdf+1} (nil)
    (nil))

(note 2935 617 2936 "" NOTE_INSN_DELETED)

(note 2936 2935 2937 "" NOTE_INSN_DELETED)

(jump_insn 2937 2936 618 (parallel[ 
            (set (pc)
                (if_then_else (lt (plus:SI (reg/v:SI 231)
                            (const_int -1 [0xffffffff]))
                        (const_int 0 [0x0]))
                    (label_ref 913)
                    (pc)))
            (set (reg/v:SI 231)
                (plus:SI (reg/v:SI 231)
                    (const_int -1 [0xffffffff])))
        ] ) 354 {decrement_and_branch_until_zero+1} (insn_list 615 (nil))
    (nil))
;; End of basic block 24

(note 618 2937 626 "" NOTE_INSN_LOOP_BEG)

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234
(code_label 626 618 3084 29 "" [num uses: 1])

(note 3084 626 628 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note 628 3084 630 "" NOTE_INSN_DELETED)

(note 630 628 632 "" NOTE_INSN_DELETED)

(note 632 630 633 "" NOTE_INSN_DELETED)

(insn 633 632 634 (set (reg:DF 237)
        (mult:DF (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -56 [0xffffffc8])) 0)
            (mem/u:DF (symbol_ref/u:SI ("*.LC9")) 0))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 634 633 636 (set (reg:DF 240)
        (plus:DF (reg/v:DF 71)
            (reg:DF 237))) 403 {ffshi_1+1} (insn_list 633 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -40 [0xffffffd8])) 0)
        (nil)))

(insn 636 634 638 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -40 [0xffffffd8])) 0)
        (reg:DF 240)) 69 {movdf+1} (insn_list 634 (nil))
    (expr_list:REG_DEAD (reg:DF 240)
        (nil)))

(note 638 636 644 "" NOTE_INSN_DELETED)

(insn 644 638 646 (set (reg:DF 244)
        (plus:DF (reg/v:DF 72)
            (reg:DF 237))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -32 [0xffffffe0])) 0)
        (expr_list:REG_DEAD (reg:DF 237)
            (nil))))

(insn 646 644 648 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -32 [0xffffffe0])) 0)
        (reg:DF 244)) 69 {movdf+1} (insn_list 644 (nil))
    (expr_list:REG_DEAD (reg:DF 244)
        (nil)))

(note 648 646 650 "" NOTE_INSN_DELETED)

(insn 650 648 652 (set (reg/v:SI 92)
        (const_int 0 [0x0])) 48 {movsi+2} (nil)
    (nil))

(note 652 650 653 0 NOTE_INSN_BLOCK_BEG)

(note 653 652 655 "" NOTE_INSN_DELETED)

(note 655 653 657 "" NOTE_INSN_DELETED)

(insn 657 655 2941 (set (reg/v:SI 67)
        (const_int 1 [0x1])) 48 {movsi+2} (nil)
    (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 2941 657 2942 (set (reg/v:SI 245)
        (plus:SI (mem:SI (reg/v/u:SI 31) 0)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2942 2941 2943 (set (cc0)
        (reg/v:SI 245)) 0 {tstsi_1} (insn_list 2941 (nil))
    (nil))

(jump_insn 2943 2942 3085 (set (pc)
        (if_then_else (lt (cc0)
                (const_int 0 [0x0]))
            (label_ref 775)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 25

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245
(note 3085 2943 3044 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 3044 3085 3045 (set (reg:SI 252)
        (reg/v:SI 179)) 48 {movsi+2} (nil)
    (nil))

(insn 3045 3044 3047 (set (reg:SI 260)
        (plus:SI (reg:SI 252)
            (const_int 8 [0x8]))) 205 {addsi3+1} (insn_list 3044 (nil))
    (nil))

(insn 3047 3045 658 (set (reg:DF 265)
        (mem/u:DF (symbol_ref/u:SI ("*.LC9")) 0)) 69 {movdf+1} (nil)
    (expr_list:REG_EQUIV (const_double:DF (mem/u:DF (symbol_ref/u:SI ("*.LC9")) 0) 0 [0x0] 0 [0x0] 1073643520 [0x3ffe8000])
        (nil)))
;; End of basic block 26

(note 658 3047 666 "" NOTE_INSN_LOOP_BEG)

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245 252 260 265
(code_label 666 658 3086 33 "" [num uses: 1])

(note 3086 666 668 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note 668 3086 669 "" NOTE_INSN_DELETED)

(note 669 668 671 "" NOTE_INSN_DELETED)

(insn 671 669 672 (set (reg:SI 247)
        (plus:SI (reg/v:SI 67)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(note 672 671 673 "" NOTE_INSN_DELETED)

(insn 673 672 674 (set (cc0)
        (mem/s:SI (plus:SI (mult:SI (reg:SI 247)
                    (const_int 4 [0x4]))
                (reg/v/u:SI 34)) 0)) 0 {tstsi_1} (insn_list 671 (nil))
    (nil))

(jump_insn 674 673 3087 (set (pc)
        (if_then_else (eq (cc0)
                (const_int 0 [0x0]))
            (label_ref 765)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 27

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245 247 252 260 265
(note 3087 674 677 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 677 3087 679 (set (reg:SI 250)
        (ashift:SI (reg:SI 247)
            (const_int 3 [0x3]))) 295 {ashlqi3+1} (nil)
    (nil))

(insn 679 677 680 (set (reg:DF 251)
        (mem/s:DF (plus:SI (reg/v/u:SI 36)
                (reg:SI 250)) 0)) 69 {movdf+1} (insn_list 677 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg/v/u:SI 36)
                (reg:SI 250)) 0)
        (nil)))

(insn 680 679 681 (parallel[ 
            (set (cc0)
                (compare (reg:DF 251)
                    (mem:DF (reg/v/u:SI 26) 0)))
            (clobber (scratch:HI))
        ] ) 24 {*cmpsf_cc_1-5} (insn_list 679 (nil))
    (expr_list:REG_DEAD (reg:DF 251)
        (expr_list:REG_UNUSED (scratch:HI)
            (nil))))

(jump_insn 681 680 683 (set (pc)
        (if_then_else (lt (cc0)
                (const_int 0 [0x0]))
            (pc)
            (label_ref 765))) 350 {jump-1} (nil)
    (nil))
;; End of basic block 28

(note 683 681 3088 "" NOTE_INSN_DELETED)

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245 247 250 252 260 265
(note 3088 683 690 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 690 3088 691 (set (reg:SI 255)
        (ashift:SI (reg:SI 247)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (nil)
    (expr_list:REG_DEAD (reg:SI 247)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 247)
                (const_int 16 [0x10]))
            (nil))))

(insn 691 690 693 (set (reg/v:DF 90)
        (minus:DF (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -40 [0xffffffd8])) 0)
            (mem/s:DF (plus:SI (reg:SI 252)
                    (reg:SI 255)) 0))) 403 {ffshi_1+1} (insn_list 690 (nil))
    (nil))

(note 693 691 703 "" NOTE_INSN_DELETED)

(insn 703 693 705 (set (reg/v:DF 91)
        (minus:DF (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -32 [0xffffffe0])) 0)
            (mem/s:DF (plus:SI (reg:SI 260)
                    (reg:SI 255)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_DEAD (reg:SI 255)
        (nil)))

(note 705 703 706 "" NOTE_INSN_DELETED)

(insn 706 705 707 (set (reg/v:DF 89)
        (mult:DF (reg/v:DF 90)
            (reg/v:DF 90))) 403 {ffshi_1+1} (insn_list 691 (nil))
    (expr_list:REG_DEAD (reg/v:DF 90)
        (nil)))

(insn 707 706 708 (set (reg:DF 261)
        (mult:DF (reg/v:DF 91)
            (reg/v:DF 91))) 403 {ffshi_1+1} (insn_list 703 (nil))
    (expr_list:REG_DEAD (reg/v:DF 91)
        (nil)))

(insn 708 707 710 (set (reg/v:DF 89)
        (plus:DF (reg/v:DF 89)
            (reg:DF 261))) 403 {ffshi_1+1} (insn_list 706 (insn_list 707 (nil)))
    (expr_list:REG_DEAD (reg:DF 261)
        (nil)))

(note 710 708 716 "" NOTE_INSN_DELETED)

(insn 716 710 717 (set (reg:DF 264)
        (mult:DF (reg/v:DF 87)
            (reg:DF 265))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 717 716 718 (set (reg:DF 266)
        (mult:DF (reg:DF 264)
            (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -56 [0xffffffc8])) 0))) 403 {ffshi_1+1} (insn_list 716 (nil))
    (expr_list:REG_DEAD (reg:DF 264)
        (nil)))

(insn 718 717 720 (set (reg/v:DF 73)
        (minus:DF (mem/s:DF (plus:SI (reg/v/u:SI 36)
                    (reg:SI 250)) 0)
            (reg:DF 266))) 403 {ffshi_1+1} (insn_list 717 (nil))
    (expr_list:REG_DEAD (reg:SI 250)
        (expr_list:REG_DEAD (reg:DF 266)
            (nil))))

(note 720 718 721 "" NOTE_INSN_DELETED)

(insn 721 720 723 (set (reg/v:DF 73)
        (mult:DF (reg/v:DF 73)
            (reg/v:DF 73))) 403 {ffshi_1+1} (insn_list 718 (nil))
    (nil))

(note 723 721 724 "" NOTE_INSN_DELETED)

(note 724 723 725 "" NOTE_INSN_DELETED)

(insn 725 724 726 (parallel[ 
            (set (cc0)
                (compare (reg/v:DF 89)
                    (reg/v:DF 73)))
            (clobber (scratch:HI))
        ] ) 24 {*cmpsf_cc_1-5} (insn_list 708 (insn_list 721 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 73)
        (expr_list:REG_UNUSED (scratch:HI)
            (nil))))

(jump_insn 726 725 739 (set (pc)
        (if_then_else (lt (cc0)
                (const_int 0 [0x0]))
            (label_ref/s 2989)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 29

(note 739 726 3089 "" NOTE_INSN_DELETED)

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 67 71 72 77 87 88 89 92 179 225 228 231 233 234 245 252 260 265
(note 3089 739 741 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note 741 3089 742 "" NOTE_INSN_DELETED)

(note 742 741 745 "" NOTE_INSN_DELETED)

(insn 745 742 746 (set (reg:DF 272)
        (mult:DF (reg/v:DF 87)
            (reg:DF 265))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 746 745 747 (set (reg:DF 274)
        (mult:DF (reg:DF 272)
            (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -56 [0xffffffc8])) 0))) 403 {ffshi_1+1} (insn_list 745 (nil))
    (expr_list:REG_DEAD (reg:DF 272)
        (nil)))

(insn 747 746 749 (set (reg/v:DF 73)
        (plus:DF (reg:DF 274)
            (mem/s:DF (plus:SI (plus:SI (mult:SI (reg/v:SI 67)
                            (const_int 8 [0x8]))
                        (reg/v/u:SI 36))
                    (const_int -8 [0xfffffff8])) 0))) 403 {ffshi_1+1} (insn_list 746 (nil))
    (expr_list:REG_DEAD (reg:DF 274)
        (nil)))

(note 749 747 750 "" NOTE_INSN_DELETED)

(insn 750 749 752 (set (reg/v:DF 73)
        (mult:DF (reg/v:DF 73)
            (reg/v:DF 73))) 403 {ffshi_1+1} (insn_list 747 (nil))
    (nil))

(note 752 750 753 "" NOTE_INSN_DELETED)

(note 753 752 754 "" NOTE_INSN_DELETED)

(insn 754 753 755 (parallel[ 
            (set (cc0)
                (compare (reg/v:DF 89)
                    (reg/v:DF 73)))
            (clobber (scratch:HI))
        ] ) 24 {*cmpsf_cc_1-5} (insn_list 750 (nil))
    (expr_list:REG_DEAD (reg/v:DF 89)
        (expr_list:REG_DEAD (reg/v:DF 73)
            (expr_list:REG_UNUSED (scratch:HI)
                (nil)))))

(jump_insn 755 754 756 (set (pc)
        (if_then_else (lt (cc0)
                (const_int 0 [0x0]))
            (pc)
            (label_ref 765))) 350 {jump-1} (nil)
    (nil))
;; End of basic block 30

(note 756 755 3090 "" NOTE_INSN_DELETED)

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 67 71 72 77 87 88 179 225 228 231 233 234 245 252 260 265
(note 3090 756 758 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 758 3090 762 (set (reg/v:SI 92)
        (const_int 1 [0x1])) 48 {movsi+2} (nil)
    (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 31

(note 762 758 764 "" NOTE_INSN_DELETED_LABEL)

(note 764 762 765 "" NOTE_INSN_LOOP_CONT)

;; Start of basic block 32, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 67 71 72 77 87 88 92 179 225 228 231 233 234 245 252 260 265
(code_label 765 764 3091 32 "" [num uses: 3])

(note 3091 765 766 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note 766 3091 768 "" NOTE_INSN_DELETED)

(insn 768 766 2946 (set (reg/v:SI 67)
        (plus:SI (reg/v:SI 67)
            (const_int 1 [0x1]))) 205 {addsi3+1} (nil)
    (nil))

(note 2946 768 661 "" NOTE_INSN_LOOP_VTOP)

(note 661 2946 662 "" NOTE_INSN_DELETED)

(note 662 661 663 "" NOTE_INSN_DELETED)

(jump_insn 663 662 774 (parallel[ 
            (set (pc)
                (if_then_else (ge (plus:SI (reg/v:SI 245)
                            (const_int -1 [0xffffffff]))
                        (const_int 0 [0x0]))
                    (label_ref 666)
                    (pc)))
            (set (reg/v:SI 245)
                (plus:SI (reg/v:SI 245)
                    (const_int -1 [0xffffffff])))
        ] ) 354 {decrement_and_branch_until_zero+1} (nil)
    (nil))
;; End of basic block 32

(note 774 663 775 "" NOTE_INSN_LOOP_END)

;; Start of basic block 33, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 71 72 77 87 88 92 179 225 228 231 233 234
(code_label 775 774 3092 31 "" [num uses: 1])

(note 3092 775 776 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note 776 3092 778 0 NOTE_INSN_BLOCK_END)

(note 778 776 779 "" NOTE_INSN_DELETED)

(note 779 778 780 "" NOTE_INSN_DELETED)

(insn 780 779 781 (set (cc0)
        (reg/v:SI 92)) 0 {tstsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 92)
        (nil)))

(jump_insn 781 780 783 (set (pc)
        (if_then_else (eq (cc0)
                (const_int 0 [0x0]))
            (label_ref 899)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 33

(note 783 781 784 "" NOTE_INSN_DELETED)

(note 784 783 3093 "" NOTE_INSN_DELETED)

;; Start of basic block 34, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234
(note 3093 784 785 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 785 3093 786 (set (cc0)
        (compare (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -256 [0xffffff00])) 0)
            (const_int 29999 [0x752f]))) 12 {cmpsi_1} (nil)
    (nil))

(jump_insn 786 785 788 (set (pc)
        (if_then_else (le (cc0)
                (const_int 0 [0x0]))
            (label_ref 861)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 34

(note 788 786 3094 0 NOTE_INSN_BLOCK_BEG)

;; Start of basic block 35, registers live: 6 [bp] 7 [sp] 23 24
(note 3094 788 792 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 792 3094 793 (set (reg:SI 279)
        (mem:SI (reg/v/u:SI 23) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/s:SI (const:SI (plus:SI (symbol_ref:SI ("__g77_cilist_1.2"))
                    (const_int 4 [0x4]))) 0)
        (expr_list:REG_DEAD (reg/v/u:SI 23)
            (nil))))

(insn 793 792 795 (set (mem/s:SI (const:SI (plus:SI (symbol_ref:SI ("__g77_cilist_1.2"))
                    (const_int 4 [0x4]))) 0)
        (reg:SI 279)) 48 {movsi+2} (insn_list 792 (nil))
    (expr_list:REG_DEAD (reg:SI 279)
        (nil)))

(insn 795 793 797 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -12 [0xfffffff4]))) 205 {addsi3+1} (nil)
    (nil))

(insn 797 795 799 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("__g77_cilist_1.2"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 799 797 800 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("s_wsfe")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 800 799 802 "" NOTE_INSN_DELETED)

(insn 802 800 804 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 804 802 806 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 34 [0x22])) 44 {movsi-2} (nil)
    (nil))

(insn 806 804 808 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC10"))) 44 {movsi-2} (nil)
    (nil))

(insn 808 806 810 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 810 808 811 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 811 810 813 "" NOTE_INSN_DELETED)

(insn 813 811 815 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int 32 [0x20]))) 205 {addsi3+1} (nil)
    (nil))

(insn 815 813 817 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 817 815 819 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 34 [0x22])) 44 {movsi-2} (nil)
    (nil))

(insn 819 817 821 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC11"))) 44 {movsi-2} (nil)
    (nil))

(insn 821 819 823 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 823 821 824 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 824 823 826 "" NOTE_INSN_DELETED)

(insn 826 824 828 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 828 826 830 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 51 [0x33])) 44 {movsi-2} (nil)
    (nil))

(insn 830 828 832 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC12"))) 44 {movsi-2} (nil)
    (nil))

(insn 832 830 834 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 834 832 835 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 835 834 837 "" NOTE_INSN_DELETED)

(insn 837 835 839 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int 32 [0x20]))) 205 {addsi3+1} (nil)
    (nil))

(insn 839 837 841 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 841 839 843 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 28 [0x1c])) 44 {movsi-2} (nil)
    (nil))

(insn 843 841 845 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC13"))) 44 {movsi-2} (nil)
    (nil))

(insn 845 843 847 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 847 845 849 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(call_insn 849 847 850 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("e_wsfe")) 0)
            (const_int 0 [0x0]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 850 849 852 0 NOTE_INSN_BLOCK_END)

(note 852 850 854 "" NOTE_INSN_DELETED)

(insn 854 852 857 (set (mem:SI (reg/v/u:SI 24) 0)
        (const_int 1 [0x1])) 48 {movsi+2} (nil)
    (expr_list:REG_DEAD (reg/v/u:SI 24)
        (nil)))

(note 857 854 858 "" NOTE_INSN_DELETED)

(jump_insn 858 857 859 (set (pc)
        (label_ref/s 2922)) 351 {jump} (nil)
    (nil))
;; End of basic block 35

(barrier 859 858 2989)

;; Start of basic block 36, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234
(code_label 2989 859 3095 81 "" [num uses: 1])

(note 3095 2989 728 [bb 36] NOTE_INSN_BASIC_BLOCK)

(note 728 3095 730 "" NOTE_INSN_DELETED)

(note 730 728 731 "" NOTE_INSN_DELETED)

(insn 731 730 732 (set (reg:DF 268)
        (mult:DF (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -56 [0xffffffc8])) 0)
            (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -56 [0xffffffc8])) 0))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 732 731 2695 (set (reg:DF 933)
        (plus:DF (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -272 [0xfffffef0])) 0)
            (reg:DF 268))) 403 {ffshi_1+1} (insn_list 731 (nil))
    (expr_list:REG_EQUIV (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -272 [0xfffffef0])) 0)
        (expr_list:REG_DEAD (reg:DF 268)
            (nil))))

(insn 2695 732 734 (set (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -272 [0xfffffef0])) 0)
        (reg:DF 933)) 69 {movdf+1} (insn_list 732 (nil))
    (expr_list:REG_DEAD (reg:DF 933)
        (nil)))

(jump_insn 734 2695 735 (set (pc)
        (label_ref 899)) 351 {jump} (nil)
    (nil))
;; End of basic block 36

(barrier 735 734 861)

;; Start of basic block 37, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234
(code_label 861 735 3096 41 "" [num uses: 1])

(note 3096 861 863 [bb 37] NOTE_INSN_BASIC_BLOCK)

(note 863 3096 865 "" NOTE_INSN_DELETED)

(note 865 863 867 "" NOTE_INSN_DELETED)

(note 867 865 2972 "" NOTE_INSN_DELETED)

(insn 2972 867 869 (set (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -256 [0xffffff00])) 0)
        (plus:SI (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -256 [0xffffff00])) 0)
            (const_int 1 [0x1]))) 205 {addsi3+1} (nil)
    (nil))

(note 869 2972 871 "" NOTE_INSN_DELETED)

(insn 871 869 874 (set (reg:SI 281)
        (plus:SI (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -256 [0xffffff00])) 0)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(insn 874 871 876 (set (reg:SI 283)
        (ashift:SI (reg:SI 281)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (insn_list 871 (nil))
    (expr_list:REG_DEAD (reg:SI 281)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 281)
                (const_int 16 [0x10]))
            (nil))))

(note 876 874 878 "" NOTE_INSN_DELETED)

(insn 878 876 880 (set (mem/s:DF (plus:SI (reg:SI 283)
                (symbol_ref:SI ("senc.0"))) 0)
        (reg/v:DF 71)) 69 {movdf+1} (insn_list 874 (nil))
    (expr_list:REG_DEAD (reg:SI 283)
        (nil)))

(note 880 878 882 "" NOTE_INSN_DELETED)

(insn 882 880 885 (set (reg:SI 285)
        (plus:SI (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -256 [0xffffff00])) 0)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(insn 885 882 887 (set (reg:SI 287)
        (ashift:SI (reg:SI 285)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (insn_list 882 (nil))
    (expr_list:REG_DEAD (reg:SI 285)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 285)
                (const_int 16 [0x10]))
            (nil))))

(note 887 885 889 "" NOTE_INSN_DELETED)

(insn 889 887 896 (set (mem/s:DF (plus:SI (reg:SI 287)
                (const:SI (plus:SI (symbol_ref:SI ("senc.0"))
                        (const_int 8 [0x8])))) 0)
        (reg/v:DF 72)) 69 {movdf+1} (insn_list 885 (nil))
    (expr_list:REG_DEAD (reg:SI 287)
        (nil)))
;; End of basic block 37

(note 896 889 898 "" NOTE_INSN_DELETED_LABEL)

(note 898 896 899 "" NOTE_INSN_LOOP_CONT)

;; Start of basic block 38, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 71 72 77 87 88 179 225 228 231 233 234
(code_label 899 898 3097 28 "" [num uses: 2])

(note 3097 899 900 [bb 38] NOTE_INSN_BASIC_BLOCK)

(note 900 3097 901 "" NOTE_INSN_DELETED)

(insn 901 900 2940 (set (reg/v:DF 72)
        (plus:DF (reg/v:DF 72)
            (reg:DF 234))) 403 {ffshi_1+1} (nil)
    (nil))

(note 2940 901 621 "" NOTE_INSN_LOOP_VTOP)

(note 621 2940 622 "" NOTE_INSN_DELETED)

(note 622 621 623 "" NOTE_INSN_DELETED)

(jump_insn 623 622 907 (parallel[ 
            (set (pc)
                (if_then_else (ge (plus:SI (reg/v:SI 231)
                            (const_int -1 [0xffffffff]))
                        (const_int 0 [0x0]))
                    (label_ref 626)
                    (pc)))
            (set (reg/v:SI 231)
                (plus:SI (reg/v:SI 231)
                    (const_int -1 [0xffffffff])))
        ] ) 354 {decrement_and_branch_until_zero+1} (nil)
    (nil))
;; End of basic block 38

(note 907 623 909 "" NOTE_INSN_LOOP_END)

(note 909 907 910 0 NOTE_INSN_BLOCK_END)

(note 910 909 912 "" NOTE_INSN_DELETED_LABEL)

(note 912 910 913 "" NOTE_INSN_LOOP_CONT)

;; Start of basic block 39, registers live: 6 [bp] 7 [sp] 22 23 24 25 26 31 34 36 71 77 87 88 179 225 228 233
(code_label 913 912 3098 24 "" [num uses: 1])

(note 3098 913 914 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note 914 3098 915 "" NOTE_INSN_DELETED)

(insn 915 914 2934 (set (reg/v:DF 71)
        (plus:DF (reg/v:DF 71)
            (reg:DF 228))) 403 {ffshi_1+1} (nil)
    (nil))

(note 2934 915 598 "" NOTE_INSN_LOOP_VTOP)

(note 598 2934 599 "" NOTE_INSN_DELETED)

(note 599 598 600 "" NOTE_INSN_DELETED)

(jump_insn 600 599 921 (parallel[ 
            (set (pc)
                (if_then_else (ge (plus:SI (reg/v:SI 225)
                            (const_int -1 [0xffffffff]))
                        (const_int 0 [0x0]))
                    (label_ref 603)
                    (pc)))
            (set (reg/v:SI 225)
                (plus:SI (reg/v:SI 225)
                    (const_int -1 [0xffffffff])))
        ] ) 354 {decrement_and_branch_until_zero+1} (nil)
    (nil))
;; End of basic block 39

(note 921 600 922 "" NOTE_INSN_LOOP_END)

;; Start of basic block 40, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 87 88 179
(code_label 922 921 3099 23 "" [num uses: 1])

(note 3099 922 923 [bb 40] NOTE_INSN_BASIC_BLOCK)

(note 923 3099 925 0 NOTE_INSN_BLOCK_END)

(note 925 923 927 "" NOTE_INSN_DELETED)

(insn 927 925 929 (parallel[ 
            (set (reg:SF 289)
                (float:SF (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                            (const_int -256 [0xffffff00])) 0)))
            (clobber (mem:SI (plus:SI (reg:SI 6 %ebp)
                        (const_int -240 [0xffffff10])) 0))
        ] ) 157 {floatsisf2+1} (nil)
    (nil))

(note 929 927 2725 "" NOTE_INSN_DELETED)

(insn 2725 929 930 (set (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -280 [0xfffffee8])) 0)
        (float_extend:DF (reg:SF 289))) 116 {extenddfxf2-1} (insn_list 927 (nil))
    (expr_list:REG_DEAD (reg:SF 289)
        (nil)))

(insn 930 2725 2728 (set (reg:DF 937)
        (mult:DF (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -280 [0xfffffee8])) 0)
            (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -56 [0xffffffc8])) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -280 [0xfffffee8])) 0)
        (nil)))

(insn 2728 930 931 (set (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -280 [0xfffffee8])) 0)
        (reg:DF 937)) 69 {movdf+1} (insn_list 930 (nil))
    (expr_list:REG_DEAD (reg:DF 937)
        (nil)))

(insn 931 2728 2731 (set (reg:DF 938)
        (mult:DF (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -280 [0xfffffee8])) 0)
            (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -56 [0xffffffc8])) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -280 [0xfffffee8])) 0)
        (nil)))

(insn 2731 931 933 (set (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -280 [0xfffffee8])) 0)
        (reg:DF 938)) 69 {movdf+1} (insn_list 931 (nil))
    (expr_list:REG_DEAD (reg:DF 938)
        (nil)))

(note 933 2731 934 "" NOTE_INSN_DELETED)

(note 934 933 935 "" NOTE_INSN_DELETED)

(note 935 934 939 "" NOTE_INSN_DELETED)

(note 939 935 941 "" NOTE_INSN_DELETED)

(note 941 939 942 "" NOTE_INSN_DELETED)

(insn 942 941 943 (set (reg:DF 293)
        (mult:DF (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -280 [0xfffffee8])) 0)
            (mem/u:DF (symbol_ref/u:SI ("*.LC9")) 0))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 943 942 944 (set (reg:DF 292)
        (plus:DF (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -272 [0xfffffef0])) 0)
            (reg:DF 293))) 403 {ffshi_1+1} (insn_list 942 (nil))
    (expr_list:REG_DEAD (reg:DF 293)
        (nil)))

(insn 944 943 945 (set (reg:DF 292)
        (div:DF (reg:DF 292)
            (reg/v:DF 88))) 403 {ffshi_1+1} (insn_list 943 (nil))
    (nil))

(insn 945 944 947 (set (reg:DF 295)
        (sqrt:DF (reg:DF 292))) 273 {sqrtdf2} (insn_list 944 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/v/u:SI 22) 0)
        (expr_list:REG_DEAD (reg:DF 292)
            (nil))))

(insn 947 945 949 (set (mem:DF (reg/v/u:SI 22) 0)
        (reg:DF 295)) 69 {movdf+1} (insn_list 945 (nil))
    (expr_list:REG_DEAD (reg:DF 295)
        (nil)))

(note 949 947 951 "" NOTE_INSN_DELETED)

(insn 951 949 953 (set (reg/v:SI 79)
        (const_int 1 [0x1])) 48 {movsi+2} (nil)
    (nil))

(note 953 951 955 "" NOTE_INSN_DELETED)

(insn 955 953 957 (set (reg/v:SI 80)
        (const_int 2 [0x2])) 48 {movsi+2} (nil)
    (nil))

(note 957 955 2609 "" NOTE_INSN_DELETED)

(note 2609 957 2979 "" NOTE_INSN_DELETED)

(insn 2979 2609 960 (set (mem/f:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -260 [0xfffffefc])) 0)
        (const_int 0 [0x0])) 48 {movsi+2} (nil)
    (nil))
;; End of basic block 40

;; Start of basic block 41, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 79 80 87 88 179
(code_label 960 2979 3100 46 ("777") [num uses: 1])

(note 3100 960 963 [bb 41] NOTE_INSN_BASIC_BLOCK)

(note 963 3100 965 "" NOTE_INSN_DELETED)

(note 965 963 2612 "" NOTE_INSN_DELETED)

(insn 2612 965 967 (set (mem/f:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -260 [0xfffffefc])) 0)
        (plus:SI (mem/f:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -260 [0xfffffefc])) 0)
            (const_int 1 [0x1]))) 205 {addsi3+1} (nil)
    (nil))

(note 967 2612 972 "" NOTE_INSN_DELETED)

(insn 972 967 973 (set (reg:SI 298)
        (plus:SI (reg/v:SI 80)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(note 973 972 975 "" NOTE_INSN_DELETED)

(insn 975 973 977 (set (reg:SI 300)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -256 [0xffffff00]))) 205 {addsi3+1} (nil)
    (nil))

(insn 977 975 979 (set (mem/s:SI (plus:SI (mult:SI (reg:SI 298)
                    (const_int 4 [0x4]))
                (reg:SI 300)) 0)
        (const_int 0 [0x0])) 48 {movsi+2} (insn_list 972 (insn_list 975 (nil)))
    (nil))

(note 979 977 982 "" NOTE_INSN_DELETED)

(note 982 979 984 "" NOTE_INSN_DELETED)

(insn 984 982 986 (set (reg:SI 303)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -56 [0xffffffc8]))) 205 {addsi3+1} (nil)
    (nil))

(insn 986 984 987 (set (reg:SI 304)
        (plus:SI (reg/v:SI 79)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(note 987 986 991 "" NOTE_INSN_DELETED)

(note 991 987 993 "" NOTE_INSN_DELETED)

(note 993 991 994 "" NOTE_INSN_DELETED)

(insn 994 993 996 (set (reg:DF 307)
        (mult:DF (mem/s:DF (plus:SI (mult:SI (reg:SI 304)
                        (const_int 8 [0x8]))
                    (reg:SI 303)) 0)
            (mem/u:DF (symbol_ref/u:SI ("*.LC9")) 0))) 403 {ffshi_1+1} (insn_list 986 (insn_list 984 (nil)))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (mult:SI (reg:SI 298)
                    (const_int 8 [0x8]))
                (reg:SI 303)) 0)
        (nil)))

(insn 996 994 998 (set (mem/s:DF (plus:SI (mult:SI (reg:SI 298)
                    (const_int 8 [0x8]))
                (reg:SI 303)) 0)
        (reg:DF 307)) 69 {movdf+1} (insn_list 994 (nil))
    (expr_list:REG_DEAD (reg:SI 298)
        (expr_list:REG_DEAD (reg:SI 303)
            (expr_list:REG_DEAD (reg:DF 307)
                (nil)))))

(note 998 996 999 0 NOTE_INSN_BLOCK_BEG)

(note 999 998 1002 "" NOTE_INSN_DELETED)

(note 1002 999 1006 "" NOTE_INSN_DELETED)

(note 1006 1002 1008 "" NOTE_INSN_DELETED)

(insn 1008 1006 2947 (set (reg/v:SI 68)
        (const_int 1 [0x1])) 48 {movsi+2} (nil)
    (nil))

(insn 2947 1008 2948 (set (reg/v:SI 310)
        (plus:SI (mem/s:SI (plus:SI (mult:SI (reg:SI 304)
                        (const_int 4 [0x4]))
                    (reg:SI 300)) 0)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (expr_list:REG_DEAD (reg:SI 300)
        (expr_list:REG_DEAD (reg:SI 304)
            (nil))))

(insn 2948 2947 2949 (set (cc0)
        (reg/v:SI 310)) 0 {tstsi_1} (insn_list 2947 (nil))
    (nil))

(jump_insn 2949 2948 3101 (set (pc)
        (if_then_else (lt (cc0)
                (const_int 0 [0x0]))
            (label_ref 2530)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 41

;; Start of basic block 42, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 68 79 80 87 88 179 310
(note 3101 2949 3010 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 3010 3101 3011 (set (reg:SI 317)
        (plus:SI (reg/v:SI 79)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(insn 3011 3010 3012 (set (reg:SI 319)
        (ashift:SI (reg:SI 317)
            (const_int 5 [0x5]))) 296 {ashlqi3+2} (insn_list 3010 (nil))
    (expr_list:REG_EQUAL (mult:SI (reg:SI 317)
            (const_int 32 [0x20]))
        (nil)))

(insn 3012 3011 3013 (set (reg:SI 320)
        (minus:SI (reg:SI 319)
            (reg:SI 317))) 217 {subsi3+1} (insn_list 3011 (nil))
    (expr_list:REG_DEAD (reg:SI 319)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 317)
                (const_int 31 [0x1f]))
            (nil))))

(note 3013 3012 3014 "" NOTE_INSN_DELETED)

(insn 3014 3013 3015 (set (reg:SI 322)
        (plus:SI (mult:SI (reg:SI 320)
                (const_int 4 [0x4]))
            (reg:SI 317))) 206 {movsi_lea} (insn_list 3012 (nil))
    (expr_list:REG_DEAD (reg:SI 320)
        (nil)))

(insn 3015 3014 3016 (set (reg:SI 323)
        (ashift:SI (reg:SI 322)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (insn_list 3014 (nil))
    (nil))

(insn 3016 3015 3017 (set (reg:SI 324)
        (minus:SI (reg:SI 323)
            (reg:SI 322))) 217 {subsi3+1} (insn_list 3015 (nil))
    (expr_list:REG_DEAD (reg:SI 323)
        (expr_list:REG_DEAD (reg:SI 322)
            (expr_list:REG_EQUAL (mult:SI (reg:SI 317)
                    (const_int 1875 [0x753]))
                (nil)))))

(insn 3017 3016 3019 (set (reg:SI 325)
        (ashift:SI (reg:SI 324)
            (const_int 8 [0x8]))) 296 {ashlqi3+2} (insn_list 3016 (nil))
    (expr_list:REG_DEAD (reg:SI 324)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 317)
                (const_int 480000 [0x75300]))
            (nil))))

(insn 3019 3017 3020 (set (reg:SI 327)
        (symbol_ref:SI ("senc.0"))) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (symbol_ref:SI ("senc.0"))
        (nil)))

(insn 3020 3019 3021 (set (reg:SI 329)
        (ashift:SI (reg:SI 317)
            (const_int 3 [0x3]))) 295 {ashlqi3+1} (nil)
    (nil))

(insn 3021 3020 3023 (set (reg:SI 330)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -56 [0xffffffc8]))) 205 {addsi3+1} (nil)
    (nil))

(insn 3023 3021 3025 (set (reg:DF 333)
        (mem/u:DF (symbol_ref/u:SI ("*.LC9")) 0)) 69 {movdf+1} (nil)
    (expr_list:REG_EQUIV (const_double:DF (mem/u:DF (symbol_ref/u:SI ("*.LC9")) 0) 0 [0x0] 0 [0x0] 1073643520 [0x3ffe8000])
        (nil)))

(insn 3025 3023 3026 (set (reg:SI 344)
        (const:SI (plus:SI (symbol_ref:SI ("senc.0"))
                (const_int 8 [0x8])))) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("senc.0"))
                (const_int 8 [0x8])))
        (nil)))

(insn 3026 3025 3027 (set (reg:SI 649)
        (plus:SI (reg/v:SI 80)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(insn 3027 3026 3028 (set (reg:SI 663)
        (ashift:SI (reg:SI 649)
            (const_int 2 [0x2]))) 295 {ashlqi3+1} (insn_list 3026 (nil))
    (nil))

(insn 3028 3027 3029 (set (reg:SI 664)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -256 [0xffffff00]))) 205 {addsi3+1} (nil)
    (nil))

(insn 3029 3028 3030 (set (reg:SI 679)
        (ashift:SI (reg:SI 649)
            (const_int 5 [0x5]))) 296 {ashlqi3+2} (nil)
    (expr_list:REG_EQUAL (mult:SI (reg:SI 649)
            (const_int 32 [0x20]))
        (nil)))

(insn 3030 3029 3031 (set (reg:SI 679)
        (minus:SI (reg:SI 679)
            (reg:SI 649))) 217 {subsi3+1} (insn_list 3029 (nil))
    (expr_list:REG_EQUAL (mult:SI (reg:SI 649)
            (const_int 31 [0x1f]))
        (nil)))

(note 3031 3030 3032 "" NOTE_INSN_DELETED)

(insn 3032 3031 3033 (set (reg:SI 679)
        (plus:SI (mult:SI (reg:SI 679)
                (const_int 4 [0x4]))
            (reg:SI 649))) 206 {movsi_lea} (insn_list 3030 (nil))
    (nil))

(insn 3033 3032 3034 (set (reg:SI 680)
        (ashift:SI (reg:SI 679)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (insn_list 3032 (nil))
    (nil))

(insn 3034 3033 3035 (set (reg:SI 680)
        (minus:SI (reg:SI 680)
            (reg:SI 679))) 217 {subsi3+1} (insn_list 3033 (nil))
    (expr_list:REG_DEAD (reg:SI 679)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 649)
                (const_int 1875 [0x753]))
            (nil))))

(insn 3035 3034 3036 (set (reg:SI 681)
        (ashift:SI (reg:SI 680)
            (const_int 8 [0x8]))) 296 {ashlqi3+2} (insn_list 3034 (nil))
    (expr_list:REG_DEAD (reg:SI 680)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 649)
                (const_int 480000 [0x75300]))
            (nil))))

(insn 3036 3035 3037 (set (reg:SI 689)
        (ashift:SI (reg:SI 317)
            (const_int 5 [0x5]))) 296 {ashlqi3+2} (nil)
    (expr_list:REG_EQUAL (mult:SI (reg:SI 317)
            (const_int 32 [0x20]))
        (nil)))

(insn 3037 3036 3038 (set (reg:SI 689)
        (minus:SI (reg:SI 689)
            (reg:SI 317))) 217 {subsi3+1} (insn_list 3036 (nil))
    (expr_list:REG_EQUAL (mult:SI (reg:SI 317)
            (const_int 31 [0x1f]))
        (nil)))

(note 3038 3037 3039 "" NOTE_INSN_DELETED)

(insn 3039 3038 3040 (set (reg:SI 689)
        (plus:SI (mult:SI (reg:SI 689)
                (const_int 4 [0x4]))
            (reg:SI 317))) 206 {movsi_lea} (insn_list 3037 (nil))
    (expr_list:REG_DEAD (reg:SI 317)
        (nil)))

(insn 3040 3039 3041 (set (reg:SI 690)
        (ashift:SI (reg:SI 689)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (insn_list 3039 (nil))
    (nil))

(insn 3041 3040 3042 (set (reg:SI 690)
        (minus:SI (reg:SI 690)
            (reg:SI 689))) 217 {subsi3+1} (insn_list 3040 (nil))
    (expr_list:REG_DEAD (reg:SI 689)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 317)
                (const_int 1875 [0x753]))
            (nil))))

(insn 3042 3041 3043 (set (reg:SI 691)
        (ashift:SI (reg:SI 690)
            (const_int 8 [0x8]))) 296 {ashlqi3+2} (insn_list 3041 (nil))
    (expr_list:REG_DEAD (reg:SI 690)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 317)
                (const_int 480000 [0x75300]))
            (nil))))

(insn 3043 3042 1009 (set (reg:SI 753)
        (ashift:SI (reg:SI 649)
            (const_int 3 [0x3]))) 295 {ashlqi3+1} (nil)
    (nil))
;; End of basic block 42

(note 1009 3043 1017 "" NOTE_INSN_LOOP_BEG)

;; Start of basic block 43, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753
(code_label 1017 1009 3102 50 "" [num uses: 1])

(note 3102 1017 1019 [bb 43] NOTE_INSN_BASIC_BLOCK)

(note 1019 3102 1021 "" NOTE_INSN_DELETED)

(note 1021 1019 1024 "" NOTE_INSN_DELETED)

(insn 1024 1021 1040 (set (reg:SI 316)
        (ashift:SI (reg/v:SI 68)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (nil)
    (nil))

(insn 1040 1024 1049 (set (reg:SI 326)
        (plus:SI (plus:SI (reg:SI 316)
                (reg:SI 325))
            (const_int -16 [0xfffffff0]))) 206 {movsi_lea} (insn_list 1024 (nil))
    (expr_list:REG_DEAD (reg:SI 316)
        (nil)))

(note 1049 1040 1052 "" NOTE_INSN_DELETED)

(insn 1052 1049 1053 (set (reg:DF 331)
        (mult:DF (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 329)) 0)
            (reg:DF 333))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 1053 1052 1055 (set (reg:DF 334)
        (plus:DF (reg:DF 331)
            (mem/s:DF (plus:SI (reg:SI 327)
                    (reg:SI 326)) 0))) 403 {ffshi_1+1} (insn_list 1040 (insn_list 1052 (nil)))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -40 [0xffffffd8])) 0)
        (expr_list:REG_DEAD (reg:DF 331)
            (nil))))

(insn 1055 1053 1057 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -40 [0xffffffd8])) 0)
        (reg:DF 334)) 69 {movdf+1} (insn_list 1053 (nil))
    (expr_list:REG_DEAD (reg:DF 334)
        (nil)))

(note 1057 1055 1087 "" NOTE_INSN_DELETED)

(note 1087 1057 1090 "" NOTE_INSN_DELETED)

(insn 1090 1087 1091 (set (reg:DF 348)
        (mult:DF (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 329)) 0)
            (reg:DF 333))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 1091 1090 1093 (set (reg:DF 351)
        (plus:DF (reg:DF 348)
            (mem/s:DF (plus:SI (reg:SI 344)
                    (reg:SI 326)) 0))) 403 {ffshi_1+1} (insn_list 1090 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -32 [0xffffffe0])) 0)
        (expr_list:REG_DEAD (reg:DF 348)
            (nil))))

(insn 1093 1091 1095 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -32 [0xffffffe0])) 0)
        (reg:DF 351)) 69 {movdf+1} (insn_list 1091 (nil))
    (expr_list:REG_DEAD (reg:DF 351)
        (nil)))

(note 1095 1093 1120 "" NOTE_INSN_DELETED)

(insn 1120 1095 1121 (set (reg:DF 362)
        (mem/s:DF (plus:SI (reg:SI 327)
                (reg:SI 326)) 0)) 69 {movdf+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 327)
                (reg:SI 326)) 0)
        (nil)))

(insn 1121 1120 1123 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -184 [0xffffff48])) 0)
        (reg:DF 362)) 69 {movdf+1} (insn_list 1120 (nil))
    (nil))

(note 1123 1121 1148 "" NOTE_INSN_DELETED)

(insn 1148 1123 1149 (set (reg:DF 373)
        (mem/s:DF (plus:SI (reg:SI 344)
                (reg:SI 326)) 0)) 69 {movdf+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 344)
                (reg:SI 326)) 0)
        (nil)))

(insn 1149 1148 1151 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -176 [0xffffff50])) 0)
        (reg:DF 373)) 69 {movdf+1} (insn_list 1148 (nil))
    (nil))

(note 1151 1149 1153 "" NOTE_INSN_DELETED)

(insn 1153 1151 1155 (set (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -216 [0xffffff28])) 0)
        (const_int 0 [0x0])) 48 {movsi+2} (nil)
    (nil))

(note 1155 1153 1185 "" NOTE_INSN_DELETED)

(note 1185 1155 1188 "" NOTE_INSN_DELETED)

(insn 1188 1185 1189 (set (reg:DF 387)
        (mult:DF (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 329)) 0)
            (reg:DF 333))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 1189 1188 1191 (set (reg:DF 390)
        (plus:DF (reg:DF 387)
            (mem/s:DF (plus:SI (reg:SI 327)
                    (reg:SI 326)) 0))) 403 {ffshi_1+1} (insn_list 1188 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -168 [0xffffff58])) 0)
        (expr_list:REG_DEAD (reg:DF 387)
            (nil))))

(insn 1191 1189 1193 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -168 [0xffffff58])) 0)
        (reg:DF 390)) 69 {movdf+1} (insn_list 1189 (nil))
    (expr_list:REG_DEAD (reg:DF 390)
        (nil)))

(note 1193 1191 1219 "" NOTE_INSN_DELETED)

(insn 1219 1193 1221 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -160 [0xffffff60])) 0)
        (reg:DF 373)) 69 {movdf+1} (nil)
    (nil))

(note 1221 1219 1223 "" NOTE_INSN_DELETED)

(insn 1223 1221 1225 (set (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -212 [0xffffff2c])) 0)
        (const_int 0 [0x0])) 48 {movsi+2} (nil)
    (nil))

(note 1225 1223 1254 "" NOTE_INSN_DELETED)

(insn 1254 1225 1256 (set (reg:DF 415)
        (plus:DF (mem/s:DF (plus:SI (reg:SI 327)
                    (reg:SI 326)) 0)
            (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 329)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -152 [0xffffff68])) 0)
        (nil)))

(insn 1256 1254 1258 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -152 [0xffffff68])) 0)
        (reg:DF 415)) 69 {movdf+1} (insn_list 1254 (nil))
    (expr_list:REG_DEAD (reg:DF 415)
        (nil)))

(note 1258 1256 1284 "" NOTE_INSN_DELETED)

(insn 1284 1258 1286 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -144 [0xffffff70])) 0)
        (reg:DF 373)) 69 {movdf+1} (nil)
    (expr_list:REG_DEAD (reg:DF 373)
        (nil)))

(note 1286 1284 1288 "" NOTE_INSN_DELETED)

(insn 1288 1286 1290 (set (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -208 [0xffffff30])) 0)
        (const_int 0 [0x0])) 48 {movsi+2} (nil)
    (nil))

(note 1290 1288 1316 "" NOTE_INSN_DELETED)

(insn 1316 1290 1318 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -136 [0xffffff78])) 0)
        (reg:DF 362)) 69 {movdf+1} (nil)
    (nil))

(note 1318 1316 1348 "" NOTE_INSN_DELETED)

(note 1348 1318 1351 "" NOTE_INSN_DELETED)

(insn 1351 1348 1352 (set (reg:DF 451)
        (mult:DF (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 329)) 0)
            (reg:DF 333))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 1352 1351 1354 (set (reg:DF 454)
        (plus:DF (reg:DF 451)
            (mem/s:DF (plus:SI (reg:SI 344)
                    (reg:SI 326)) 0))) 403 {ffshi_1+1} (insn_list 1351 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -128 [0xffffff80])) 0)
        (expr_list:REG_DEAD (reg:DF 451)
            (nil))))

(insn 1354 1352 1356 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -128 [0xffffff80])) 0)
        (reg:DF 454)) 69 {movdf+1} (insn_list 1352 (nil))
    (expr_list:REG_DEAD (reg:DF 454)
        (nil)))

(note 1356 1354 1358 "" NOTE_INSN_DELETED)

(insn 1358 1356 1360 (set (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -204 [0xffffff34])) 0)
        (const_int 0 [0x0])) 48 {movsi+2} (nil)
    (nil))

(note 1360 1358 1389 "" NOTE_INSN_DELETED)

(insn 1389 1360 1391 (set (reg:DF 468)
        (plus:DF (mem/s:DF (plus:SI (reg:SI 327)
                    (reg:SI 326)) 0)
            (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 329)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -120 [0xffffff88])) 0)
        (nil)))

(insn 1391 1389 1393 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -120 [0xffffff88])) 0)
        (reg:DF 468)) 69 {movdf+1} (insn_list 1389 (nil))
    (expr_list:REG_DEAD (reg:DF 468)
        (nil)))

(note 1393 1391 1423 "" NOTE_INSN_DELETED)

(note 1423 1393 1426 "" NOTE_INSN_DELETED)

(insn 1426 1423 1427 (set (reg:DF 482)
        (mult:DF (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 329)) 0)
            (reg:DF 333))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 1427 1426 1429 (set (reg:DF 485)
        (plus:DF (reg:DF 482)
            (mem/s:DF (plus:SI (reg:SI 344)
                    (reg:SI 326)) 0))) 403 {ffshi_1+1} (insn_list 1426 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -112 [0xffffff90])) 0)
        (expr_list:REG_DEAD (reg:DF 482)
            (nil))))

(insn 1429 1427 1431 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -112 [0xffffff90])) 0)
        (reg:DF 485)) 69 {movdf+1} (insn_list 1427 (nil))
    (expr_list:REG_DEAD (reg:DF 485)
        (nil)))

(note 1431 1429 1433 "" NOTE_INSN_DELETED)

(insn 1433 1431 1435 (set (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -200 [0xffffff38])) 0)
        (const_int 0 [0x0])) 48 {movsi+2} (nil)
    (nil))

(note 1435 1433 1461 "" NOTE_INSN_DELETED)

(insn 1461 1435 1463 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -104 [0xffffff98])) 0)
        (reg:DF 362)) 69 {movdf+1} (nil)
    (expr_list:REG_DEAD (reg:DF 362)
        (nil)))

(note 1463 1461 1492 "" NOTE_INSN_DELETED)

(insn 1492 1463 1494 (set (reg:DF 510)
        (plus:DF (mem/s:DF (plus:SI (reg:SI 344)
                    (reg:SI 326)) 0)
            (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 329)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -96 [0xffffffa0])) 0)
        (nil)))

(insn 1494 1492 1496 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -96 [0xffffffa0])) 0)
        (reg:DF 510)) 69 {movdf+1} (insn_list 1492 (nil))
    (expr_list:REG_DEAD (reg:DF 510)
        (nil)))

(note 1496 1494 1498 "" NOTE_INSN_DELETED)

(insn 1498 1496 1500 (set (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -196 [0xffffff3c])) 0)
        (const_int 0 [0x0])) 48 {movsi+2} (nil)
    (nil))

(note 1500 1498 1530 "" NOTE_INSN_DELETED)

(note 1530 1500 1533 "" NOTE_INSN_DELETED)

(insn 1533 1530 1534 (set (reg:DF 524)
        (mult:DF (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 329)) 0)
            (reg:DF 333))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 1534 1533 1536 (set (reg:DF 527)
        (plus:DF (reg:DF 524)
            (mem/s:DF (plus:SI (reg:SI 327)
                    (reg:SI 326)) 0))) 403 {ffshi_1+1} (insn_list 1533 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -88 [0xffffffa8])) 0)
        (expr_list:REG_DEAD (reg:DF 524)
            (nil))))

(insn 1536 1534 1538 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -88 [0xffffffa8])) 0)
        (reg:DF 527)) 69 {movdf+1} (insn_list 1534 (nil))
    (expr_list:REG_DEAD (reg:DF 527)
        (nil)))

(note 1538 1536 1567 "" NOTE_INSN_DELETED)

(insn 1567 1538 1569 (set (reg:DF 541)
        (plus:DF (mem/s:DF (plus:SI (reg:SI 344)
                    (reg:SI 326)) 0)
            (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 329)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -80 [0xffffffb0])) 0)
        (nil)))

(insn 1569 1567 1571 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -80 [0xffffffb0])) 0)
        (reg:DF 541)) 69 {movdf+1} (insn_list 1567 (nil))
    (expr_list:REG_DEAD (reg:DF 541)
        (nil)))

(note 1571 1569 1573 "" NOTE_INSN_DELETED)

(insn 1573 1571 1575 (set (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -192 [0xffffff40])) 0)
        (const_int 0 [0x0])) 48 {movsi+2} (nil)
    (nil))

(note 1575 1573 1604 "" NOTE_INSN_DELETED)

(insn 1604 1575 1606 (set (reg:DF 555)
        (plus:DF (mem/s:DF (plus:SI (reg:SI 327)
                    (reg:SI 326)) 0)
            (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 329)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -72 [0xffffffb8])) 0)
        (nil)))

(insn 1606 1604 1608 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -72 [0xffffffb8])) 0)
        (reg:DF 555)) 69 {movdf+1} (insn_list 1604 (nil))
    (expr_list:REG_DEAD (reg:DF 555)
        (nil)))

(note 1608 1606 1637 "" NOTE_INSN_DELETED)

(insn 1637 1608 1639 (set (reg:DF 569)
        (plus:DF (mem/s:DF (plus:SI (reg:SI 344)
                    (reg:SI 326)) 0)
            (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 329)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -64 [0xffffffc0])) 0)
        (expr_list:REG_DEAD (reg:SI 326)
            (nil))))

(insn 1639 1637 1641 (set (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -64 [0xffffffc0])) 0)
        (reg:DF 569)) 69 {movdf+1} (insn_list 1637 (nil))
    (expr_list:REG_DEAD (reg:DF 569)
        (nil)))

(note 1641 1639 1643 "" NOTE_INSN_DELETED)

(insn 1643 1641 1645 (set (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -188 [0xffffff44])) 0)
        (const_int 0 [0x0])) 48 {movsi+2} (nil)
    (nil))

(note 1645 1643 1646 0 NOTE_INSN_BLOCK_BEG)

(note 1646 1645 1648 "" NOTE_INSN_DELETED)

(note 1648 1646 1650 "" NOTE_INSN_DELETED)

(insn 1650 1648 2953 (set (reg/v:SI 67)
        (const_int 1 [0x1])) 48 {movsi+2} (nil)
    (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 2953 1650 2954 (set (reg/v:SI 570)
        (plus:SI (mem:SI (reg/v/u:SI 31) 0)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2954 2953 2955 (set (cc0)
        (reg/v:SI 570)) 0 {tstsi_1} (insn_list 2953 (nil))
    (nil))

(jump_insn 2955 2954 3103 (set (pc)
        (if_then_else (lt (cc0)
                (const_int 0 [0x0]))
            (label_ref 1874)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 43

;; Start of basic block 44, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 649 663 664 681 691 753
(note 3103 2955 3000 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 3000 3103 3001 (set (reg:SI 577)
        (reg/v:SI 179)) 48 {movsi+2} (nil)
    (nil))

(insn 3001 3000 3003 (set (reg:SI 585)
        (plus:SI (reg:SI 577)
            (const_int 8 [0x8]))) 205 {addsi3+1} (insn_list 3000 (nil))
    (nil))

(insn 3003 3001 3004 (set (reg:DF 590)
        (mem/u:DF (symbol_ref/u:SI ("*.LC9")) 0)) 69 {movdf+1} (nil)
    (expr_list:REG_EQUIV (const_double:DF (mem/u:DF (symbol_ref/u:SI ("*.LC9")) 0) 0 [0x0] 0 [0x0] 1073643520 [0x3ffe8000])
        (nil)))

(note 3004 3003 3005 "" NOTE_INSN_DELETED)

(insn 3005 3004 3006 (set (reg:SI 592)
        (plus:SI (mult:SI (reg/v:SI 79)
                (const_int 8 [0x8]))
            (const_int -8 [0xfffffff8]))) 206 {movsi_lea} (nil)
    (nil))

(insn 3006 3005 3009 (set (reg:SI 593)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -56 [0xffffffc8]))) 205 {addsi3+1} (nil)
    (nil))

(note 3009 3006 1651 "" NOTE_INSN_DELETED)
;; End of basic block 44

(note 1651 3009 1659 "" NOTE_INSN_LOOP_BEG)

;; Start of basic block 45, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 649 663 664 681 691 753
(code_label 1659 1651 3104 54 "" [num uses: 1])

(note 3104 1659 1661 [bb 45] NOTE_INSN_BASIC_BLOCK)

(note 1661 3104 1662 "" NOTE_INSN_DELETED)

(note 1662 1661 1664 "" NOTE_INSN_DELETED)

(insn 1664 1662 1665 (set (reg:SI 572)
        (plus:SI (reg/v:SI 67)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(note 1665 1664 1666 "" NOTE_INSN_DELETED)

(insn 1666 1665 1667 (set (cc0)
        (mem/s:SI (plus:SI (mult:SI (reg:SI 572)
                    (const_int 4 [0x4]))
                (reg/v/u:SI 34)) 0)) 0 {tstsi_1} (insn_list 1664 (nil))
    (nil))

(jump_insn 1667 1666 3105 (set (pc)
        (if_then_else (eq (cc0)
                (const_int 0 [0x0]))
            (label_ref 1862)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 45

;; Start of basic block 46, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 572 577 585 590 592 593 649 663 664 681 691 753
(note 3105 1667 1670 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 1670 3105 1672 (set (reg:SI 575)
        (ashift:SI (reg:SI 572)
            (const_int 3 [0x3]))) 295 {ashlqi3+1} (nil)
    (nil))

(insn 1672 1670 1673 (set (reg:DF 576)
        (mem/s:DF (plus:SI (reg/v/u:SI 36)
                (reg:SI 575)) 0)) 69 {movdf+1} (insn_list 1670 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg/v/u:SI 36)
                (reg:SI 575)) 0)
        (nil)))

(insn 1673 1672 1674 (parallel[ 
            (set (cc0)
                (compare (reg:DF 576)
                    (mem:DF (reg/v/u:SI 26) 0)))
            (clobber (scratch:HI))
        ] ) 24 {*cmpsf_cc_1-5} (insn_list 1672 (nil))
    (expr_list:REG_DEAD (reg:DF 576)
        (expr_list:REG_UNUSED (scratch:HI)
            (nil))))

(jump_insn 1674 1673 1676 (set (pc)
        (if_then_else (lt (cc0)
                (const_int 0 [0x0]))
            (pc)
            (label_ref 1862))) 350 {jump-1} (nil)
    (nil))
;; End of basic block 46

(note 1676 1674 3106 "" NOTE_INSN_DELETED)

;; Start of basic block 47, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 572 575 577 585 590 592 593 649 663 664 681 691 753
(note 3106 1676 1683 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 1683 3106 1684 (set (reg:SI 580)
        (ashift:SI (reg:SI 572)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (nil)
    (expr_list:REG_DEAD (reg:SI 572)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 572)
                (const_int 16 [0x10]))
            (nil))))

(insn 1684 1683 1686 (set (reg/v:DF 90)
        (minus:DF (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -40 [0xffffffd8])) 0)
            (mem/s:DF (plus:SI (reg:SI 577)
                    (reg:SI 580)) 0))) 403 {ffshi_1+1} (insn_list 1683 (nil))
    (nil))

(note 1686 1684 1696 "" NOTE_INSN_DELETED)

(insn 1696 1686 1698 (set (reg/v:DF 91)
        (minus:DF (mem/s:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -32 [0xffffffe0])) 0)
            (mem/s:DF (plus:SI (reg:SI 585)
                    (reg:SI 580)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_DEAD (reg:SI 580)
        (nil)))

(note 1698 1696 1699 "" NOTE_INSN_DELETED)

(insn 1699 1698 1700 (set (reg/v:DF 89)
        (mult:DF (reg/v:DF 90)
            (reg/v:DF 90))) 403 {ffshi_1+1} (insn_list 1684 (nil))
    (expr_list:REG_DEAD (reg/v:DF 90)
        (nil)))

(insn 1700 1699 1701 (set (reg:DF 586)
        (mult:DF (reg/v:DF 91)
            (reg/v:DF 91))) 403 {ffshi_1+1} (insn_list 1696 (nil))
    (expr_list:REG_DEAD (reg/v:DF 91)
        (nil)))

(insn 1701 1700 1703 (set (reg/v:DF 89)
        (plus:DF (reg/v:DF 89)
            (reg:DF 586))) 403 {ffshi_1+1} (insn_list 1699 (insn_list 1700 (nil)))
    (expr_list:REG_DEAD (reg:DF 586)
        (nil)))

(note 1703 1701 1709 "" NOTE_INSN_DELETED)

(insn 1709 1703 1715 (set (reg:DF 589)
        (mult:DF (reg/v:DF 87)
            (reg:DF 590))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 1715 1709 1716 (set (reg:DF 594)
        (mult:DF (reg:DF 589)
            (mem/s:DF (plus:SI (reg:SI 593)
                    (reg:SI 592)) 0))) 403 {ffshi_1+1} (insn_list 1709 (nil))
    (expr_list:REG_DEAD (reg:DF 589)
        (nil)))

(insn 1716 1715 1718 (set (reg/v:DF 73)
        (plus:DF (reg:DF 594)
            (mem/s:DF (plus:SI (reg/v/u:SI 36)
                    (reg:SI 575)) 0))) 403 {ffshi_1+1} (insn_list 1715 (nil))
    (expr_list:REG_DEAD (reg:DF 594)
        (expr_list:REG_DEAD (reg:SI 575)
            (nil))))

(note 1718 1716 1719 "" NOTE_INSN_DELETED)

(insn 1719 1718 1721 (set (reg/v:DF 73)
        (mult:DF (reg/v:DF 73)
            (reg/v:DF 73))) 403 {ffshi_1+1} (insn_list 1716 (nil))
    (nil))

(note 1721 1719 1722 "" NOTE_INSN_DELETED)

(note 1722 1721 1723 "" NOTE_INSN_DELETED)

(insn 1723 1722 1724 (parallel[ 
            (set (cc0)
                (compare (reg/v:DF 89)
                    (reg/v:DF 73)))
            (clobber (scratch:HI))
        ] ) 24 {*cmpsf_cc_1-5} (insn_list 1701 (insn_list 1719 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 89)
        (expr_list:REG_DEAD (reg/v:DF 73)
            (expr_list:REG_UNUSED (scratch:HI)
                (nil)))))

(jump_insn 1724 1723 1729 (set (pc)
        (if_then_else (gt (cc0)
                (const_int 0 [0x0]))
            (label_ref 1862)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 47

(note 1729 1724 1730 0 NOTE_INSN_BLOCK_BEG)

(note 1730 1729 3107 "" NOTE_INSN_DELETED)

;; Start of basic block 48, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 649 663 664 681 691 753
(note 3107 1730 1732 [bb 48] NOTE_INSN_BASIC_BLOCK)

(note 1732 3107 1734 "" NOTE_INSN_DELETED)

(insn 1734 1732 2959 (set (reg/v:SI 69)
        (const_int 1 [0x1])) 48 {movsi+2} (nil)
    (nil))

(insn 2959 1734 2960 (set (reg/v:SI 596)
        (const_int 7 [0x7])) 48 {movsi+2} (nil)
    (nil))

(note 2960 2959 2961 "" NOTE_INSN_DELETED)

(note 2961 2960 2990 "" NOTE_INSN_DELETED)

(insn 2990 2961 2991 (set (reg:SI 600)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -184 [0xffffff48]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2991 2990 2992 (set (reg:SI 601)
        (reg/v:SI 179)) 48 {movsi+2} (nil)
    (nil))

(insn 2992 2991 2993 (set (reg:SI 602)
        (plus:SI (reg/v:SI 67)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2993 2992 2994 (set (reg:SI 604)
        (ashift:SI (reg:SI 602)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (insn_list 2992 (nil))
    (expr_list:REG_EQUAL (mult:SI (reg:SI 602)
            (const_int 16 [0x10]))
        (nil)))

(insn 2994 2993 2995 (set (reg:SI 608)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -176 [0xffffff50]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2995 2994 2996 (set (reg:SI 613)
        (plus:SI (reg:SI 601)
            (const_int 8 [0x8]))) 205 {addsi3+1} (insn_list 2991 (nil))
    (nil))

(note 2996 2995 2997 "" NOTE_INSN_DELETED)

(note 2997 2996 2998 "" NOTE_INSN_DELETED)

(insn 2998 2997 2999 (set (reg/v:DF 73)
        (mult:DF (mem/s:DF (plus:SI (mult:SI (reg:SI 602)
                        (const_int 8 [0x8]))
                    (reg/v/u:SI 36)) 0)
            (mem/s:DF (plus:SI (mult:SI (reg:SI 602)
                        (const_int 8 [0x8]))
                    (reg/v/u:SI 36)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_DEAD (reg:SI 602)
        (nil)))

(insn 2999 2998 1735 (set (reg:SI 620)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -216 [0xffffff28]))) 205 {addsi3+1} (nil)
    (nil))
;; End of basic block 48

(note 1735 2999 1743 "" NOTE_INSN_LOOP_BEG)

;; Start of basic block 49, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 67 68 69 73 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 596 600 601 604 608 613 620 649 663 664 681 691 753
(code_label 1743 1735 3108 61 "" [num uses: 1])

(note 3108 1743 1745 [bb 49] NOTE_INSN_BASIC_BLOCK)

(note 1745 3108 1747 "" NOTE_INSN_DELETED)

(insn 1747 1745 1750 (set (reg:SI 597)
        (plus:SI (reg/v:SI 69)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(insn 1750 1747 1760 (set (reg:SI 599)
        (ashift:SI (reg:SI 597)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (insn_list 1747 (nil))
    (expr_list:REG_EQUAL (mult:SI (reg:SI 597)
            (const_int 16 [0x10]))
        (nil)))

(insn 1760 1750 1762 (set (reg/v:DF 90)
        (minus:DF (mem/s:DF (plus:SI (reg:SI 600)
                    (reg:SI 599)) 0)
            (mem/s:DF (plus:SI (reg:SI 601)
                    (reg:SI 604)) 0))) 403 {ffshi_1+1} (insn_list 1750 (nil))
    (nil))

(note 1762 1760 1779 "" NOTE_INSN_DELETED)

(insn 1779 1762 1781 (set (reg/v:DF 91)
        (minus:DF (mem/s:DF (plus:SI (reg:SI 608)
                    (reg:SI 599)) 0)
            (mem/s:DF (plus:SI (reg:SI 613)
                    (reg:SI 604)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_DEAD (reg:SI 599)
        (nil)))

(note 1781 1779 1782 "" NOTE_INSN_DELETED)

(insn 1782 1781 1783 (set (reg/v:DF 89)
        (mult:DF (reg/v:DF 90)
            (reg/v:DF 90))) 403 {ffshi_1+1} (insn_list 1760 (nil))
    (expr_list:REG_DEAD (reg/v:DF 90)
        (nil)))

(insn 1783 1782 1784 (set (reg:DF 614)
        (mult:DF (reg/v:DF 91)
            (reg/v:DF 91))) 403 {ffshi_1+1} (insn_list 1779 (nil))
    (expr_list:REG_DEAD (reg/v:DF 91)
        (nil)))

(insn 1784 1783 1786 (set (reg/v:DF 89)
        (plus:DF (reg/v:DF 89)
            (reg:DF 614))) 403 {ffshi_1+1} (insn_list 1782 (insn_list 1783 (nil)))
    (expr_list:REG_DEAD (reg:DF 614)
        (nil)))

(note 1786 1784 1793 "" NOTE_INSN_DELETED)

(note 1793 1786 1796 "" NOTE_INSN_DELETED)

(note 1796 1793 1797 "" NOTE_INSN_DELETED)

(note 1797 1796 1798 "" NOTE_INSN_DELETED)

(insn 1798 1797 1799 (parallel[ 
            (set (cc0)
                (compare (reg/v:DF 89)
                    (reg/v:DF 73)))
            (clobber (scratch:HI))
        ] ) 24 {*cmpsf_cc_1-5} (insn_list 1784 (nil))
    (expr_list:REG_DEAD (reg/v:DF 89)
        (expr_list:REG_UNUSED (scratch:HI)
            (nil))))

(jump_insn 1799 1798 1800 (set (pc)
        (if_then_else (lt (cc0)
                (const_int 0 [0x0]))
            (pc)
            (label_ref 1812))) 350 {jump-1} (nil)
    (nil))
;; End of basic block 49

(note 1800 1799 3109 "" NOTE_INSN_DELETED)

;; Start of basic block 50, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 67 68 69 73 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 596 597 600 601 604 608 613 620 649 663 664 681 691 753
(note 3109 1800 1803 [bb 50] NOTE_INSN_BASIC_BLOCK)

(note 1803 3109 1807 "" NOTE_INSN_DELETED)

(insn 1807 1803 1809 (set (mem/s:SI (plus:SI (mult:SI (reg:SI 597)
                    (const_int 4 [0x4]))
                (reg:SI 620)) 0)
        (const_int 1 [0x1])) 48 {movsi+2} (nil)
    (expr_list:REG_DEAD (reg:SI 597)
        (nil)))
;; End of basic block 50

(note 1809 1807 1811 "" NOTE_INSN_DELETED_LABEL)

(note 1811 1809 1812 "" NOTE_INSN_LOOP_CONT)

;; Start of basic block 51, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 67 68 69 73 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 596 600 601 604 608 613 620 649 663 664 681 691 753
(code_label 1812 1811 3110 60 "" [num uses: 1])

(note 3110 1812 1813 [bb 51] NOTE_INSN_BASIC_BLOCK)

(note 1813 3110 1815 "" NOTE_INSN_DELETED)

(insn 1815 1813 2964 (set (reg/v:SI 69)
        (plus:SI (reg/v:SI 69)
            (const_int 1 [0x1]))) 205 {addsi3+1} (nil)
    (nil))

(note 2964 1815 1738 "" NOTE_INSN_LOOP_VTOP)

(note 1738 2964 1739 "" NOTE_INSN_DELETED)

(note 1739 1738 1740 "" NOTE_INSN_DELETED)

(jump_insn 1740 1739 1821 (parallel[ 
            (set (pc)
                (if_then_else (ge (plus:SI (reg/v:SI 596)
                            (const_int -1 [0xffffffff]))
                        (const_int 0 [0x0]))
                    (label_ref 1743)
                    (pc)))
            (set (reg/v:SI 596)
                (plus:SI (reg/v:SI 596)
                    (const_int -1 [0xffffffff])))
        ] ) 354 {decrement_and_branch_until_zero+1} (nil)
    (nil))
;; End of basic block 51

(note 1821 1740 1823 "" NOTE_INSN_LOOP_END)

(note 1823 1821 1825 0 NOTE_INSN_BLOCK_END)

(note 1825 1823 3111 "" NOTE_INSN_DELETED)

;; Start of basic block 52, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 649 663 664 681 691 753
(note 3111 1825 1827 [bb 52] NOTE_INSN_BASIC_BLOCK)

(note 1827 3111 1829 "" NOTE_INSN_DELETED)

(insn 1829 1827 1830 (set (reg:SI 622)
        (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -212 [0xffffff2c])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -212 [0xffffff2c])) 0)
        (nil)))

(insn 1830 1829 1832 (set (reg/v:SI 93)
        (plus:SI (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -216 [0xffffff28])) 0)
            (reg:SI 622))) 205 {addsi3+1} (insn_list 1829 (nil))
    (expr_list:REG_DEAD (reg:SI 622)
        (nil)))

(note 1832 1830 1833 "" NOTE_INSN_DELETED)

(insn 1833 1832 1835 (set (reg/v:SI 93)
        (plus:SI (reg/v:SI 93)
            (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -208 [0xffffff30])) 0))) 205 {addsi3+1} (insn_list 1830 (nil))
    (nil))

(note 1835 1833 1836 "" NOTE_INSN_DELETED)

(insn 1836 1835 1838 (set (reg/v:SI 93)
        (plus:SI (reg/v:SI 93)
            (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -204 [0xffffff34])) 0))) 205 {addsi3+1} (insn_list 1833 (nil))
    (nil))

(note 1838 1836 1839 "" NOTE_INSN_DELETED)

(insn 1839 1838 1841 (set (reg/v:SI 93)
        (plus:SI (reg/v:SI 93)
            (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -200 [0xffffff38])) 0))) 205 {addsi3+1} (insn_list 1836 (nil))
    (nil))

(note 1841 1839 1842 "" NOTE_INSN_DELETED)

(insn 1842 1841 1844 (set (reg/v:SI 93)
        (plus:SI (reg/v:SI 93)
            (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -196 [0xffffff3c])) 0))) 205 {addsi3+1} (insn_list 1839 (nil))
    (nil))

(note 1844 1842 1845 "" NOTE_INSN_DELETED)

(insn 1845 1844 1847 (set (reg/v:SI 93)
        (plus:SI (reg/v:SI 93)
            (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -192 [0xffffff40])) 0))) 205 {addsi3+1} (insn_list 1842 (nil))
    (nil))

(note 1847 1845 1848 "" NOTE_INSN_DELETED)

(insn 1848 1847 1850 (set (reg/v:SI 93)
        (plus:SI (reg/v:SI 93)
            (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -188 [0xffffff44])) 0))) 205 {addsi3+1} (insn_list 1845 (nil))
    (nil))

(note 1850 1848 1851 "" NOTE_INSN_DELETED)

(note 1851 1850 1852 "" NOTE_INSN_DELETED)

(insn 1852 1851 1853 (set (cc0)
        (compare (reg/v:SI 93)
            (const_int 8 [0x8]))) 12 {cmpsi_1} (insn_list 1848 (nil))
    (expr_list:REG_DEAD (reg/v:SI 93)
        (nil)))

(jump_insn 1853 1852 1859 (set (pc)
        (if_then_else (eq (cc0)
                (const_int 0 [0x0]))
            (label_ref/s 1874)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 52

(note 1859 1853 1861 "" NOTE_INSN_DELETED_LABEL)

(note 1861 1859 1862 "" NOTE_INSN_LOOP_CONT)

;; Start of basic block 53, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 67 68 79 80 87 88 179 310 325 327 329 330 333 344 570 577 585 590 592 593 649 663 664 681 691 753
(code_label 1862 1861 3112 53 "" [num uses: 3])

(note 3112 1862 1863 [bb 53] NOTE_INSN_BASIC_BLOCK)

(note 1863 3112 1865 "" NOTE_INSN_DELETED)

(insn 1865 1863 2958 (set (reg/v:SI 67)
        (plus:SI (reg/v:SI 67)
            (const_int 1 [0x1]))) 205 {addsi3+1} (nil)
    (nil))

(note 2958 1865 1654 "" NOTE_INSN_LOOP_VTOP)

(note 1654 2958 1655 "" NOTE_INSN_DELETED)

(note 1655 1654 1656 "" NOTE_INSN_DELETED)

(jump_insn 1656 1655 1871 (parallel[ 
            (set (pc)
                (if_then_else (ge (plus:SI (reg/v:SI 570)
                            (const_int -1 [0xffffffff]))
                        (const_int 0 [0x0]))
                    (label_ref 1659)
                    (pc)))
            (set (reg/v:SI 570)
                (plus:SI (reg/v:SI 570)
                    (const_int -1 [0xffffffff])))
        ] ) 354 {decrement_and_branch_until_zero+1} (nil)
    (nil))
;; End of basic block 53

(note 1871 1656 1873 "" NOTE_INSN_LOOP_END)

(note 1873 1871 1874 0 NOTE_INSN_BLOCK_END)

;; Start of basic block 54, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753
(code_label 1874 1873 3113 66 ("71") [num uses: 2])

(note 3113 1874 1877 [bb 54] NOTE_INSN_BASIC_BLOCK)

(note 1877 3113 1879 "" NOTE_INSN_DELETED)

(note 1879 1877 1881 "" NOTE_INSN_DELETED)

(insn 1881 1879 1882 (set (reg:SI 631)
        (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -212 [0xffffff2c])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                (const_int -212 [0xffffff2c])) 0)
        (nil)))

(insn 1882 1881 1884 (set (reg/v:SI 93)
        (plus:SI (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -216 [0xffffff28])) 0)
            (reg:SI 631))) 205 {addsi3+1} (insn_list 1881 (nil))
    (expr_list:REG_DEAD (reg:SI 631)
        (nil)))

(note 1884 1882 1885 "" NOTE_INSN_DELETED)

(insn 1885 1884 1887 (set (reg/v:SI 93)
        (plus:SI (reg/v:SI 93)
            (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -208 [0xffffff30])) 0))) 205 {addsi3+1} (insn_list 1882 (nil))
    (nil))

(note 1887 1885 1888 "" NOTE_INSN_DELETED)

(insn 1888 1887 1890 (set (reg/v:SI 93)
        (plus:SI (reg/v:SI 93)
            (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -204 [0xffffff34])) 0))) 205 {addsi3+1} (insn_list 1885 (nil))
    (nil))

(note 1890 1888 1891 "" NOTE_INSN_DELETED)

(insn 1891 1890 1893 (set (reg/v:SI 93)
        (plus:SI (reg/v:SI 93)
            (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -200 [0xffffff38])) 0))) 205 {addsi3+1} (insn_list 1888 (nil))
    (nil))

(note 1893 1891 1894 "" NOTE_INSN_DELETED)

(insn 1894 1893 1896 (set (reg/v:SI 93)
        (plus:SI (reg/v:SI 93)
            (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -196 [0xffffff3c])) 0))) 205 {addsi3+1} (insn_list 1891 (nil))
    (nil))

(note 1896 1894 1897 "" NOTE_INSN_DELETED)

(insn 1897 1896 1899 (set (reg/v:SI 93)
        (plus:SI (reg/v:SI 93)
            (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -192 [0xffffff40])) 0))) 205 {addsi3+1} (insn_list 1894 (nil))
    (nil))

(note 1899 1897 1900 "" NOTE_INSN_DELETED)

(insn 1900 1899 1902 (set (reg/v:SI 93)
        (plus:SI (reg/v:SI 93)
            (mem/s:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -188 [0xffffff44])) 0))) 205 {addsi3+1} (insn_list 1897 (nil))
    (nil))

(note 1902 1900 1903 "" NOTE_INSN_DELETED)

(note 1903 1902 1904 "" NOTE_INSN_DELETED)

(insn 1904 1903 1905 (set (cc0)
        (compare (reg/v:SI 93)
            (const_int 8 [0x8]))) 12 {cmpsi_1} (insn_list 1900 (nil))
    (nil))

(jump_insn 1905 1904 1907 (set (pc)
        (if_then_else (ne (cc0)
                (const_int 0 [0x0]))
            (label_ref 1925)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 54

(note 1907 1905 3114 "" NOTE_INSN_DELETED)

;; Start of basic block 55, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753
(note 3114 1907 1919 [bb 55] NOTE_INSN_BASIC_BLOCK)

(note 1919 3114 1920 "" NOTE_INSN_DELETED)

(insn 1920 1919 1921 (set (reg:DF 645)
        (mult:DF (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 329)) 0)
            (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 329)) 0))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 1921 1920 2698 (set (reg:DF 934)
        (plus:DF (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -272 [0xfffffef0])) 0)
            (reg:DF 645))) 403 {ffshi_1+1} (insn_list 1920 (nil))
    (expr_list:REG_EQUIV (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -272 [0xfffffef0])) 0)
        (expr_list:REG_DEAD (reg:DF 645)
            (nil))))

(insn 2698 1921 1923 (set (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -272 [0xfffffef0])) 0)
        (reg:DF 934)) 69 {movdf+1} (insn_list 1921 (nil))
    (expr_list:REG_DEAD (reg:DF 934)
        (nil)))

(jump_insn 1923 2698 1924 (set (pc)
        (label_ref 2520)) 351 {jump} (nil)
    (nil))
;; End of basic block 55

(barrier 1924 1923 1925)

;; Start of basic block 56, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 68 79 80 87 88 93 179 310 325 327 329 330 333 344 649 663 664 681 691 753
(code_label 1925 1924 3115 68 "" [num uses: 1])

(note 3115 1925 1926 [bb 56] NOTE_INSN_BASIC_BLOCK)

(note 1926 3115 1927 "" NOTE_INSN_DELETED)

(note 1927 1926 1928 "" NOTE_INSN_DELETED)

(insn 1928 1927 1929 (set (cc0)
        (reg/v:SI 93)) 0 {tstsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 93)
        (nil)))

(jump_insn 1929 1928 1935 (set (pc)
        (if_then_else (eq (cc0)
                (const_int 0 [0x0]))
            (label_ref 2520)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 56

(note 1935 1929 1936 "" NOTE_INSN_DELETED)

(note 1936 1935 3116 "" NOTE_INSN_DELETED)

;; Start of basic block 57, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753
(note 3116 1936 1939 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 1939 3116 1941 (set (reg:SI 650)
        (ashift:SI (reg:SI 649)
            (const_int 2 [0x2]))) 295 {ashlqi3+1} (nil)
    (nil))

(insn 1941 1939 1943 (set (reg:SI 651)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -256 [0xffffff00]))) 205 {addsi3+1} (nil)
    (nil))

(note 1943 1941 1944 "" NOTE_INSN_DELETED)

(insn 1944 1943 1945 (set (reg:SI 652)
        (plus:SI (mem/s:SI (plus:SI (reg:SI 651)
                    (reg:SI 650)) 0)
            (const_int 4 [0x4]))) 205 {addsi3+1} (insn_list 1941 (insn_list 1939 (nil)))
    (nil))

(insn 1945 1944 1946 (set (cc0)
        (compare (reg:SI 652)
            (const_int 29999 [0x752f]))) 12 {cmpsi_1} (insn_list 1944 (nil))
    (nil))

(jump_insn 1946 1945 1948 (set (pc)
        (if_then_else (le (cc0)
                (const_int 0 [0x0]))
            (label_ref 1967)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 57

(note 1948 1946 3117 "" NOTE_INSN_DELETED)

;; Start of basic block 58, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 650 651 652 663 664 681 691 753
(note 3117 1948 1963 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 1963 3117 1965 (set (mem/s:SI (plus:SI (reg:SI 651)
                (reg:SI 650)) 0)
        (reg:SI 652)) 48 {movsi+2} (nil)
    (expr_list:REG_DEAD (reg:SI 652)
        (expr_list:REG_DEAD (reg:SI 651)
            (expr_list:REG_DEAD (reg:SI 650)
                (nil)))))

(jump_insn 1965 1963 1966 (set (pc)
        (label_ref 2520)) 351 {jump} (nil)
    (nil))
;; End of basic block 58

(barrier 1966 1965 1967)

;; Start of basic block 59, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753
(code_label 1967 1966 3118 72 "" [num uses: 1])

(note 3118 1967 1969 [bb 59] NOTE_INSN_BASIC_BLOCK)

(note 1969 3118 1981 "" NOTE_INSN_DELETED)

(insn 1981 1969 1982 (set (reg:SI 669)
        (mem/s:SI (plus:SI (reg:SI 664)
                (reg:SI 663)) 0)) 48 {movsi+2} (nil)
    (nil))

(note 1982 1981 1984 "" NOTE_INSN_DELETED)

(insn 1984 1982 1986 (set (mem/s:SI (plus:SI (reg:SI 664)
                (reg:SI 663)) 0)
        (plus:SI (reg:SI 669)
            (const_int 1 [0x1]))) 205 {addsi3+1} (insn_list 1981 (nil))
    (nil))

(note 1986 1984 1997 "" NOTE_INSN_DELETED)

(insn 1997 1986 2013 (set (reg:SI 676)
        (ashift:SI (reg:SI 669)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (nil)
    (expr_list:REG_DEAD (reg:SI 669)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 669)
                (const_int 16 [0x10]))
            (nil))))

(insn 2013 1997 2017 (set (reg:SI 682)
        (plus:SI (reg:SI 676)
            (reg:SI 681))) 205 {addsi3+1} (insn_list 1997 (nil))
    (expr_list:REG_DEAD (reg:SI 676)
        (nil)))

(note 2017 2013 2020 "" NOTE_INSN_DELETED)

(insn 2020 2017 2036 (set (reg:SI 686)
        (ashift:SI (reg/v:SI 68)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (nil)
    (nil))

(insn 2036 2020 2040 (set (reg:SI 692)
        (plus:SI (plus:SI (reg:SI 686)
                (reg:SI 691))
            (const_int -16 [0xfffffff0]))) 206 {movsi_lea} (insn_list 2020 (nil))
    (expr_list:REG_DEAD (reg:SI 686)
        (nil)))

(insn 2040 2036 2041 (set (reg:DF 694)
        (mem/s:DF (plus:SI (reg:SI 327)
                (reg:SI 692)) 0)) 69 {movdf+1} (insn_list 2036 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 327)
                (reg:SI 692)) 0)
        (nil)))

(insn 2041 2040 2043 (set (mem/s:DF (plus:SI (reg:SI 327)
                (reg:SI 682)) 0)
        (reg:DF 694)) 69 {movdf+1} (insn_list 2013 (insn_list 2040 (nil)))
    (expr_list:REG_DEAD (reg:DF 694)
        (expr_list:REG_DEAD (reg:SI 682)
            (nil))))

(note 2043 2041 2050 "" NOTE_INSN_DELETED)

(note 2050 2043 2051 "" NOTE_INSN_DELETED)

(note 2051 2050 2054 "" NOTE_INSN_DELETED)

(insn 2054 2051 2070 (set (reg:SI 701)
        (ashift:SI (mem/s:SI (plus:SI (reg:SI 664)
                    (reg:SI 663)) 0)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (nil)
    (nil))

(insn 2070 2054 2097 (set (reg:SI 707)
        (plus:SI (plus:SI (reg:SI 701)
                (reg:SI 681))
            (const_int -16 [0xfffffff0]))) 206 {movsi_lea} (insn_list 2054 (nil))
    (expr_list:REG_DEAD (reg:SI 701)
        (nil)))

(insn 2097 2070 2098 (set (reg:DF 719)
        (mem/s:DF (plus:SI (reg:SI 344)
                (reg:SI 692)) 0)) 69 {movdf+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 344)
                (reg:SI 692)) 0)
        (nil)))

(insn 2098 2097 2100 (set (mem/s:DF (plus:SI (reg:SI 344)
                (reg:SI 707)) 0)
        (reg:DF 719)) 69 {movdf+1} (insn_list 2070 (insn_list 2097 (nil)))
    (expr_list:REG_DEAD (reg:DF 719)
        (expr_list:REG_DEAD (reg:SI 707)
            (nil))))

(note 2100 2098 2112 "" NOTE_INSN_DELETED)

(insn 2112 2100 2113 (set (reg:SI 727)
        (mem/s:SI (plus:SI (reg:SI 664)
                (reg:SI 663)) 0)) 48 {movsi+2} (nil)
    (nil))

(note 2113 2112 2115 "" NOTE_INSN_DELETED)

(insn 2115 2113 2117 (set (mem/s:SI (plus:SI (reg:SI 664)
                (reg:SI 663)) 0)
        (plus:SI (reg:SI 727)
            (const_int 1 [0x1]))) 205 {addsi3+1} (insn_list 2112 (nil))
    (nil))

(note 2117 2115 2128 "" NOTE_INSN_DELETED)

(insn 2128 2117 2144 (set (reg:SI 734)
        (ashift:SI (reg:SI 727)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (nil)
    (expr_list:REG_DEAD (reg:SI 727)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 727)
                (const_int 16 [0x10]))
            (nil))))

(insn 2144 2128 2175 (set (reg:SI 740)
        (plus:SI (reg:SI 734)
            (reg:SI 681))) 205 {addsi3+1} (insn_list 2128 (nil))
    (expr_list:REG_DEAD (reg:SI 734)
        (nil)))

(insn 2175 2144 2177 (set (reg:DF 755)
        (plus:DF (mem/s:DF (plus:SI (reg:SI 327)
                    (reg:SI 692)) 0)
            (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 753)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 327)
                (reg:SI 740)) 0)
        (nil)))

(insn 2177 2175 2179 (set (mem/s:DF (plus:SI (reg:SI 327)
                (reg:SI 740)) 0)
        (reg:DF 755)) 69 {movdf+1} (insn_list 2144 (insn_list 2175 (nil)))
    (expr_list:REG_DEAD (reg:DF 755)
        (expr_list:REG_DEAD (reg:SI 740)
            (nil))))

(note 2179 2177 2186 "" NOTE_INSN_DELETED)

(note 2186 2179 2187 "" NOTE_INSN_DELETED)

(note 2187 2186 2190 "" NOTE_INSN_DELETED)

(insn 2190 2187 2206 (set (reg:SI 762)
        (ashift:SI (mem/s:SI (plus:SI (reg:SI 664)
                    (reg:SI 663)) 0)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (nil)
    (nil))

(insn 2206 2190 2233 (set (reg:SI 768)
        (plus:SI (plus:SI (reg:SI 762)
                (reg:SI 681))
            (const_int -16 [0xfffffff0]))) 206 {movsi_lea} (insn_list 2190 (nil))
    (expr_list:REG_DEAD (reg:SI 762)
        (nil)))

(insn 2233 2206 2234 (set (reg:DF 780)
        (mem/s:DF (plus:SI (reg:SI 344)
                (reg:SI 692)) 0)) 69 {movdf+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 344)
                (reg:SI 692)) 0)
        (nil)))

(insn 2234 2233 2236 (set (mem/s:DF (plus:SI (reg:SI 344)
                (reg:SI 768)) 0)
        (reg:DF 780)) 69 {movdf+1} (insn_list 2206 (insn_list 2233 (nil)))
    (expr_list:REG_DEAD (reg:DF 780)
        (expr_list:REG_DEAD (reg:SI 768)
            (nil))))

(note 2236 2234 2248 "" NOTE_INSN_DELETED)

(insn 2248 2236 2249 (set (reg:SI 788)
        (mem/s:SI (plus:SI (reg:SI 664)
                (reg:SI 663)) 0)) 48 {movsi+2} (nil)
    (nil))

(note 2249 2248 2251 "" NOTE_INSN_DELETED)

(insn 2251 2249 2253 (set (mem/s:SI (plus:SI (reg:SI 664)
                (reg:SI 663)) 0)
        (plus:SI (reg:SI 788)
            (const_int 1 [0x1]))) 205 {addsi3+1} (insn_list 2248 (nil))
    (nil))

(note 2253 2251 2264 "" NOTE_INSN_DELETED)

(insn 2264 2253 2280 (set (reg:SI 795)
        (ashift:SI (reg:SI 788)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (nil)
    (expr_list:REG_DEAD (reg:SI 788)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 788)
                (const_int 16 [0x10]))
            (nil))))

(insn 2280 2264 2307 (set (reg:SI 801)
        (plus:SI (reg:SI 795)
            (reg:SI 681))) 205 {addsi3+1} (insn_list 2264 (nil))
    (expr_list:REG_DEAD (reg:SI 795)
        (nil)))

(insn 2307 2280 2308 (set (reg:DF 813)
        (mem/s:DF (plus:SI (reg:SI 327)
                (reg:SI 692)) 0)) 69 {movdf+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 327)
                (reg:SI 692)) 0)
        (nil)))

(insn 2308 2307 2310 (set (mem/s:DF (plus:SI (reg:SI 327)
                (reg:SI 801)) 0)
        (reg:DF 813)) 69 {movdf+1} (insn_list 2280 (insn_list 2307 (nil)))
    (expr_list:REG_DEAD (reg:DF 813)
        (expr_list:REG_DEAD (reg:SI 801)
            (nil))))

(note 2310 2308 2317 "" NOTE_INSN_DELETED)

(note 2317 2310 2318 "" NOTE_INSN_DELETED)

(note 2318 2317 2321 "" NOTE_INSN_DELETED)

(insn 2321 2318 2337 (set (reg:SI 820)
        (ashift:SI (mem/s:SI (plus:SI (reg:SI 664)
                    (reg:SI 663)) 0)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (nil)
    (nil))

(insn 2337 2321 2368 (set (reg:SI 826)
        (plus:SI (plus:SI (reg:SI 820)
                (reg:SI 681))
            (const_int -16 [0xfffffff0]))) 206 {movsi_lea} (insn_list 2321 (nil))
    (expr_list:REG_DEAD (reg:SI 820)
        (nil)))

(insn 2368 2337 2370 (set (reg:DF 841)
        (plus:DF (mem/s:DF (plus:SI (reg:SI 344)
                    (reg:SI 692)) 0)
            (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 753)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 344)
                (reg:SI 826)) 0)
        (nil)))

(insn 2370 2368 2372 (set (mem/s:DF (plus:SI (reg:SI 344)
                (reg:SI 826)) 0)
        (reg:DF 841)) 69 {movdf+1} (insn_list 2337 (insn_list 2368 (nil)))
    (expr_list:REG_DEAD (reg:DF 841)
        (expr_list:REG_DEAD (reg:SI 826)
            (nil))))

(note 2372 2370 2384 "" NOTE_INSN_DELETED)

(insn 2384 2372 2385 (set (reg:SI 849)
        (mem/s:SI (plus:SI (reg:SI 664)
                (reg:SI 663)) 0)) 48 {movsi+2} (nil)
    (nil))

(note 2385 2384 2387 "" NOTE_INSN_DELETED)

(insn 2387 2385 2389 (set (mem/s:SI (plus:SI (reg:SI 664)
                (reg:SI 663)) 0)
        (plus:SI (reg:SI 849)
            (const_int 1 [0x1]))) 205 {addsi3+1} (insn_list 2384 (nil))
    (nil))

(note 2389 2387 2400 "" NOTE_INSN_DELETED)

(insn 2400 2389 2416 (set (reg:SI 856)
        (ashift:SI (reg:SI 849)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (nil)
    (expr_list:REG_DEAD (reg:SI 849)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 849)
                (const_int 16 [0x10]))
            (nil))))

(insn 2416 2400 2447 (set (reg:SI 862)
        (plus:SI (reg:SI 856)
            (reg:SI 681))) 205 {addsi3+1} (insn_list 2400 (nil))
    (expr_list:REG_DEAD (reg:SI 856)
        (nil)))

(insn 2447 2416 2449 (set (reg:DF 877)
        (plus:DF (mem/s:DF (plus:SI (reg:SI 327)
                    (reg:SI 692)) 0)
            (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 753)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 327)
                (reg:SI 862)) 0)
        (nil)))

(insn 2449 2447 2451 (set (mem/s:DF (plus:SI (reg:SI 327)
                (reg:SI 862)) 0)
        (reg:DF 877)) 69 {movdf+1} (insn_list 2416 (insn_list 2447 (nil)))
    (expr_list:REG_DEAD (reg:DF 877)
        (expr_list:REG_DEAD (reg:SI 862)
            (nil))))

(note 2451 2449 2458 "" NOTE_INSN_DELETED)

(note 2458 2451 2459 "" NOTE_INSN_DELETED)

(note 2459 2458 2462 "" NOTE_INSN_DELETED)

(insn 2462 2459 2478 (set (reg:SI 884)
        (ashift:SI (mem/s:SI (plus:SI (reg:SI 664)
                    (reg:SI 663)) 0)
            (const_int 4 [0x4]))) 296 {ashlqi3+2} (nil)
    (nil))

(insn 2478 2462 2509 (set (reg:SI 890)
        (plus:SI (plus:SI (reg:SI 884)
                (reg:SI 681))
            (const_int -16 [0xfffffff0]))) 206 {movsi_lea} (insn_list 2462 (nil))
    (expr_list:REG_DEAD (reg:SI 884)
        (nil)))

(insn 2509 2478 2511 (set (reg:DF 905)
        (plus:DF (mem/s:DF (plus:SI (reg:SI 344)
                    (reg:SI 692)) 0)
            (mem/s:DF (plus:SI (reg:SI 330)
                    (reg:SI 753)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg:SI 344)
                (reg:SI 890)) 0)
        (expr_list:REG_DEAD (reg:SI 692)
            (nil))))

(insn 2511 2509 2517 (set (mem/s:DF (plus:SI (reg:SI 344)
                (reg:SI 890)) 0)
        (reg:DF 905)) 69 {movdf+1} (insn_list 2478 (insn_list 2509 (nil)))
    (expr_list:REG_DEAD (reg:DF 905)
        (expr_list:REG_DEAD (reg:SI 890)
            (nil))))
;; End of basic block 59

(note 2517 2511 2519 "" NOTE_INSN_DELETED_LABEL)

(note 2519 2517 2520 "" NOTE_INSN_LOOP_CONT)

;; Start of basic block 60, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 68 79 80 87 88 179 310 325 327 329 330 333 344 649 663 664 681 691 753
(code_label 2520 2519 3119 49 "" [num uses: 3])

(note 3119 2520 2521 [bb 60] NOTE_INSN_BASIC_BLOCK)

(note 2521 3119 2523 "" NOTE_INSN_DELETED)

(insn 2523 2521 2952 (set (reg/v:SI 68)
        (plus:SI (reg/v:SI 68)
            (const_int 1 [0x1]))) 205 {addsi3+1} (nil)
    (nil))

(note 2952 2523 1012 "" NOTE_INSN_LOOP_VTOP)

(note 1012 2952 1013 "" NOTE_INSN_DELETED)

(note 1013 1012 1014 "" NOTE_INSN_DELETED)

(jump_insn 1014 1013 2529 (parallel[ 
            (set (pc)
                (if_then_else (ge (plus:SI (reg/v:SI 310)
                            (const_int -1 [0xffffffff]))
                        (const_int 0 [0x0]))
                    (label_ref 1017)
                    (pc)))
            (set (reg/v:SI 310)
                (plus:SI (reg/v:SI 310)
                    (const_int -1 [0xffffffff])))
        ] ) 354 {decrement_and_branch_until_zero+1} (nil)
    (nil))
;; End of basic block 60

(note 2529 1014 2530 "" NOTE_INSN_LOOP_END)

;; Start of basic block 61, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 79 80 87 88 179
(code_label 2530 2529 3120 48 "" [num uses: 1])

(note 3120 2530 2531 [bb 61] NOTE_INSN_BASIC_BLOCK)

(note 2531 3120 2533 0 NOTE_INSN_BLOCK_END)

(note 2533 2531 2535 "" NOTE_INSN_DELETED)

(insn 2535 2533 2536 (set (reg:SI 906)
        (plus:SI (reg/v:SI 80)
            (const_int -1 [0xffffffff]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2536 2535 2538 (set (reg:SI 907)
        (ashift:SI (reg:SI 906)
            (const_int 2 [0x2]))) 295 {ashlqi3+1} (insn_list 2535 (nil))
    (nil))

(note 2538 2536 2540 "" NOTE_INSN_DELETED)

(insn 2540 2538 2542 (parallel[ 
            (set (reg:SF 909)
                (float:SF (mem/s:SI (plus:SI (plus:SI (reg:SI 6 %ebp)
                                (reg:SI 907))
                            (const_int -256 [0xffffff00])) 0)))
            (clobber (mem:SI (plus:SI (reg:SI 6 %ebp)
                        (const_int -240 [0xffffff10])) 0))
        ] ) 157 {floatsisf2+1} (insn_list 2536 (nil))
    (nil))

(note 2542 2540 2734 "" NOTE_INSN_DELETED)

(insn 2734 2542 2545 (set (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -280 [0xfffffee8])) 0)
        (float_extend:DF (reg:SF 909))) 116 {extenddfxf2-1} (insn_list 2540 (nil))
    (expr_list:REG_DEAD (reg:SF 909)
        (nil)))

(insn 2545 2734 2547 (set (reg:SI 911)
        (ashift:SI (reg:SI 906)
            (const_int 3 [0x3]))) 295 {ashlqi3+1} (nil)
    (expr_list:REG_DEAD (reg:SI 906)
        (nil)))

(insn 2547 2545 2548 (set (reg:SI 912)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -56 [0xffffffc8]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2548 2547 2737 (set (reg:DF 940)
        (mult:DF (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -280 [0xfffffee8])) 0)
            (mem/s:DF (plus:SI (reg:SI 912)
                    (reg:SI 911)) 0))) 403 {ffshi_1+1} (insn_list 2545 (insn_list 2547 (nil)))
    (expr_list:REG_EQUIV (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -280 [0xfffffee8])) 0)
        (nil)))

(insn 2737 2548 2554 (set (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -280 [0xfffffee8])) 0)
        (reg:DF 940)) 69 {movdf+1} (insn_list 2548 (nil))
    (expr_list:REG_DEAD (reg:DF 940)
        (nil)))

(insn 2554 2737 2740 (set (reg:DF 941)
        (mult:DF (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -280 [0xfffffee8])) 0)
            (mem/s:DF (plus:SI (reg:SI 912)
                    (reg:SI 911)) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_EQUIV (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -280 [0xfffffee8])) 0)
        (expr_list:REG_DEAD (reg:SI 912)
            (expr_list:REG_DEAD (reg:SI 911)
                (nil)))))

(insn 2740 2554 2556 (set (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -280 [0xfffffee8])) 0)
        (reg:DF 941)) 69 {movdf+1} (insn_list 2554 (nil))
    (expr_list:REG_DEAD (reg:DF 941)
        (nil)))

(note 2556 2740 2557 "" NOTE_INSN_DELETED)

(insn 2557 2556 2558 (set (reg:DF 916)
        (div:DF (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -272 [0xfffffef0])) 0)
            (reg/v:DF 88))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 2558 2557 2562 (set (reg/v:DF 84)
        (sqrt:DF (reg:DF 916))) 273 {sqrtdf2} (insn_list 2557 (nil))
    (expr_list:REG_DEAD (reg:DF 916)
        (nil)))

(note 2562 2558 2564 "" NOTE_INSN_DELETED)

(insn 2564 2562 2566 (set (reg/v:DF 86)
        (mem:DF (reg/v/u:SI 22) 0)) 69 {movdf+1} (nil)
    (nil))

(note 2566 2564 2568 "" NOTE_INSN_DELETED)

(note 2568 2566 2569 "" NOTE_INSN_DELETED)

(insn 2569 2568 2570 (set (reg:DF 919)
        (mult:DF (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -280 [0xfffffee8])) 0)
            (mem/u:DF (symbol_ref/u:SI ("*.LC9")) 0))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 2570 2569 2571 (set (reg:DF 918)
        (plus:DF (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                    (const_int -272 [0xfffffef0])) 0)
            (reg:DF 919))) 403 {ffshi_1+1} (insn_list 2569 (nil))
    (expr_list:REG_DEAD (reg:DF 919)
        (nil)))

(insn 2571 2570 2572 (set (reg:DF 918)
        (div:DF (reg:DF 918)
            (reg/v:DF 88))) 403 {ffshi_1+1} (insn_list 2570 (nil))
    (nil))

(insn 2572 2571 2574 (set (reg:DF 921)
        (sqrt:DF (reg:DF 918))) 273 {sqrtdf2} (insn_list 2571 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/v/u:SI 22) 0)
        (expr_list:REG_DEAD (reg:DF 918)
            (nil))))

(insn 2574 2572 2576 (set (mem:DF (reg/v/u:SI 22) 0)
        (reg:DF 921)) 69 {movdf+1} (insn_list 2572 (nil))
    (expr_list:REG_DEAD (reg:DF 921)
        (nil)))

(note 2576 2574 2577 "" NOTE_INSN_DELETED)

(insn 2577 2576 2767 (set (reg:DF 943)
        (minus:DF (mem:DF (reg/v/u:SI 22) 0)
            (reg/v:DF 84))) 403 {ffshi_1+1} (insn_list 2558 (nil))
    (expr_list:REG_EQUIV (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -288 [0xfffffee0])) 0)
        (expr_list:REG_DEAD (reg/v:DF 84)
            (nil))))

(insn 2767 2577 2579 (set (mem/f:DF (plus:SI (reg:SI 6 %ebp)
                (const_int -288 [0xfffffee0])) 0)
        (reg:DF 943)) 69 {movdf+1} (insn_list 2577 (nil))
    (expr_list:REG_DEAD (reg:DF 943)
        (nil)))

(note 2579 2767 2580 "" NOTE_INSN_DELETED)

(note 2580 2579 2581 "" NOTE_INSN_DELETED)

(insn 2581 2580 2582 (set (cc0)
        (compare (mem:SI (reg/v/u:SI 25) 0)
            (const_int 1 [0x1]))) 12 {cmpsi_1} (nil)
    (nil))

(jump_insn 2582 2581 2583 (set (pc)
        (if_then_else (gt (cc0)
                (const_int 0 [0x0]))
            (label_ref 2796)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 61

(note 2583 2582 3121 0 NOTE_INSN_BLOCK_BEG)

;; Start of basic block 62, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 79 80 86 87 88 179 907
(note 3121 2583 2587 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 2587 3121 2588 (set (reg:SI 924)
        (mem:SI (reg/v/u:SI 23) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem:SI (reg/v/u:SI 23) 0)
        (nil)))

(insn 2588 2587 2590 (set (mem/s:SI (const:SI (plus:SI (symbol_ref:SI ("__g77_cilist_2.3"))
                    (const_int 4 [0x4]))) 0)
        (reg:SI 924)) 48 {movsi+2} (insn_list 2587 (nil))
    (expr_list:REG_DEAD (reg:SI 924)
        (nil)))

(insn 2590 2588 2592 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -12 [0xfffffff4]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2592 2590 2594 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("__g77_cilist_2.3"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2594 2592 2595 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("s_wsfe")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2595 2594 2597 "" NOTE_INSN_DELETED)

(insn 2597 2595 2599 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2599 2597 2601 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 27 [0x1b])) 44 {movsi-2} (nil)
    (nil))

(insn 2601 2599 2603 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC15"))) 44 {movsi-2} (nil)
    (nil))

(insn 2603 2601 2605 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2605 2603 2606 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2606 2605 2614 "" NOTE_INSN_DELETED)

(insn 2614 2606 2616 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int 32 [0x20]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2616 2614 2618 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2618 2616 2976 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 4 [0x4])) 44 {movsi-2} (nil)
    (nil))

(insn 2976 2618 2620 (set (reg:SI 960)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -260 [0xfffffefc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2620 2976 2622 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (reg:SI 960)) 44 {movsi-2} (insn_list 2976 (nil))
    (expr_list:REG_DEAD (reg:SI 960)
        (nil)))

(insn 2622 2620 2624 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2624 2622 2625 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2625 2624 2627 "" NOTE_INSN_DELETED)

(insn 2627 2625 2629 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2629 2627 2631 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 9 [0x9])) 44 {movsi-2} (nil)
    (nil))

(insn 2631 2629 2633 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC16"))) 44 {movsi-2} (nil)
    (nil))

(insn 2633 2631 2635 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2635 2633 2636 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2636 2635 2638 "" NOTE_INSN_DELETED)

(insn 2638 2636 2640 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int 32 [0x20]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2640 2638 2642 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2642 2640 2644 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 8 [0x8])) 44 {movsi-2} (nil)
    (nil))

(insn 2644 2642 2646 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (reg/v/u:SI 22)) 44 {movsi-2} (nil)
    (nil))

(insn 2646 2644 2648 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2648 2646 2649 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2649 2648 2651 "" NOTE_INSN_DELETED)

(insn 2651 2649 2653 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2653 2651 2655 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 17 [0x11])) 44 {movsi-2} (nil)
    (nil))

(insn 2655 2653 2657 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC17"))) 44 {movsi-2} (nil)
    (nil))

(insn 2657 2655 2659 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2659 2657 2660 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2660 2659 2662 "" NOTE_INSN_DELETED)

(insn 2662 2660 2664 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int 32 [0x20]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2664 2662 2666 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2666 2664 2974 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 4 [0x4])) 44 {movsi-2} (nil)
    (nil))

(note 2974 2666 2671 "" NOTE_INSN_DELETED)

(insn 2671 2974 2673 (set (reg:SI 930)
        (plus:SI (plus:SI (reg:SI 6 %ebp)
                (reg:SI 907))
            (const_int -256 [0xffffff00]))) 206 {movsi_lea} (nil)
    (expr_list:REG_DEAD (reg:SI 907)
        (nil)))

(insn 2673 2671 2675 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (reg:SI 930)) 44 {movsi-2} (insn_list 2671 (nil))
    (expr_list:REG_DEAD (reg:SI 930)
        (nil)))

(insn 2675 2673 2677 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2677 2675 2678 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2678 2677 2680 "" NOTE_INSN_DELETED)

(insn 2680 2678 2682 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2682 2680 2684 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 20 [0x14])) 44 {movsi-2} (nil)
    (nil))

(insn 2684 2682 2686 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC18"))) 44 {movsi-2} (nil)
    (nil))

(insn 2686 2684 2688 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2688 2686 2689 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2689 2688 2700 "" NOTE_INSN_DELETED)

(insn 2700 2689 2702 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int 32 [0x20]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2702 2700 2704 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2704 2702 2981 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 8 [0x8])) 44 {movsi-2} (nil)
    (nil))

(insn 2981 2704 2706 (set (reg:SI 962)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -272 [0xfffffef0]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2706 2981 2708 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (reg:SI 962)) 44 {movsi-2} (insn_list 2981 (nil))
    (expr_list:REG_DEAD (reg:SI 962)
        (nil)))

(insn 2708 2706 2710 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2710 2708 2711 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2711 2710 2713 "" NOTE_INSN_DELETED)

(insn 2713 2711 2715 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2715 2713 2717 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 12 [0xc])) 44 {movsi-2} (nil)
    (nil))

(insn 2717 2715 2719 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC19"))) 44 {movsi-2} (nil)
    (nil))

(insn 2719 2717 2721 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2721 2719 2722 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2722 2721 2742 "" NOTE_INSN_DELETED)

(insn 2742 2722 2744 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int 32 [0x20]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2744 2742 2746 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2746 2744 2986 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 8 [0x8])) 44 {movsi-2} (nil)
    (nil))

(insn 2986 2746 2748 (set (reg:SI 964)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -280 [0xfffffee8]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2748 2986 2750 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (reg:SI 964)) 44 {movsi-2} (insn_list 2986 (nil))
    (expr_list:REG_DEAD (reg:SI 964)
        (nil)))

(insn 2750 2748 2752 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2752 2750 2753 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2753 2752 2755 "" NOTE_INSN_DELETED)

(insn 2755 2753 2757 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2757 2755 2759 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 7 [0x7])) 44 {movsi-2} (nil)
    (nil))

(insn 2759 2757 2761 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC20"))) 44 {movsi-2} (nil)
    (nil))

(insn 2761 2759 2763 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2763 2761 2764 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2764 2763 2769 "" NOTE_INSN_DELETED)

(insn 2769 2764 2771 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int 32 [0x20]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2771 2769 2773 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2773 2771 2988 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 8 [0x8])) 44 {movsi-2} (nil)
    (nil))

(insn 2988 2773 2775 (set (reg:SI 965)
        (plus:SI (reg:SI 6 %ebp)
            (const_int -288 [0xfffffee0]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2775 2988 2777 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (reg:SI 965)) 44 {movsi-2} (insn_list 2988 (nil))
    (expr_list:REG_DEAD (reg:SI 965)
        (nil)))

(insn 2777 2775 2779 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2779 2777 2780 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2780 2779 2782 "" NOTE_INSN_DELETED)

(insn 2782 2780 2784 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2784 2782 2786 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 6 [0x6])) 44 {movsi-2} (nil)
    (nil))

(insn 2786 2784 2788 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC21"))) 44 {movsi-2} (nil)
    (nil))

(insn 2788 2786 2790 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2790 2788 2792 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(insn 2792 2790 2794 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int 32 [0x20]))) 205 {addsi3+1} (nil)
    (nil))

(call_insn 2794 2792 3058 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("e_wsfe")) 0)
            (const_int 0 [0x0]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(insn 3058 2794 2795 (use (const_int 0 [0x0])) -1 (nil)
    (nil))
;; End of basic block 62

(note 2795 3058 2796 0 NOTE_INSN_BLOCK_END)

;; Start of basic block 63, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 79 80 86 87 88 179
(code_label 2796 2795 3122 76 "" [num uses: 1])

(note 3122 2796 2798 [bb 63] NOTE_INSN_BASIC_BLOCK)

(note 2798 3122 2799 "" NOTE_INSN_DELETED)

(note 2799 2798 2800 "" NOTE_INSN_DELETED)

(insn 2800 2799 2801 (set (reg:DF 945)
        (minus:DF (mem:DF (reg/v/u:SI 22) 0)
            (reg/v:DF 86))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_DEAD (reg/v:DF 86)
        (nil)))

(insn 2801 2800 2803 (set (reg:DF 946)
        (abs:DF (reg:DF 945))) 268 {absdf2} (insn_list 2800 (nil))
    (expr_list:REG_DEAD (reg:DF 945)
        (nil)))

(note 2803 2801 2804 "" NOTE_INSN_DELETED)

(insn 2804 2803 2805 (parallel[ 
            (set (cc0)
                (compare (reg:DF 946)
                    (mem/u:DF (symbol_ref/u:SI ("*.LC22")) 0)))
            (clobber (scratch:HI))
        ] ) 24 {*cmpsf_cc_1-5} (insn_list 2801 (nil))
    (expr_list:REG_UNUSED (scratch:HI)
        (expr_list:REG_DEAD (reg:DF 946)
            (nil))))

(jump_insn 2805 2804 3123 (set (pc)
        (if_then_else (gt (cc0)
                (const_int 0 [0x0]))
            (label_ref 2810)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 63

;; Start of basic block 64, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 79 80 87 88 179
(note 3123 2805 2806 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 2806 3123 2807 (set (cc0)
        (compare (mem:SI (plus:SI (reg:SI 6 %ebp)
                    (const_int -260 [0xfffffefc])) 0)
            (const_int 3 [0x3]))) 12 {cmpsi_1} (nil)
    (nil))

(jump_insn 2807 2806 2810 (set (pc)
        (if_then_else (gt (cc0)
                (const_int 0 [0x0]))
            (label_ref 2922)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 64

;; Start of basic block 65, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 79 80 87 88 179
(code_label 2810 2807 3124 78 "" [num uses: 1])

(note 3124 2810 2812 [bb 65] NOTE_INSN_BASIC_BLOCK)

(note 2812 3124 2813 "" NOTE_INSN_DELETED)

(note 2813 2812 2815 "" NOTE_INSN_DELETED)

(note 2815 2813 2816 "" NOTE_INSN_DELETED)

(note 2816 2815 2818 "" NOTE_INSN_DELETED)

(note 2818 2816 2820 "" NOTE_INSN_DELETED)

(note 2820 2818 2821 "" NOTE_INSN_DELETED)

(insn 2821 2820 2822 (set (reg:SI 952)
        (plus:SI (mem/s:SI (plus:SI (plus:SI (mult:SI (reg/v:SI 80)
                            (const_int 4 [0x4]))
                        (reg:SI 6 %ebp))
                    (const_int -260 [0xfffffefc])) 0)
            (const_int 4 [0x4]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2822 2821 2823 (set (cc0)
        (compare (reg:SI 952)
            (const_int 30000 [0x7530]))) 12 {cmpsi_1} (insn_list 2821 (nil))
    (expr_list:REG_DEAD (reg:SI 952)
        (nil)))

(jump_insn 2823 2822 2825 (set (pc)
        (if_then_else (gt (cc0)
                (const_int 0 [0x0]))
            (label_ref 2842)
            (pc))) 349 {bleu+1} (nil)
    (nil))
;; End of basic block 65

(note 2825 2823 3125 "" NOTE_INSN_DELETED)

;; Start of basic block 66, registers live: 6 [bp] 7 [sp] 22 23 25 26 31 34 36 79 80 87 88 179
(note 3125 2825 2827 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 2827 3125 2829 (set (reg/v:SI 81)
        (reg/v:SI 80)) 48 {movsi+2} (nil)
    (expr_list:REG_DEAD (reg/v:SI 80)
        (nil)))

(note 2829 2827 2831 "" NOTE_INSN_DELETED)

(insn 2831 2829 2833 (set (reg/v:SI 80)
        (reg/v:SI 79)) 48 {movsi+2} (nil)
    (expr_list:REG_DEAD (reg/v:SI 79)
        (nil)))

(note 2833 2831 2835 "" NOTE_INSN_DELETED)

(insn 2835 2833 2837 (set (reg/v:SI 79)
        (reg/v:SI 81)) 48 {movsi+2} (insn_list 2827 (nil))
    (expr_list:REG_DEAD (reg/v:SI 81)
        (nil)))

(jump_insn 2837 2835 2838 (set (pc)
        (label_ref 960)) 351 {jump} (nil)
    (nil))
;; End of basic block 66

(barrier 2838 2837 2842)

;; Start of basic block 67, registers live: 6 [bp] 7 [sp] 23
(code_label 2842 2838 3126 79 "" [num uses: 1])

(note 3126 2842 2844 [bb 67] NOTE_INSN_BASIC_BLOCK)

(note 2844 3126 2848 0 NOTE_INSN_BLOCK_BEG)

(insn 2848 2844 2849 (set (reg:SI 955)
        (mem:SI (reg/v/u:SI 23) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/s:SI (const:SI (plus:SI (symbol_ref:SI ("__g77_cilist_3.4"))
                    (const_int 4 [0x4]))) 0)
        (expr_list:REG_DEAD (reg/v/u:SI 23)
            (nil))))

(insn 2849 2848 2851 (set (mem/s:SI (const:SI (plus:SI (symbol_ref:SI ("__g77_cilist_3.4"))
                    (const_int 4 [0x4]))) 0)
        (reg:SI 955)) 48 {movsi+2} (insn_list 2848 (nil))
    (expr_list:REG_DEAD (reg:SI 955)
        (nil)))

(insn 2851 2849 2853 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -12 [0xfffffff4]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2853 2851 2855 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("__g77_cilist_3.4"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2855 2853 2856 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("s_wsfe")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2856 2855 2858 "" NOTE_INSN_DELETED)

(insn 2858 2856 2860 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2860 2858 2862 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 7 [0x7])) 44 {movsi-2} (nil)
    (nil))

(insn 2862 2860 2864 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC23"))) 44 {movsi-2} (nil)
    (nil))

(insn 2864 2862 2866 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2866 2864 2867 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2867 2866 2869 "" NOTE_INSN_DELETED)

(insn 2869 2867 2871 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int 32 [0x20]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2871 2869 2873 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2873 2871 2875 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 53 [0x35])) 44 {movsi-2} (nil)
    (nil))

(insn 2875 2873 2877 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC24"))) 44 {movsi-2} (nil)
    (nil))

(insn 2877 2875 2879 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2879 2877 2880 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2880 2879 2882 "" NOTE_INSN_DELETED)

(insn 2882 2880 2884 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2884 2882 2886 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 58 [0x3a])) 44 {movsi-2} (nil)
    (nil))

(insn 2886 2884 2888 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC25"))) 44 {movsi-2} (nil)
    (nil))

(insn 2888 2886 2890 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2890 2888 2891 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2891 2890 2893 "" NOTE_INSN_DELETED)

(insn 2893 2891 2895 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int 32 [0x20]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2895 2893 2897 (set (reg:SI 7 %esp)
        (plus:SI (reg:SI 7 %esp)
            (const_int -4 [0xfffffffc]))) 205 {addsi3+1} (nil)
    (nil))

(insn 2897 2895 2899 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (const_int 28 [0x1c])) 44 {movsi-2} (nil)
    (nil))

(insn 2899 2897 2901 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref:SI ("*.LC26"))) 44 {movsi-2} (nil)
    (nil))

(insn 2901 2899 2903 (set (mem:SI (pre_dec:SI (reg:SI 7 %esp)) 0)
        (symbol_ref/u:SI ("*.LC7"))) 44 {movsi-2} (nil)
    (nil))

(call_insn 2903 2901 2905 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("do_fio")) 0)
            (const_int 16 [0x10]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(call_insn 2905 2903 2906 (set (reg:SI 0 %eax)
        (call (mem:QI (symbol_ref:SI ("e_wsfe")) 0)
            (const_int 0 [0x0]))) 375 {call_value+1} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 %eax)
        (nil))
    (nil))

(note 2906 2905 2909 0 NOTE_INSN_BLOCK_END)

(note 2909 2906 2913 "" NOTE_INSN_DELETED)
;; End of basic block 67

(note 2913 2909 2916 "" NOTE_INSN_DELETED_LABEL)

(note 2916 2913 2919 "" NOTE_INSN_DELETED)

(note 2919 2916 2922 0 NOTE_INSN_BLOCK_END)

;; Start of basic block 68, registers live: 6 [bp]
(code_label 2922 2919 3127 2 "" [num uses: 4])

(note 3127 2922 0 [bb 68] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 68


;; Function coacon_

46 registers.

Register 22 used 2 times across 14 insns in block 0; set 1 time; user var; GENERAL_REGS or none; pointer.

Register 23 used 2 times across 18 insns in block 0; set 1 time; user var; GENERAL_REGS or none; pointer.

Register 24 used 4 times across 42 insns in block 0; set 1 time; user var; GENERAL_REGS or none; pointer.

Register 25 used 4 times across 34 insns in block 0; set 1 time; user var; GENERAL_REGS or none; pointer.

Register 26 used 4 times across 30 insns in block 0; set 1 time; user var; GENERAL_REGS or none; pointer.

Register 27 used 4 times across 32 insns in block 0; set 1 time; user var; GENERAL_REGS or none; pointer.

Register 28 used 2 times across 2 insns in block 0; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 29 used 4 times across 13 insns in block 0; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 30 used 2 times across 4 insns in block 0; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 31 used 2 times across 2 insns in block 0; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 32 used 4 times across 12 insns in block 0; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 33 used 2 times across 2 insns in block 0; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 34 used 2 times across 2 insns in block 0; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 36 used 2 times across 3 insns in block 0; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 37 used 2 times across 2 insns in block 0; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 39 used 2 times across 2 insns in block 0; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 40 used 2 times across 2 insns in block 0; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 42 used 2 times across 3 insns in block 0; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 43 used 2 times across 2 insns in block 0; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 45 used 2 times across 2 insns in block 0; set 1 time; 8 bytes; FLOAT_REGS or none.

1 basic blocks.

Basic block 0: first insn 62, last 54.
Predecessors:  ENTRY (fallthru)
Successors:  EXIT (fallthru)
Registers live at start: 6 7 16
Registers live at end: 6 7

;; Register 22 in 4.
;; Register 23 in 5.
;; Register 24 in 3.
;; Register 25 in 2.
;; Register 26 in 0.
;; Register 27 in 1.
;; Register 28 in 8.
;; Register 29 in 10.
;; Register 30 in 8.
;; Register 31 in 9.
;; Register 32 in 11.
;; Register 33 in 8.
;; Register 34 in 8.
;; Register 36 in 8.
;; Register 37 in 9.
;; Register 39 in 8.
;; Register 40 in 10.
;; Register 42 in 10.
;; Register 43 in 11.
;; Register 45 in 10.
(note 2 0 62 "" NOTE_INSN_DELETED)

;; Start of basic block 0, registers live: 6 [bp] 7 [sp] 16 []
(note 62 2 4 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 4 62 6 (set (reg/v/u:SI 22)
        (mem/u/f:SI (reg:SI 16 %argp) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (reg:SI 16 %argp) 0)
        (nil)))

(insn 6 4 8 (set (reg/v/u:SI 23)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 4 [0x4])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 4 [0x4])) 0)
        (nil)))

(insn 8 6 10 (set (reg/v/u:SI 24)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 8 [0x8])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 8 [0x8])) 0)
        (nil)))

(insn 10 8 12 (set (reg/v/u:SI 25)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 12 [0xc])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 12 [0xc])) 0)
        (nil)))

(insn 12 10 14 (set (reg/v/u:SI 26)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 16 [0x10])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 16 [0x10])) 0)
        (nil)))

(insn 14 12 15 (set (reg/v/u:SI 27)
        (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 20 [0x14])) 0)) 48 {movsi+2} (nil)
    (expr_list:REG_EQUIV (mem/u/f:SI (plus:SI (reg:SI 16 %argp)
                (const_int 20 [0x14])) 0)
        (nil)))

(note 15 14 16 "" NOTE_INSN_FUNCTION_BEG)

(note 16 15 18 "" NOTE_INSN_DELETED)

(note 18 16 20 "" NOTE_INSN_DELETED)

(note 20 18 22 "" NOTE_INSN_DELETED)

(insn 22 20 23 (set (reg:DF 29)
        (mem:DF (reg/v/u:SI 22) 0)) 69 {movdf+1} (insn_list 4 (nil))
    (expr_list:REG_DEAD (reg/v/u:SI 22)
        (nil)))

(insn 23 22 24 (set (reg:DF 28)
        (mult:DF (reg:DF 29)
            (mem/s:DF (reg/v/u:SI 26) 0))) 403 {ffshi_1+1} (insn_list 12 (insn_list 22 (nil)))
    (nil))

(insn 24 23 26 (set (reg:DF 30)
        (plus:DF (reg:DF 28)
            (mem/s:DF (reg/v/u:SI 25) 0))) 403 {ffshi_1+1} (insn_list 10 (insn_list 23 (nil)))
    (expr_list:REG_DEAD (reg:DF 28)
        (nil)))

(insn 26 24 27 (set (reg:DF 32)
        (mem:DF (reg/v/u:SI 23) 0)) 69 {movdf+1} (insn_list 6 (nil))
    (expr_list:REG_DEAD (reg/v/u:SI 23)
        (nil)))

(insn 27 26 28 (set (reg:DF 31)
        (mult:DF (reg:DF 32)
            (mem/s:DF (reg/v/u:SI 27) 0))) 403 {ffshi_1+1} (insn_list 14 (insn_list 26 (nil)))
    (nil))

(insn 28 27 30 (set (reg:DF 33)
        (plus:DF (reg:DF 30)
            (reg:DF 31))) 403 {ffshi_1+1} (insn_list 24 (insn_list 27 (nil)))
    (expr_list:REG_EQUIV (mem/s:DF (reg/v/u:SI 24) 0)
        (expr_list:REG_DEAD (reg:DF 30)
            (expr_list:REG_DEAD (reg:DF 31)
                (nil)))))

(insn 30 28 32 (set (mem/s:DF (reg/v/u:SI 24) 0)
        (reg:DF 33)) 69 {movdf+1} (insn_list 8 (insn_list 28 (nil)))
    (expr_list:REG_DEAD (reg:DF 33)
        (nil)))

(note 32 30 35 "" NOTE_INSN_DELETED)

(insn 35 32 36 (set (reg:DF 34)
        (mult:DF (reg:DF 29)
            (mem/s:DF (plus:SI (reg/v/u:SI 26)
                    (const_int 8 [0x8])) 0))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 36 35 39 (set (reg:DF 36)
        (plus:DF (reg:DF 34)
            (mem/s:DF (plus:SI (reg/v/u:SI 25)
                    (const_int 8 [0x8])) 0))) 403 {ffshi_1+1} (insn_list 35 (nil))
    (expr_list:REG_DEAD (reg:DF 34)
        (nil)))

(insn 39 36 40 (set (reg:DF 37)
        (mult:DF (reg:DF 32)
            (mem/s:DF (plus:SI (reg/v/u:SI 27)
                    (const_int 8 [0x8])) 0))) 403 {ffshi_1+1} (nil)
    (nil))

(insn 40 39 42 (set (reg:DF 39)
        (plus:DF (reg:DF 36)
            (reg:DF 37))) 403 {ffshi_1+1} (insn_list 36 (insn_list 39 (nil)))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg/v/u:SI 24)
                (const_int 8 [0x8])) 0)
        (expr_list:REG_DEAD (reg:DF 36)
            (expr_list:REG_DEAD (reg:DF 37)
                (nil)))))

(insn 42 40 44 (set (mem/s:DF (plus:SI (reg/v/u:SI 24)
                (const_int 8 [0x8])) 0)
        (reg:DF 39)) 69 {movdf+1} (insn_list 40 (nil))
    (expr_list:REG_DEAD (reg:DF 39)
        (nil)))

(note 44 42 47 "" NOTE_INSN_DELETED)

(insn 47 44 48 (set (reg:DF 40)
        (mult:DF (reg:DF 29)
            (mem/s:DF (plus:SI (reg/v/u:SI 26)
                    (const_int 16 [0x10])) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_DEAD (reg:DF 29)
        (expr_list:REG_DEAD (reg/v/u:SI 26)
            (nil))))

(insn 48 47 51 (set (reg:DF 42)
        (plus:DF (reg:DF 40)
            (mem/s:DF (plus:SI (reg/v/u:SI 25)
                    (const_int 16 [0x10])) 0))) 403 {ffshi_1+1} (insn_list 47 (nil))
    (expr_list:REG_DEAD (reg:DF 40)
        (expr_list:REG_DEAD (reg/v/u:SI 25)
            (nil))))

(insn 51 48 52 (set (reg:DF 43)
        (mult:DF (reg:DF 32)
            (mem/s:DF (plus:SI (reg/v/u:SI 27)
                    (const_int 16 [0x10])) 0))) 403 {ffshi_1+1} (nil)
    (expr_list:REG_DEAD (reg:DF 32)
        (expr_list:REG_DEAD (reg/v/u:SI 27)
            (nil))))

(insn 52 51 54 (set (reg:DF 45)
        (plus:DF (reg:DF 42)
            (reg:DF 43))) 403 {ffshi_1+1} (insn_list 48 (insn_list 51 (nil)))
    (expr_list:REG_EQUIV (mem/s:DF (plus:SI (reg/v/u:SI 24)
                (const_int 16 [0x10])) 0)
        (expr_list:REG_DEAD (reg:DF 42)
            (expr_list:REG_DEAD (reg:DF 43)
                (nil)))))

(insn 54 52 56 (set (mem/s:DF (plus:SI (reg/v/u:SI 24)
                (const_int 16 [0x10])) 0)
        (reg:DF 45)) 69 {movdf+1} (insn_list 52 (nil))
    (expr_list:REG_DEAD (reg:DF 45)
        (expr_list:REG_DEAD (reg/v/u:SI 24)
            (nil))))
;; End of basic block 0

(note 56 54 0 "" NOTE_INSN_DELETED)

